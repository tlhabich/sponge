# -*- coding: utf-8 -*-
"""
Physics-based material for PINN training (mainly: ODEs)
@author: TLH
"""
import math
import numpy as np
import copy
import matplotlib.pyplot as plt
import torch
from scipy.optimize import fsolve
import sys

# plot options
csfont = {'fontname':'Times New Roman'}
plt.rcParams.update({'font.size': 25})
plt.rcParams.update({'lines.linewidth': 6}) 
plt.rcParams.update({'axes.linewidth': 1.0}) 
plt.rcParams.update({'font.style': 'normal'})
plt.rcParams['axes.titlepad'] = 20
plt.rcParams.update({'lines.markersize': 8.0})
plt.rcParams.update({'xtick.major.size': 6.0})
plt.rcParams.update({'xtick.minor.size': 6.0})
plt.rcParams.update({'xtick.major.width': 4.0})
plt.rcParams.update({'xtick.minor.width': 4.0})
plt.rcParams.update({'ytick.major.size': 6.0})
plt.rcParams.update({'ytick.minor.size': 6.0})
plt.rcParams.update({'ytick.major.width': 4.0})
plt.rcParams.update({'ytick.minor.width': 4.0})
plt.rcParams.update({'xtick.major.pad': 12})
plt.rcParams.update({'ytick.major.pad': 12})
plt.rcParams.update({'grid.linestyle': '-'})
plt.rcParams.update({'grid.linewidth': 1.0})
plt.rcParams.update({'ytick.direction':'in'})
plt.rcParams.update({'xtick.direction':'in'})
plt.rcParams.update({'legend.fontsize':25})

imesblau   = [0/255,80/255,155/255] 
imesorange = [231/255,123/255,41/255] 
imesgruen  = [200/255,211/255,23/255]
schwarz=[0,0,0]
grau=[.4,.4,.4]

def rad2deg(angle_rad):
    return angle_rad*180/math.pi

def deg2rad(angle_deg):
    return angle_deg*math.pi/180

def GetParams(n_akt,mE):
    #identified parameters
    ks=np.array([[2.02023256],
     [1.97159102],
     [2.4882051 ],
     [2.00080934],
     [2.34899333]])
    rv=np.array([[0.45600159],
     [0.46417411],
     [0.6006374 ],
     [0.61229551],
     [0.64701415]])
    rc=np.array([[0.17073454],
     [0.21446962],
     [0.23289624],
     [0.20388286],
     [0.23209016]])
    k_HC = 4.35129531
    d_HC = 2.3060856
    qd_c=deg2rad(1)
    #########################################
    rp=24.1e-3
    Ap=639.827*(1e-3)**2
    eta_p=rp*Ap#pressure constant
    alpha_p=10#estimated from measurement data (PT1 pressure dynamics)
    h=[53.4e-3]#actuator height
    qmax_hc=deg2rad(10)
    hc_params={"k_HC":k_HC,"d_HC":d_HC,"qmax_hc":qmax_hc}
    J=np.zeros([n_akt,6])
    rS=np.zeros([n_akt,3])
    m=np.zeros([n_akt])
    
    #mass
    #no bellows
    mmiddle=0.0968
    mtip=0.0688
    #inertia J=[Jxx,Jxy,Jxz,Jyy,Jyz,Jzz]
    Jmiddle=np.array([96.755,-9.313 ,0.003,151.045,0.002,152.483])*(1e-3)**2
    Jtip=np.array([65.982,0,0,98.828,0,81.347])*(1e-3)**2
    #center of gravity vector rS=[rSx,rSy,rSz]
    rSmiddle=np.array([29.325,1.787,-0.001])*1e-3
    rStip=np.array([24.870,0,0])*1e-3
    
    for i in range(n_akt):
        if i<n_akt-1:
            J[i,:]=Jmiddle[:]
            rS[i,:]=rSmiddle[:]
            m[i]=mmiddle
        else:
            J[i,:]=Jtip[:]
            rS[i,:]=rStip[:]
            m[i]=mtip            
    #add mE
    dmax_mE=47.4e-3#at mE=0.1kg
    dmin_mE=38.7e-3
    rS_mE_x=dmin_mE+(mE/0.1)*(dmax_mE-dmin_mE)/2
    steiner_mE=mE*rS_mE_x**2
    J[-1,3]+=steiner_mE
    J[-1,5]+=steiner_mE
    rS[-1,0]=(rStip[0]*mtip+rS_mE_x*mE)/(mtip+mE)
    m[-1]+=mE
    return {"h":h,
            "J":J,
            "rS":rS,
            "eta_p":eta_p,
            "m":m,
            "alpha_p":alpha_p,
            "rv":rv,
            "ks":ks,
            "rc":rc,
            "hc_params":hc_params,
            "qd_c":qd_c}

def calc_g_KS0(beta,g_KSW,rotate_y,torch_flag=False):
    if torch_flag:
        if rotate_y: W_R_0=torch.tensor([[torch.cos(beta),0,torch.sin(beta)],[0,1,0],[-torch.sin(beta),0,torch.cos(beta)]])
        else: W_R_0=torch.tensor([[torch.cos(beta),-torch.sin(beta),0],[torch.sin(beta),torch.cos(beta),0],[0,0,1]])#around z
        g_KS0=torch.matmul(torch.transpose(W_R_0,0,1),g_KSW.reshape(3,1))
    else:
        if rotate_y: W_R_0=np.array([[math.cos(beta),0,math.sin(beta)],[0,1,0],[-math.sin(beta),0,math.cos(beta)]])
        else: W_R_0=np.array([[math.cos(beta),-math.sin(beta),0],[math.sin(beta),math.cos(beta),0],[0,0,1]])# around z
        g_KS0=np.dot(np.transpose(W_R_0),g_KSW)
    return g_KS0.reshape((3,1))

def tau_rc(rc,qd,n_akt,qd_c,notorch=True):
    if notorch:
        return np.multiply(rc.reshape((n_akt,1)),np.tanh(qd*math.pi/qd_c).reshape((n_akt,1))).reshape((n_akt,1))#tanh
    else:
        return torch.multiply(rc.reshape((n_akt,1)),torch.tanh(qd*math.pi/qd_c).reshape((n_akt,1))).reshape((n_akt,1))#tanh

def getDynamicTerms(n_akt,x_k,g_KS0,mE,first_order_dyn=False):
    q,qd,p=read_xk(x_k,n_akt)
    params=GetParams(n_akt,mE)
    l=params["h"]
    #J
    J=params["J"]
    J1=J[0]
    J2=J[1]
    J3=J[2]
    J4=J[3]
    J5=J[4]
    #rS
    rS=params["rS"]
    rS1=rS[0]
    rS2=rS[1]
    rS3=rS[2]
    rS4=rS[3]
    rS5=rS[4]
    m=params["m"]
    g=g_KS0
        
    #Init
    Mass=np.zeros([n_akt,n_akt])
    cor=np.zeros([n_akt,1])
    grav=np.zeros([n_akt,1])
    
    if first_order_dyn==False:
    
        #Mass MAPLE
        t266 = q[1]
        t220 = math.sin(t266)
        t262 = J2[1]
        t365 = t220 * t262
        t364 = -0.5e0 * t365
        t237 = rS2[0]
        t272 = l[0]
        t363 = -t237 - t272
        t224 = math.cos(t266)
        t235 = rS2[2]
        t338 = t220 * t235
        t362 = t224 * t237 + t338
        t265 = q[2]
        t223 = math.cos(t265)
        t267 = q[0]
        t225 = math.cos(t267)
        t328 = t225 * t223
        t219 = math.sin(t265)
        t221 = math.sin(t267)
        t333 = t221 * t219
        t201 = t224 * t328 - t333
        t360 = q[3]
        t218 = math.sin(t360)
        t340 = t220 * t225
        t302 = t218 * t340
        t317 = math.cos(t360)
        t167 = t201 * t317 - t302
        t329 = t225 * t219
        t200 = -t221 * t223 - t224 * t329
        t264 = q[4]
        t217 = math.sin(t264)
        t222 = math.cos(t264)
        t132 = t167 * t222 + t200 * t217
        t361 = -0.5e0 * t221
        t354 = 0.5e0 * t225
        t215 = t221 ** 2
        t216 = t225 ** 2
        t332 = t223 * t224
        t199 = t221 * t332 + t329
        t295 = t220 * t317
        t164 = t199 * t218 + t221 * t295
        t359 = 0.5e0 * t164
        t166 = t201 * t218 + t225 * t295
        t358 = 0.5e0 * t166
        t341 = t220 * t223
        t196 = t218 * t341 - t224 * t317
        t357 = -0.5e0 * t196
        t356 = 0.5e0 * t221
        t355 = 0.5e0 * t224
        t198 = -t224 * t333 + t328
        t252 = J3[5]
        t255 = J3[2]
        t253 = J3[4]
        t337 = t220 * t253
        t141 = t198 * t252 + t199 * t255 - t221 * t337
        t256 = J3[1]
        t254 = J3[3]
        t336 = t220 * t254
        t142 = t198 * t253 + t199 * t256 - t221 * t336
        t257 = J3[0]
        t335 = t220 * t256
        t143 = t198 * t255 + t199 * t257 - t221 * t335
        t86 = -t142 * t224 + (t141 * t219 - t143 * t223) * t220
        t352 = t86 * t224
        t144 = t200 * t252 + t201 * t255 - t225 * t337
        t145 = t200 * t253 + t201 * t256 - t225 * t336
        t146 = t200 * t255 + t201 * t257 - t225 * t335
        t87 = -t145 * t224 + (t144 * t219 - t146 * t223) * t220
        t351 = t87 * t224
        t345 = t198 * t217
        t296 = t199 * t317
        t342 = t220 * t221
        t303 = t218 * t342
        t165 = t296 - t303
        t348 = t165 * t222
        t278 = t348 / 2 + t345 / 2
        t129 = -t165 * t217 + t198 * t222
        t130 = t345 + t348
        t226 = rS5[2]
        t227 = rS5[1]
        t228 = rS5[0]
        t90 = t129 * t226 + t130 * t228 - t164 * t227
        t350 = t278 * t272 + t90
        t131 = -t167 * t217 + t200 * t222
        t349 = t131 * t226 - t166 * t227 + (t228 + t272 / 2) * t132
        t197 = -t224 * t218 - t223 * t295
        t346 = t197 * t222
        t343 = t219 * t220
        t233 = rS3[1]
        t339 = t220 * t233
        t188 = t197 * t272
        t173 = t221 * t188
        t261 = J2[2]
        t330 = t224 * t261
        t213 = t225 * t272
        t162 = -t197 * t217 + t222 * t343
        t304 = t217 * t343
        t163 = t304 + t346
        t327 = t162 * t226 + t163 * t228 + t196 * t227 + (t346 / 2 + t304 / 2) * t272
        t229 = rS4[2]
        t230 = rS4[1]
        t231 = rS4[0]
        t109 = t164 * t229 + t165 * t231 + t198 * t230
        t206 = t272 * t303
        t294 = t272 * t317
        t157 = t199 * t294 - t206
        t326 = -t109 - t157
        t110 = t166 * t229 + t167 * t231 + t200 * t230
        t187 = t201 * t294
        t158 = -t272 * t302 + t187
        t325 = -t110 - t158
        t135 = -t196 * t229 + t197 * t231 + t230 * t343
        t324 = -t135 - t188
        t232 = rS3[2]
        t234 = rS3[0]
        t286 = -t198 * t232 - t199 * t234
        t136 = -t221 * t339 - t286
        t189 = t199 * t272
        t323 = -t136 - t189
        t137 = t200 * t232 + t201 * t234 - t225 * t339
        t211 = t224 * t213
        t208 = t223 * t211
        t190 = -t272 * t333 + t208
        t322 = -t137 - t190
        t170 = t189 * t340
        t321 = t157 * t340 + t170
        t305 = t220 ** 2 * t223 * t272
        t320 = t224 * t190 + t225 * t305
        t319 = t362 * t225
        t318 = t211 + t213
        t240 = J5[5]
        t241 = J5[4]
        t243 = J5[2]
        t111 = t162 * t240 + t163 * t243 + t196 * t241
        t242 = J5[3]
        t244 = J5[1]
        t112 = t162 * t241 + t163 * t244 + t196 * t242
        t245 = J5[0]
        t113 = t162 * t243 + t163 * t245 + t196 * t244
        t57 = t111 * t162 + t112 * t196 + t113 * t163
        t92 = t129 * t240 + t130 * t243 - t164 * t241
        t93 = t129 * t241 + t130 * t244 - t164 * t242
        t94 = t129 * t243 + t130 * t245 - t164 * t244
        t33 = t92 * t129 + t94 * t130 - t93 * t164
        t95 = t131 * t240 + t132 * t243 - t166 * t241
        t96 = t131 * t241 + t132 * t244 - t166 * t242
        t97 = t131 * t243 + t132 * t245 - t166 * t244
        t35 = t95 * t129 + t97 * t130 - t96 * t164
        t50 = t111 * t129 - t112 * t164 + t113 * t130
        t13 = t198 * t33 + t200 * t35 + t50 * t343
        t246 = J4[5]
        t247 = J4[4]
        t249 = J4[2]
        t114 = t164 * t246 + t165 * t249 + t198 * t247
        t248 = J4[3]
        t250 = J4[1]
        t115 = t164 * t247 + t165 * t250 + t198 * t248
        t251 = J4[0]
        t116 = t164 * t249 + t165 * t251 + t198 * t250
        t58 = t114 * t164 + t115 * t198 + t116 * t165
        t117 = t166 * t246 + t167 * t249 + t200 * t247
        t118 = t166 * t247 + t167 * t250 + t200 * t248
        t119 = t166 * t249 + t167 * t251 + t200 * t250
        t60 = t117 * t164 + t118 * t198 + t119 * t165
        t138 = -t196 * t246 + t197 * t249 + t247 * t343
        t139 = -t196 * t247 + t197 * t250 + t248 * t343
        t140 = -t196 * t249 + t197 * t251 + t250 * t343
        t73 = t138 * t164 + t139 * t198 + t140 * t165
        t23 = t198 * t58 + t200 * t60 + t73 * t343
        t316 = 0.5e0 * t23 + 0.5e0 * t13
        t34 = t92 * t131 + t94 * t132 - t93 * t166
        t36 = t95 * t131 + t97 * t132 - t96 * t166
        t51 = t111 * t131 - t112 * t166 + t113 * t132
        t14 = t198 * t34 + t200 * t36 + t51 * t343
        t59 = t114 * t166 + t115 * t200 + t116 * t167
        t61 = t117 * t166 + t118 * t200 + t119 * t167
        t74 = t138 * t166 + t139 * t200 + t140 * t167
        t24 = t198 * t59 + t200 * t61 + t74 * t343
        t315 = 0.5e0 * t24 + 0.5e0 * t14
        t15 = t224 * t50 + (t221 * t33 + t225 * t35) * t220
        t25 = t224 * t73 + (t221 * t58 + t225 * t60) * t220
        t314 = 0.5e0 * t25 + 0.5e0 * t15
        t16 = t224 * t51 + (t221 * t34 + t225 * t36) * t220
        t26 = t224 * t74 + (t221 * t59 + t225 * t61) * t220
        t313 = 0.5e0 * t26 + 0.5e0 * t16
        t20 = -t221 * t35 + t225 * t33
        t29 = -t221 * t60 + t225 * t58
        t312 = 0.5e0 * t29 + 0.5e0 * t20
        t21 = -t221 * t36 + t225 * t34
        t30 = -t221 * t61 + t225 * t59
        t311 = 0.5e0 * t30 + 0.5e0 * t21
        t40 = t92 * t162 + t94 * t163 + t93 * t196
        t41 = t95 * t162 + t97 * t163 + t96 * t196
        t22 = -t221 * t41 + t225 * t40
        t65 = -t114 * t196 + t115 * t343 + t116 * t197
        t66 = -t117 * t196 + t118 * t343 + t119 * t197
        t310 = t66 * t361 + t65 * t354 + 0.5e0 * t22
        t309 = 0.5e0 * t40 + 0.5e0 * t50
        t308 = 0.5e0 * t41 + 0.5e0 * t51
        t307 = -t157 - t350
        t306 = -t158 - t349
        t301 = -t188 - t327
        t300 = -t189 + t326
        t299 = -t190 + t325
        t77 = -t138 * t196 + t139 * t343 + t140 * t197
        t298 = t224 * t158 + t320
        t297 = (-t223 - 1) * t272
        t293 = t363 * t220 + t224 * t235
        t292 = -t189 + t307
        t291 = -t190 + t306
        t290 = t220 * t297
        t289 = (-t215 - t216) * t272 * t224
        t258 = J2[5]
        t285 = t220 * t258 + t330
        t259 = J2[4]
        t284 = t220 * t259 + t224 * t262
        t282 = t135 + t290
        t176 = -t224 * t233 + (t219 * t232 - t223 * t234) * t220
        t281 = t176 + t290
        t280 = 0.5e0 * t73 + 0.5e0 * t65 + t309
        t279 = 0.5e0 * t74 + 0.5e0 * t66 + t308
        t277 = t290 + t327
        t178 = -t224 * t253 + (t219 * t252 - t223 * t255) * t220
        t179 = -t224 * t254 + (t219 * t253 - t223 * t256) * t220
        t180 = -t224 * t256 + (t219 * t255 - t223 * t257) * t220
        t102 = t178 * t198 - t179 * t342 + t180 * t199
        t276 = 0.5e0 * t86 + 0.5e0 * t102 + t280
        t103 = t178 * t200 - t179 * t340 + t180 * t201
        t275 = 0.5e0 * t87 + 0.5e0 * t103 + t279
        t274 = t187 + t208 + (-t302 - t333) * t272 + t318
        t273 = -t296 - t329 + (-t224 - 1 - t332) * t221
        t271 = m[1]
        t270 = m[2]
        t269 = m[3]
        t268 = m[4]
        t260 = J2[3]
        t239 = rS1[0]
        t238 = rS1[2]
        t236 = rS2[1]
        t204 = t224 * t259 - t365
        t185 = -t221 * t260 + t284 * t225
        t182 = t284 * t221 + t225 * t260
        t175 = t225 * t188
        t172 = t293 * t225
        t171 = t293 * t221
        t169 = t220 * t173
        t168 = t178 * t343
        t155 = -t221 * t236 + t318 + t319
        t154 = -t225 * t236 + (t363 * t224 - t272 - t338) * t221
        t152 = t198 * t188
        t149 = t158 * t343
        t148 = t281 * t225
        t147 = t281 * t221
        t134 = t200 * t157
        t121 = t318 - t322
        t120 = -t219 * t213 + (t224 * t297 - t272 + t339) * t221 + t286
        t107 = t224 * (-t179 * t224 - t180 * t341 + t168)
        t106 = t282 * t225 + t175
        t105 = t282 * t221 + t173
        t101 = t224 * t137 - t176 * t340 + t320
        t100 = t323 * t224 + (t176 * t220 - t305) * t221
        t89 = t274 + t110
        t88 = t273 * t272 - t109 + t206
        t85 = t170 + (t136 * t225 + t322 * t221) * t220
        t84 = t323 * t221 + t322 * t225 + t289
        t83 = t277 * t225 + t175
        t82 = t277 * t221 + t173
        t81 = t144 * t200 - t145 * t340 + t146 * t201
        t80 = t144 * t198 - t145 * t342 + t146 * t199
        t79 = t141 * t200 - t142 * t340 + t143 * t201
        t78 = t141 * t198 - t142 * t342 + t143 * t199
        t76 = t224 * t77
        t75 = t77 * t343
        t72 = t110 * t343 + t324 * t200 + t149
        t71 = t198 * t135 + t326 * t343 + t152
        t70 = t224 * t110 + t324 * t340 + t298
        t69 = t169 + (t135 * t220 - t305) * t221 + t300 * t224
        t68 = t274 + t349
        t67 = t206 + (t273 - t278) * t272 - t90
        t64 = t200 * t109 + t325 * t198 + t134
        t63 = t300 * t221 + t299 * t225 + t289
        t62 = (t109 * t225 + t299 * t221) * t220 + t321
        t56 = t224 * t57
        t55 = t57 * t343
        t54 = t196 * t57
        t53 = -t221 * t81 + t225 * t79
        t52 = -t221 * t80 + t225 * t78
        t49 = -t327 * t166 - t349 * t196
        t48 = t327 * t164 + t350 * t196
        t47 = t349 * t224 + t301 * t340 + t298
        t46 = t169 + (t327 * t220 - t305) * t221 + t292 * t224
        t45 = t301 * t200 + t349 * t343 + t149
        t44 = t327 * t198 + t307 * t343 + t152
        t43 = t224 * t103 + (t221 * t79 + t225 * t81) * t220
        t42 = t224 * t102 + (t221 * t78 + t225 * t80) * t220
        t39 = -t349 * t164 + t350 * t166
        t38 = t292 * t221 + t291 * t225 + t289
        t37 = (t291 * t221 + t350 * t225) * t220 + t321
        t32 = t306 * t198 + t350 * t200 + t134
        t28 = t76 + (t221 * t65 + t225 * t66) * t220
        t27 = t198 * t65 + t200 * t66 + t75
        t19 = t56 + (t221 * t40 + t225 * t41) * t220
        t18 = t198 * t40 + t200 * t41 + t55
        t17 = t164 * t40 + t166 * t41 - t54
        t12 = t164 * t34 + t166 * t36 - t196 * t51
        t11 = t164 * t33 + t166 * t35 - t196 * t50
        t10 = -t54 + t268 * (t48 * t67 + t49 * t68) + t308 * t166 + t309 * t164
        t9 = t271 * (t172 * t154 + t171 * t155) + t270 * (t148 * t120 + t147 * t121) + t269 * (t105 * t89 + t106 * t88) + t268 * (t83 * t67 + t82 * t68) + ((t285 * t221 + t225 * t259) * t355 + t225 * t364 + t204 * t354 + t276) * t225 + (-0.5e0 * (-0.1e1 * t221 * t259 + t285 * t225) * t224 + t221 * t364 + t204 * t356 - 0.1e1 * t275) * t221
        t8 = t55 + t75 + t269 * (t71 * t88 + t72 * t89) + t268 * (t44 * t67 + t45 * t68) + t279 * t200 + t280 * t198
        t7 = t107 + t56 + t76 + t270 * (t100 * t120 + t101 * t121) + t269 * (t69 * t88 + t70 * t89) + t268 * (t46 * t67 + t47 * t68) + (t276 * t221 + t275 * t225) * t220
        t6 = t268 * (t39 * t38 + t48 * t83 + t49 * t82) + t21 * t358 + t12 * t361 + t20 * t359 + t11 * t354 + t22 * t357
        t5 = t268 * (t39 * t37 + t48 * t46 + t49 * t47) + t16 * t358 + t15 * t359 + t19 * t357 + t17 * t355 + (t11 * t356 + t12 * t354) * t220
        t4 = t268 * (t39 * t32 + t48 * t44 + t49 * t45) + t14 * t358 + 0.5e0 * t12 * t200 + t13 * t359 + 0.5e0 * t11 * t198 + t18 * t357 + 0.5e0 * t17 * t343
        t3 = t316 * t225 - t315 * t221 + t310 * t343 + t311 * t200 + t312 * t198 + t269 * (t72 * t105 + t71 * t106 + t64 * t63) + t268 * (t32 * t38 + t44 * t83 + t45 * t82)
        t2 = t310 * t224 + (0.5e0 * t42 + 0.5e0 * t352 + t314) * t225 + (-0.5e0 * t43 - 0.5e0 * t351 - t313) * t221 + t270 * (t100 * t148 + t101 * t147 + t85 * t84) + t269 * (t70 * t105 + t69 * t106 + t62 * t63) + t268 * (t37 * t38 + t46 * t83 + t47 * t82) + ((0.5e0 * t53 + t311) * t225 + (0.5e0 * t52 + t312) * t221) * t220
        t1 = (0.5e0 * t27 + 0.5e0 * t18) * t224 + t313 * t200 + t314 * t198 + t269 * (t64 * t62 + t71 * t69 + t72 * t70) + t268 * (t32 * t37 + t44 * t46 + t45 * t47) + (t315 * t225 + t316 * t221 + (0.5e0 * t28 + 0.5e0 * t19) * t219) * t220
        Mass[2, 1] = t2
        Mass[0, 3] = t8
        Mass[1, 1] = t271 * ((-t362 * t215 - t225 * t319 + t289) ** 2 + t171 ** 2 + t172 ** 2) + t270 * (t147 ** 2 + t148 ** 2 + t84 ** 2) + t269 * (t105 ** 2 + t106 ** 2 + t63 ** 2) + t268 * (t38 ** 2 + t82 ** 2 + t83 ** 2) + (t182 * t216 + t20 + t29 + t52) * t225 + (-0.10e1 * t215 * t185 - 0.10e1 * t53 - 0.10e1 * t30 - 0.10e1 * t21 + (-0.1e1 * t185 * t225 + t182 * t221) * t225) * t221
        Mass[1, 2] = t2
        Mass[3, 4] = t4
        Mass[2, 3] = t1
        Mass[3, 1] = t3
        Mass[1, 0] = t9
        Mass[0, 0] = t168 + J1[3] + (-0.10e1 * t179 - t220 * t261 + t224 * t258) * t224 + (-0.10e1 * t180 * t223 + t220 * J2[0] - 0.10e1 * t330) * t220 + m[0] * ((-t225 * t238 + (-t239 - t272) * t221) ** 2 + (-t221 * t238 + t225 * t239 + t213) ** 2) + t271 * (t154 ** 2 + t155 ** 2) + t270 * (t120 ** 2 + t121 ** 2) + t269 * (t88 ** 2 + t89 ** 2) + t268 * (t67 ** 2 + t68 ** 2) + t77 + t57
        Mass[2, 2] = (t107 + t28 + t19) * t224 + t270 * (t100 ** 2 + t101 ** 2 + t85 ** 2) + t269 * (t62 ** 2 + t69 ** 2 + t70 ** 2) + t268 * (t37 ** 2 + t46 ** 2 + t47 ** 2) + ((t16 + t26 + t43 + t351) * t225 + (t15 + t25 + t42 + t352) * t221) * t220
        Mass[2, 4] = t5
        Mass[4, 0] = t10
        Mass[2, 0] = t7
        Mass[0, 4] = t10
        Mass[1, 3] = t3
        Mass[4, 1] = t6
        Mass[3, 2] = t1
        Mass[3, 0] = t8
        Mass[3, 3] = (t18 + t27) * t343 + (t24 + t14) * t200 + (t23 + t13) * t198 + t269 * (t64 ** 2 + t71 ** 2 + t72 ** 2) + t268 * (t32 ** 2 + t44 ** 2 + t45 ** 2)
        Mass[4, 4] = t268 * (t39 ** 2 + t48 ** 2 + t49 ** 2) + t12 * t166 + t11 * t164 - t17 * t196
        Mass[0, 2] = t7
        Mass[1, 4] = t6
        Mass[4, 2] = t5
        Mass[4, 3] = t4
        Mass[0, 1] = t9

        #cor MAPLE
        t1818 = m[2]
        t2176 = 0.2500000000e0 * t1818
        t2580 = 2 * t2176
        t1814 = q[1]
        t1773 = math.sin(t1814)
        t1815 = q[0]
        t1774 = math.sin(t1815)
        t2419 = t1773 * t1774
        t2492 = q[3]
        t1771 = math.sin(t2492)
        t1776 = math.cos(t1814)
        t2493 = q[2]
        t2470 = math.cos(t2493)
        t2262 = t2470 * t1776
        t1772 = math.sin(t2493)
        t1777 = math.cos(t1815)
        t2391 = t1777 * t1772
        t1721 = t1774 * t2262 + t2391
        t2469 = math.cos(t2492)
        t2272 = t1721 * t2469
        t1607 = -t1771 * t2419 + t2272
        t2266 = t1777 * t2470
        t2406 = t1774 * t1772
        t1720 = t1776 * t2406 - t2266
        t1813 = q[4]
        t1775 = math.cos(t1813)
        t2494 = l[0]
        t2303 = t1775 * t2494
        t2252 = t2303 / 2
        t1770 = math.sin(t1813)
        t2306 = t1770 * t2494
        t2442 = t1720 * t1775
        t2453 = t1607 * t1770
        t1483 = t2442 + t2453
        t2444 = t1720 * t1770
        t2452 = t1607 * t1775
        t1484 = t2444 - t2452
        t2268 = t1773 * t2469
        t1606 = t1721 * t1771 + t1774 * t2268
        t2483 = rS5[2]
        t2484 = rS5[1]
        t2485 = rS5[0]
        t2713 = t1483 * t2483 + t1484 * t2485 + t1606 * t2484
        t2363 = -t1607 * t2252 + t1720 * t2306 / 2 + t2713
        t2066 = t2452 / 2 - t2444 / 2
        t2364 = t2066 * t2494 - t2713
        t2669 = -t2363 - t2364
        t1013 = t2669 * t2419
        t2248 = t2470 * t2494
        t2162 = t1777 * t2248
        t1750 = t1776 * t2162
        t2304 = t1774 * t2494
        t2257 = t1772 * t2304
        t1692 = t1750 - t2257
        t2256 = t1773 * t2304
        t1743 = t1771 * t2256
        t2247 = t2469 * t2494
        t1575 = -t1721 * t2247 + t1743
        t2418 = t1773 * t1777
        t1540 = t1575 * t2418
        t1689 = t1721 * t2494
        t1633 = t1689 * t2418
        t2330 = -t1540 + t1633
        t1725 = t1777 * t2262 - t2406
        t1686 = t1725 * t2247
        t1766 = t1777 * t2494
        t2254 = t1773 * t1766
        t2071 = t1771 * t2254 - t1686
        t2021 = t1773 * t2071
        t1753 = t1771 * t2418
        t2271 = t1725 * t2469
        t2160 = t2271 - t1753
        t2045 = t2160 * t1775
        t1724 = -t1774 * t2470 - t1776 * t2391
        t2435 = t1724 * t1770
        t1955 = t2045 + t2435
        t2046 = t2160 * t1770
        t1956 = t1724 * t1775 - t2046
        t2265 = t1777 * t2469
        t2173 = t1773 * t2265
        t2017 = -t1725 * t1771 - t2173
        t1840 = t1955 * t2485 + t1956 * t2483 + t2017 * t2484
        t1937 = t2045 / 2 + t2435 / 2
        t2529 = t1937 * t2494 + t1840
        t2531 = t2529 * t1773
        t2501 = t2364 * t2418 + (t2021 - t2531) * t1774
        t1014 = -t1692 * t2419 + t2330 + t2501
        t1802 = J3[4]
        t1805 = J3[1]
        t1803 = J3[3]
        t2411 = t1773 * t1803
        t1508 = t1720 * t1802 - t1721 * t1805 + t1774 * t2411
        t1804 = J3[2]
        t1704 = t1721 * t1804
        t1801 = J3[5]
        t2412 = t1773 * t1802
        t1504 = -t1720 * t1801 - t1774 * t2412 + t1704
        t1703 = t1720 * t1804
        t1806 = J3[0]
        t2410 = t1773 * t1805
        t1509 = -t1721 * t1806 + t1774 * t2410 + t1703
        t2117 = t1504 * t1720 + t1509 * t1721
        t1264 = t1508 * t2419 - t2117
        t1514 = t1724 * t1802 + t1725 * t1805 - t1777 * t2411
        t2432 = t1725 * t1804
        t1513 = t1724 * t1801 - t1777 * t2412 + t2432
        t1705 = t1724 * t1804
        t1515 = t1725 * t1806 - t1777 * t2410 + t1705
        t2343 = -t1513 * t1720 + t1515 * t1721
        t1266 = -t1514 * t2419 + t2343
        t2120 = t1264 * t1774 + t1266 * t1777
        t2261 = t2470 * t1804
        t2041 = t1772 * t1801 - t2261
        t1663 = t1773 * t2041 - t1776 * t1802
        t2040 = t1772 * t1802 - t1805 * t2470
        t1664 = t1773 * t2040 - t1776 * t1803
        t2423 = t1772 * t1804
        t1757 = t1773 * t2423
        t2260 = t2470 * t1806
        t2395 = t1776 * t1805
        t1665 = -t1773 * t2260 + t1757 - t2395
        t1354 = t1663 * t1720 + t1664 * t2419 - t1665 * t1721
        t2624 = t1354 * t1776
        t1064 = t1773 * t2120 - t2624
        t2166 = t2469 * t2470
        t2400 = t1776 * t1771
        t1719 = t1773 * t2166 + t2400
        t1938 = t2494 * t1719
        t1651 = t1774 * t1938
        t2292 = t2470 + 1
        t2541 = t2292 * t2494
        t2029 = t2541 * t2419
        t2007 = t2029 + t1651
        t2428 = t1772 * t1773
        t2282 = t1775 * t2428
        t2446 = t1719 * t1770
        t1604 = t2282 + t2446
        t2283 = t1770 * t2428
        t2445 = t1719 * t1775
        t1605 = t2283 - t2445
        t2269 = t1773 * t2470
        t2174 = t1771 * t2269
        t1718 = -t1776 * t2469 + t2174
        t2278 = t2428 / 2
        t2229 = t1770 * t2278
        t2525 = t1604 * t2483 + t1605 * t2485 + t1718 * t2484 + t2494 * (-t2445 / 2 + t2229)
        t2670 = t2525 * t1774
        t1286 = t2007 - t2670
        t2490 = rS3[0]
        t2241 = t2470 * t2490
        t2489 = rS3[2]
        t2019 = t1772 * t2489 - t2241
        t1778 = rS3[1]
        t2398 = t1776 * t1778
        t1912 = -t1773 * t2019 + t2398
        t1593 = t1774 * t1912
        t1516 = t1593 + t2029
        t1816 = m[4]
        t2178 = 0.2500000000e0 * t1816
        t2184 = 0.2500000000e0 * t1774
        t2486 = rS4[2]
        t2488 = rS4[0]
        t2062 = t1718 * t2486 + t1719 * t2488
        t2487 = rS4[1]
        t2294 = t1772 * t2487
        t2246 = t1773 * t2294
        t1939 = -t2062 + t2246
        t1919 = t1774 * t1939
        t1485 = t1773 * t1919
        t1628 = t1773 * t1651
        t1767 = t1773 ** 2
        t2163 = t1774 * t2248
        t2076 = t1767 * t2163
        t2026 = -t1628 - t2076
        t1693 = t1720 * t2487
        t1394 = t1606 * t2486 + t1607 * t2488 - t1693
        t2325 = t1575 - t1689
        t2277 = -t1394 + t2325
        t1217 = t1776 * t2277 + t1485 + t2026
        t2025 = -t1689 * t1776 - t2076
        t1996 = t1575 * t1776 - t1628 + t2025
        t2707 = t1776 * t1394
        t1218 = t1485 + t1996 - t2707
        t2367 = t1217 - t1218
        t2236 = 2 * t2367
        t2538 = t2670 * t1773
        t1078 = (t2325 - t2364) * t1776 + t2026 + t2538
        t1079 = t1776 * t2363 + t1996 + t2538
        t2374 = t1078 - t1079
        t2238 = 2 * t2374
        t1613 = t1593 * t1773
        t2417 = t1773 * t1778
        t1497 = -t1720 * t2489 + t1721 * t2490 - t1774 * t2417
        t2339 = -t1497 - t1689
        t1332 = t1776 * t2339 - t1613 - t2076
        t2681 = t1776 * t1497
        t1333 = -t1613 + t2025 - t2681
        t2358 = t1332 - t1333
        t1018 = t2669 * t1777
        t2481 = 2 * t1018
        t2302 = t1776 * t2494
        t1768 = t1774 ** 2
        t1769 = t1777 ** 2
        t2611 = t1768 + t1769
        t2161 = t2611 * t2302
        t2510 = -t2071 + t2529
        t2515 = t1575 - t2364
        t1015 = -t2161 + (-t1692 - t2510) * t1777 + (-t1689 + t2515) * t1774
        t2482 = 2 * t1015
        t1385 = -t1919 + t2007
        t1817 = m[3]
        t2177 = 0.2500000000e0 * t1817
        t2721 = t1385 * t2177
        t2344 = t1513 * t1724 + t1515 * t1725
        t1267 = -t1514 * t2418 + t2344
        t2706 = t2117 + t2344 + (-t1508 * t1774 - t1514 * t1777) * t1773
        t2369 = -t1267 + t2706
        t2345 = t1504 * t1724 - t1509 * t1725
        t1265 = t1508 * t2418 + t2345
        t2705 = -t2345 - (t1508 * t1777 - t1514 * t1774) * t1773 - t2343
        t2371 = t1265 + t2705
        t777 = t2624 + (t1774 * t2369 + t1777 * t2371) * t1773
        t2750 = -(t1064 + t777) * t2184 + (t1013 * t2482 + t1014 * t2481 + t1286 * t2238) * t2178 + t2236 * t2721 + t1516 * t2358 * t2580
        t2197 = 0.2500000000e0 * t1721
        t1789 = J5[5]
        t1790 = J5[4]
        t1792 = J5[2]
        t2455 = t1605 * t1792
        t1402 = t1604 * t1789 + t1718 * t1790 + t2455
        t1791 = J5[3]
        t1793 = J5[1]
        t1403 = t1604 * t1790 + t1605 * t1793 + t1718 * t1791
        t1587 = t1604 * t1792
        t1794 = J5[0]
        t1404 = t1605 * t1794 + t1718 * t1793 + t1587
        t1118 = t1402 * t1483 + t1403 * t1606 + t1404 * t1484
        t2461 = t1484 * t1792
        t1310 = t1483 * t1789 + t1606 * t1790 + t2461
        t1311 = t1483 * t1790 + t1484 * t1793 + t1606 * t1791
        t1479 = t1483 * t1792
        t1312 = t1484 * t1794 + t1606 * t1793 + t1479
        t2471 = -t1310 * t1483 - t1311 * t1606 - t1312 * t1484
        t2546 = t1792 * t1955
        t1313 = t1789 * t1956 + t1790 * t2017 + t2546
        t1314 = t1790 * t1956 + t1791 * t2017 + t1793 * t1955
        t1480 = t1956 * t1792
        t1315 = t1793 * t2017 + t1794 * t1955 + t1480
        t998 = -t1313 * t1483 - t1314 * t1606 - t1315 * t1484
        t719 = -t1118 * t2428 + t1720 * t2471 + t1724 * t998
        t1798 = J4[2]
        t1589 = t2160 * t1798
        t1795 = J4[5]
        t1796 = J4[4]
        t1414 = t1724 * t1796 - t1795 * t2017 + t1589
        t1797 = J4[3]
        t1799 = J4[1]
        t1415 = t1724 * t1797 - t1796 * t2017 + t1799 * t2160
        t1800 = J4[0]
        t2451 = t2017 * t1798
        t1416 = t1724 * t1799 + t1800 * t2160 - t2451
        t1164 = t1414 * t1606 - t1415 * t1720 + t1416 * t1607
        t1702 = t1719 * t1798
        t2426 = t1772 * t1796
        t2288 = t1773 * t2426
        t1501 = -t1718 * t1795 - t1702 + t2288
        t2425 = t1772 * t1797
        t2287 = t1773 * t2425
        t1502 = -t1718 * t1796 - t1719 * t1799 + t2287
        t2424 = t1772 * t1799
        t2286 = t1773 * t2424
        t2447 = t1718 * t1798
        t1503 = -t1719 * t1800 + t2286 - t2447
        t1238 = t1501 * t1606 - t1502 * t1720 + t1503 * t1607
        t1406 = t1606 * t1796 + t1607 * t1799 - t1720 * t1797
        t1588 = t1607 * t1798
        t1408 = -t1606 * t1795 + t1720 * t1796 - t1588
        t2454 = t1606 * t1798
        t1410 = -t1607 * t1800 + t1720 * t1799 - t2454
        t2582 = -t1406 * t1720 - t1408 * t1606 - t1410 * t1607
        t865 = t1164 * t1724 + t1238 * t2428 - t1720 * t2582
        t2647 = t719 + t865
        t1977 = 0.5000000000e0 * t2647
        t2158 = -t1774 * t2471 + t1777 * t998
        t2464 = t1118 * t1776
        t520 = -t1773 * t2158 + t2464
        t2123 = t1164 * t1777 + t1774 * t2582
        t2463 = t1238 * t1776
        t881 = t1773 * t2123 + t2463
        t2637 = t881 - t520
        t2018 = t1771 * t2486 + t2469 * t2488
        t2298 = t1721 * t2487
        t1444 = -t1720 * t2018 - t2298
        t1445 = t1724 * t2018 - t1725 * t2487
        t1494 = t1725 * t1575
        t2274 = t1724 * t2487 - t2017 * t2486 + t2160 * t2488
        t1997 = t2071 - t2274
        t1067 = -t1394 * t1725 + t1444 * t1724 + t1445 * t1720 - t1721 * t1997 + t1494
        t1559 = t1773 * t1575
        t1563 = t1720 * t1938
        t1843 = t2525 * t1720
        t2668 = t2364 * t1773
        t2522 = t2668 * t1772
        t1073 = t1559 * t1772 + t1563 - t1843 - t2522
        t1907 = -t1724 * t1938 + t1772 * t2021
        t2533 = t2531 * t1772
        t1074 = t1724 * t2525 + t1907 - t2533
        t1685 = t1724 * t2247
        t1691 = t1724 * t2494
        t2069 = -t1691 - t1685
        t2270 = t1770 * t2469
        t1524 = -t1724 * t2270 - t1725 * t1775
        t2259 = t2469 * t1775
        t1525 = t1724 * t2259 - t1725 * t1770
        t2295 = t1771 * t2484
        t2577 = t1775 / 2
        t2356 = t1524 * t2483 + t1525 * t2485 - t1724 * t2295 + t1685 * t2577 - t1725 * t2306 / 2
        t2005 = t2069 - t2356
        t2255 = t1774 * t2302
        t1747 = t1772 * t2255
        t2068 = t1747 - t2162
        t2065 = t1720 * t2247 + t2068
        t1522 = t1720 * t2270 - t1721 * t1775
        t2175 = t1720 * t2259
        t2437 = t1721 * t1770
        t1523 = -t2175 - t2437
        t1335 = t1522 * t2483 + t1523 * t2485 + t1720 * t2295
        t2357 = t1335 + (-t2175 / 2 - t2437 / 2) * t2494
        t2006 = t2065 - t2357
        t1084 = t1774 * t2006 + t1777 * t2005
        t1565 = t1721 * t1938
        t1592 = (t1772 * t2018 + t2470 * t2487) * t1773
        t2264 = t2470 * t1575
        t1149 = t1565 + t1721 * t2062 - t1720 * t1592 + (-t2470 * t1394 + t2264 + (-t1444 - t2298) * t1772) * t1773
        t1908 = -t1725 * t1938 - t2021 * t2470
        t2170 = t1773 * t2274
        t1150 = t1445 * t2428 - t1592 * t1724 + t1725 * t1939 + t2170 * t2470 + t1908
        t1940 = -t1692 + t1997
        t1175 = t1774 * t2277 + t1777 * t1940 - t2161
        t1493 = t1724 * t1575
        t1182 = t1394 * t1724 - t1720 * t1997 - t1493
        t2326 = t1575 - t1394
        t1226 = t1563 + t1720 * t2062 + (-t1693 + t2326) * t2428
        t1227 = t1724 * t1939 - t1772 * t2170 + t1907
        t1369 = -t2069 + t1445
        t2023 = -t1444 + t2065
        t1230 = -t1369 * t1777 + t1774 * t2023
        t1923 = t1777 * t1938
        t1941 = -t1773 * t2162 - t2254
        t2528 = t2525 * t1777
        t1288 = -t1923 + t1941 + t2528
        t1675 = (-t1772 * t2270 + t1775 * t2470) * t1773
        t2263 = t2470 * t1770
        t1676 = (t1772 * t2259 + t2263) * t1773
        t2172 = t2259 / 2
        t2420 = t1773 * t1771
        t2291 = t1772 * t2420
        t2305 = t1773 * t2494
        t2342 = t1675 * t2483 + t1676 * t2485 - t2291 * t2484 + (t1772 * t2172 + t2263 / 2) * t2305
        t2251 = t2342 * t1774
        t1744 = t1772 * t2256
        t2164 = t1774 * t2247
        t1745 = t1773 * t2164
        t2312 = t1745 * t1772 + t1744
        t1320 = t2251 + t2312
        t1749 = t1772 * t2254
        t2074 = t2494 * t2173
        t2310 = t1772 * t2074 + t1749
        t1321 = t1777 * t2342 + t2310
        t2606 = t2541 - t2294
        t1387 = -t1923 + (-t1773 * t2606 - t2062) * t1777
        t1467 = t1592 * t1774 + t2312
        t1468 = t1592 * t1777 + t2310
        t2180 = 0.2500000000e0 * t1777
        t2191 = 0.2500000000e0 * t1725
        t2193 = 0.2500000000e0 * t1724
        t2199 = 0.2500000000e0 * t1720
        t2578 = 2 * t2178
        t2579 = 2 * t2177
        t2038 = t1771 * t1795 + t1798 * t2469
        t1449 = -t1720 * t2038 - t1721 * t1796
        t2036 = t1771 * t1798 + t1800 * t2469
        t1451 = -t1720 * t2036 - t1721 * t1799
        t2037 = t1771 * t1796 + t1799 * t2469
        t2012 = -t1408 * t1771 - t1410 * t2469 - t1720 * t2037 - t1721 * t1797
        t1002 = -t1406 * t1725 - t1449 * t2017 + t1451 * t2160 + t1724 * t2012
        t1452 = t1724 * t2038 - t1725 * t1796
        t1454 = t1724 * t2036 - t1725 * t1799
        t2011 = t1414 * t1771 + t1416 * t2469 + t1724 * t2037 - t1725 * t1797
        t1004 = -t1415 * t1725 - t1452 * t2017 + t1454 * t2160 + t1724 * t2011
        t2431 = t1771 * t1790
        t1337 = t1522 * t1789 + t1523 * t1792 + t1720 * t2431
        t2430 = t1771 * t1791
        t1338 = t1522 * t1790 + t1523 * t1793 + t1720 * t2430
        t2429 = t1771 * t1793
        t1339 = t1522 * t1792 + t1523 * t1794 + t1720 * t2429
        t2434 = t1724 * t1771
        t823 = -t1310 * t1524 + t1311 * t2434 - t1312 * t1525 + t1337 * t1956 + t1338 * t2017 + t1339 * t1955
        t1340 = t1524 * t1789 + t1525 * t1792 - t1724 * t2431
        t1341 = t1524 * t1790 + t1525 * t1793 - t1724 * t2430
        t1342 = t1524 * t1792 + t1525 * t1794 - t1724 * t2429
        t825 = t1313 * t1524 - t1314 * t2434 + t1315 * t1525 + t1340 * t1956 + t1341 * t2017 + t1342 * t1955
        t651 = -t1774 * t825 + t1777 * t823
        t2648 = t1002 * t1777 - t1004 * t1774 + t651
        t1001 = -t1406 * t1721 + t1449 * t1606 + t1451 * t1607 - t1720 * t2012
        t1003 = -t1415 * t1721 + t1452 * t1606 + t1454 * t1607 - t1720 * t2011
        t2443 = t1720 * t1771
        t822 = -t1310 * t1522 - t1311 * t2443 - t1312 * t1523 - t1337 * t1483 - t1338 * t1606 - t1339 * t1484
        t824 = t1313 * t1522 + t1314 * t2443 + t1315 * t1523 - t1340 * t1483 - t1341 * t1606 - t1342 * t1484
        t650 = -t1774 * t824 + t1777 * t822
        t2649 = t1001 * t1777 - t1003 * t1774 + t650
        t1595 = (t1772 * t2038 + t1796 * t2470) * t1773
        t1597 = (t1772 * t2036 + t1799 * t2470) * t1773
        t1596 = (t1772 * t2037 + t1797 * t2470) * t1773
        t2016 = t1501 * t1771 + t1503 * t2469 + t1596
        t1132 = -t1502 * t1725 - t1595 * t2017 + t1597 * t2160 + t1724 * t2016
        t1163 = t1406 * t1724 + t1408 * t2017 - t1410 * t2160
        t1165 = -t1414 * t2017 + t1415 * t1724 + t1416 * t2160
        t1240 = -t1501 * t2017 + t1502 * t1724 + t1503 * t2160
        t1119 = t1402 * t1956 + t1403 * t2017 + t1404 * t1955
        t1458 = t1675 * t1789 + t1676 * t1792 - t1790 * t2291
        t1459 = t1675 * t1790 + t1676 * t1793 - t1791 * t2291
        t1460 = t1675 * t1792 + t1676 * t1794 - t1793 * t2291
        t957 = t1402 * t1524 - t1403 * t2434 + t1404 * t1525 + t1458 * t1956 + t1459 * t2017 + t1460 * t1955
        t997 = -t1310 * t1956 - t1311 * t2017 - t1312 * t1955
        t999 = t1313 * t1956 + t1314 * t2017 + t1315 * t1955
        t463 = -t1720 * t823 - t1721 * t997 + t1724 * t825 - t1725 * t999 + (t1119 * t2470 + t1772 * t957) * t1773
        t2656 = t463 - t1720 * t1002 + t1724 * t1004 - t1721 * t1163 - t1725 * t1165 + (t1132 * t1772 + t1240 * t2470) * t1773
        t1131 = -t1502 * t1721 + t1595 * t1606 + t1597 * t1607 - t1720 * t2016
        t956 = t1402 * t1522 + t1403 * t2443 + t1404 * t1523 - t1458 * t1483 - t1459 * t1606 - t1460 * t1484
        t462 = -t1720 * t822 + t1721 * t2471 + t1724 * t824 - t1725 * t998 + (-t1118 * t2470 + t1772 * t956) * t1773
        t2657 = t462 - t1720 * t1001 + t1724 * t1003 - t1721 * t2582 - t1725 * t1164 + (t1131 * t1772 + t1238 * t2470) * t1773
        t2734 = -t1774 * t999 + t1777 * t997
        t2738 = t1163 * t1777 - t1165 * t1774 + t2734
        t842 = t1720 * t2356 + t1721 * t2510 + t1724 * t2357 - t1725 * t2364 + t1494
        t934 = -t1720 * t2342 - t1721 * t2525 + t1773 * t2264 - t2269 * t2364 - t2357 * t2428 + t1565
        t935 = -t1724 * t2342 + t1725 * t2525 + t2356 * t2428 + t2470 * t2531 + t1908
        t2530 = t2529 * t1720
        t994 = -t1720 * t2071 + t1724 * t2364 - t1493 + t2530
        t2749 = t2191 * t2738 - t2657 * t2180 + t2656 * t2184 - t2648 * t2193 + t2649 * t2199 - (t1015 * t842 + t1073 * t1321 - t1074 * t1320 + t1084 * t994 - t1286 * t935 + t1288 * t934) * t2578 - (t1067 * t1175 + t1149 * t1387 - t1150 * t1385 + t1182 * t1230 + t1226 * t1468 - t1227 * t1467) * t2579
        t2747 = 0.1e1 * t520
        t538 = t1774 * t998 + t1777 * t2471
        t661 = t1164 * t1774 - t1777 * t2582
        t2693 = t538 + t661
        t2735 = t1119 * t2428 - t1720 * t997 + t1724 * t999
        t2700 = t1163 * t1720 - t1165 * t1724 - t1240 * t2428 - t2735
        t1975 = 0.5000000000e0 * t2700
        t1116 = t1776 * t1119
        t2157 = t1774 * t997 + t1777 * t999
        t2739 = t1773 * t2157 + t1116
        t1236 = t1776 * t1240
        t2122 = t1163 * t1774 + t1165 * t1777
        t882 = t1773 * t2122 + t1236
        t2743 = t2739 + t882
        t1043 = t1310 * t1604 + t1311 * t1718 + t1312 * t1605
        t2615 = -t1043 - t1118
        t492 = -t1118 * t1718 + t1606 * t2471 + t2017 * t998
        t2733 = -t1119 * t1718 + t1606 * t997 - t2017 * t999
        t1192 = t1406 * t2428 + t1408 * t1718 + t1410 * t1719
        t2672 = t1192 + t1238
        t1909 = t1575 * t2428 + t1563
        t1225 = -t1394 * t2428 - t1720 * t1939 + t1909
        t2366 = t1225 - t1226
        t2722 = 2 * t2366
        t2719 = 0.2500000000e0
        t2185 = 0.5000000000e0 * t1773
        t1669 = t1776 * t2041 + t2412
        t2039 = -t2260 + t2423
        t1671 = t1776 * t2039 + t2410
        t1670 = t1776 * t2040 + t2411
        t2042 = t1663 * t1772 - t1665 * t2470
        t2013 = -t1670 + t2042
        t2450 = t1664 * t1776
        t1913 = t1773 * t2013 - t2450
        t1254 = -t1669 * t1720 + t1671 * t1721 + t1774 * t1913
        t1678 = t1719 * t1774
        t1542 = t1678 * t1770 + t1774 * t2282
        t2448 = t1678 * t1775
        t1543 = t1774 * t2283 - t2448
        t1677 = t1718 * t1774
        t1360 = t1542 * t1789 + t1543 * t1792 + t1677 * t1790
        t1361 = t1542 * t1790 + t1543 * t1793 + t1677 * t1791
        t1362 = t1542 * t1792 + t1543 * t1794 + t1677 * t1793
        t1723 = -t1776 * t2166 + t2420
        t2427 = t1772 * t1776
        t1610 = -t1723 * t1770 + t1775 * t2427
        t2281 = t1770 * t2427
        t2436 = t1723 * t1775
        t1611 = t2281 + t2436
        t1722 = t1771 * t2262 + t2268
        t873 = -t1310 * t1610 - t1311 * t1722 - t1312 * t1611 + t1360 * t1604 + t1361 * t1718 + t1362 * t1605
        t1411 = t1610 * t1789 + t1611 * t1792 + t1722 * t1790
        t1412 = t1610 * t1790 + t1611 * t1793 + t1722 * t1791
        t1413 = t1610 * t1792 + t1611 * t1794 + t1722 * t1793
        t932 = t1402 * t1542 + t1403 * t1677 + t1404 * t1543 - t1411 * t1483 - t1412 * t1606 - t1413 * t1484
        t2641 = t873 + t932
        t1461 = -t1677 * t1795 - t1678 * t1798 + t1774 * t2288
        t1462 = -t1677 * t1796 - t1678 * t1799 + t1774 * t2287
        t1463 = -t1677 * t1798 - t1678 * t1800 + t1774 * t2286
        t1040 = t1408 * t1722 - t1410 * t1723 - t1461 * t1718 - t1463 * t1719 + (t1406 * t1776 + t1462 * t1773) * t1772
        t1510 = -t1722 * t1795 + t1723 * t1798 + t1776 * t2426
        t1511 = -t1722 * t1796 + t1723 * t1799 + t1776 * t2425
        t1512 = -t1722 * t1798 + t1723 * t1800 + t1776 * t2424
        t2290 = t1773 * t2406
        t1107 = -t1501 * t1677 + t1502 * t2290 - t1503 * t1678 + t1510 * t1606 - t1511 * t1720 + t1512 * t1607
        t2679 = t1040 + t1107
        t2595 = -t2641 - t2679
        t2716 = t1254 - t2595
        t1784 = qd[4]
        t2662 = 2 * t1784
        t1785 = qd[3]
        t2661 = 2 * t1785
        t1787 = qd[1]
        t2659 = 2 * t1787
        t1788 = qd[0]
        t2658 = 2 * t1788
        t1786 = qd[2]
        t2660 = 2 * t1786
        t1680 = t1719 * t1777
        t1544 = t1680 * t1770 + t1777 * t2282
        t1545 = -t1680 * t1775 + t1777 * t2283
        t1679 = -t1776 * t2265 + t1777 * t2174
        t933 = t1402 * t1544 + t1403 * t1679 + t1404 * t1545 + t1411 * t1956 + t1412 * t2017 + t1413 * t1955
        t2072 = t2157 + t933
        t832 = -t1310 * t1544 - t1311 * t1679 - t1312 * t1545 + t1360 * t1956 + t1361 * t2017 + t1362 * t1955
        t1363 = t1544 * t1789 + t1545 * t1792 + t1679 * t1790
        t1364 = t1544 * t1790 + t1545 * t1793 + t1679 * t1791
        t1365 = t1544 * t1792 + t1545 * t1794 + t1679 * t1793
        t834 = t1313 * t1544 + t1314 * t1679 + t1315 * t1545 + t1363 * t1956 + t1364 * t2017 + t1365 * t1955
        t469 = -t1720 * t832 + t1724 * t834 + (t1773 * t2072 + t1116) * t1772
        t2289 = t1773 * t2391
        t1010 = t1406 * t2289 + t1408 * t1679 + t1410 * t1680 - t1461 * t2017 + t1462 * t1724 + t1463 * t2160
        t1464 = -t1679 * t1795 - t1680 * t1798 + t1777 * t2288
        t1465 = -t1679 * t1796 - t1680 * t1799 + t1777 * t2287
        t1466 = -t1679 * t1798 - t1680 * t1800 + t1777 * t2286
        t1012 = -t1414 * t1679 + t1415 * t2289 - t1416 * t1680 - t1464 * t2017 + t1465 * t1724 + t1466 * t2160
        t1108 = -t1501 * t1679 + t1502 * t2289 - t1503 * t1680 - t1510 * t2017 + t1511 * t1724 + t1512 * t2160
        t2056 = t1108 + t2122
        t578 = -t1010 * t1720 + t1012 * t1724 + (t1773 * t2056 + t1236) * t1772
        t2701 = t469 + t578
        t477 = t2072 * t1776 + (t1774 * t832 + t1777 * t834 - t1119) * t1773
        t2655 = t477 + t2056 * t1776 + (t1010 * t1774 + t1012 * t1777 - t1240) * t1773
        t1044 = t1313 * t1604 + t1314 * t1718 + t1315 * t1605
        t2124 = -t1043 * t1774 + t1044 * t1777
        t969 = t1402 * t1610 + t1403 * t1722 + t1404 * t1611 + t1411 * t1604 + t1412 * t1718 + t1413 * t1605
        t2070 = t2124 + t969
        t1161 = t1402 * t1604 + t1403 * t1718 + t1404 * t1605
        t2403 = t1776 * t1161
        t874 = t1313 * t1610 + t1314 * t1722 + t1315 * t1611 + t1363 * t1604 + t1364 * t1718 + t1365 * t1605
        t508 = -t1720 * t873 + t1724 * t874 + (t1773 * t2070 + t2403) * t1772
        t1041 = -t1414 * t1722 + t1416 * t1723 - t1464 * t1718 - t1466 * t1719 + (t1415 * t1776 + t1465 * t1773) * t1772
        t1139 = -t1501 * t1722 + t1503 * t1723 - t1510 * t1718 - t1512 * t1719 + (t1502 * t1776 + t1511 * t1773) * t1772
        t1194 = -t1414 * t1718 + t1415 * t2428 - t1416 * t1719
        t2121 = t1192 * t1774 + t1194 * t1777
        t2055 = t1139 + t2121
        t1263 = -t1501 * t1718 + t1502 * t2428 - t1503 * t1719
        t2402 = t1776 * t1263
        t627 = -t1720 * t1040 + t1724 * t1041 + (t1773 * t2055 + t2402) * t1772
        t2698 = t508 + t627
        t518 = t2070 * t1776 + (t1774 * t873 + t1777 * t874 - t1161) * t1773
        t632 = t2055 * t1776 + (t1040 * t1774 + t1041 * t1777 - t1263) * t1773
        t2697 = t518 + t632
        t1431 = -t1606 * t1799 + t1607 * t1796
        t2350 = -t1607 * t1795 - t1410 + t2454
        t2351 = -t1606 * t1800 - t1408 + t1588
        t1056 = -t1431 * t1720 - t1606 * t2350 + t1607 * t2351
        t1434 = t1796 * t2160 + t1799 * t2017
        t2348 = -t1795 * t2160 + t1416 - t2451
        t2349 = t1800 * t2017 + t1414 + t1589
        t1058 = -t1434 * t1720 - t1606 * t2348 + t1607 * t2349
        t1550 = t1718 * t1799 - t1719 * t1796
        t1549 = -t1719 * t1795 + t2447
        t2336 = t1503 - t1549
        t1551 = t1718 * t1800 - t1702
        t2337 = t1501 + t1551
        t1153 = -t1550 * t1720 - t1606 * t2336 + t1607 * t2337
        t2115 = t1770 * t1789 - t1775 * t1792
        t1372 = t1606 * t2115 - t1607 * t1790
        t2113 = t1770 * t1792 - t1775 * t1794
        t1374 = t1606 * t2113 - t1607 * t1793
        t2114 = t1770 * t1790 - t1775 * t1793
        t2054 = -t1310 * t1770 + t1312 * t1775 - t1606 * t2114 + t1607 * t1791
        t837 = t1311 * t1607 - t1372 * t1483 - t1374 * t1484 + t1606 * t2054
        t1375 = -t1790 * t2160 - t2017 * t2115
        t1377 = -t1793 * t2160 - t2017 * t2113
        t2053 = t1313 * t1770 - t1315 * t1775 + t1791 * t2160 + t2017 * t2114
        t839 = -t1314 * t1607 - t1375 * t1483 - t1377 * t1484 + t1606 * t2053
        t1446 = -t1718 * t2115 + t1719 * t1790
        t1448 = -t1718 * t2113 + t1719 * t1793
        t1447 = -t1718 * t2114 + t1719 * t1791
        t2052 = t1402 * t1770 - t1404 * t1775 - t1447
        t961 = -t1403 * t1607 - t1446 * t1483 - t1448 * t1484 + t1606 * t2052
        t564 = -t1720 * t837 + t1724 * t839 + t2428 * t961
        t2692 = -t1056 * t1720 + t1058 * t1724 + t1153 * t2428 + t564
        t568 = t1776 * t961 + (t1774 * t837 + t1777 * t839) * t1773
        t2652 = t568 + t1153 * t1776 + (t1056 * t1774 + t1058 * t1777) * t1773
        t1057 = t1431 * t1724 + t2017 * t2350 + t2160 * t2351
        t1059 = t1434 * t1724 + t2017 * t2348 + t2160 * t2349
        t1154 = t1550 * t1724 + t2017 * t2336 + t2160 * t2337
        t838 = t1311 * t2160 + t1372 * t1956 + t1374 * t1955 - t2017 * t2054
        t840 = -t1314 * t2160 + t1375 * t1956 + t1377 * t1955 - t2017 * t2053
        t962 = -t1403 * t2160 + t1446 * t1956 + t1448 * t1955 - t2017 * t2052
        t569 = t1776 * t962 + (t1774 * t838 + t1777 * t840) * t1773
        t2651 = t569 + t1154 * t1776 + (t1057 * t1774 + t1059 * t1777) * t1773
        t2073 = t2158 + t932
        t831 = -t1310 * t1542 - t1311 * t1677 - t1312 * t1543 - t1360 * t1483 - t1361 * t1606 - t1362 * t1484
        t833 = t1313 * t1542 + t1314 * t1677 + t1315 * t1543 - t1363 * t1483 - t1364 * t1606 - t1365 * t1484
        t468 = -t1720 * t831 + t1724 * t833 + (t1773 * t2073 - t2464) * t1772
        t1009 = t1406 * t2290 + t1408 * t1677 + t1410 * t1678 + t1461 * t1606 - t1462 * t1720 + t1463 * t1607
        t1011 = -t1414 * t1677 + t1415 * t2290 - t1416 * t1678 + t1464 * t1606 - t1465 * t1720 + t1466 * t1607
        t2057 = t1107 + t2123
        t577 = -t1009 * t1720 + t1011 * t1724 + (t1773 * t2057 + t2463) * t1772
        t2691 = t577 + t468
        t476 = t2073 * t1776 + (t1774 * t831 + t1777 * t833 + t1118) * t1773
        t2650 = -t2057 * t1776 - (t1009 * t1774 + t1011 * t1777 - t1238) * t1773 - t476
        t664 = -t1774 * t839 + t1777 * t837
        t829 = t1056 * t1777 - t1058 * t1774
        t2690 = t664 + t829
        t665 = -t1774 * t840 + t1777 * t838
        t830 = t1057 * t1777 - t1059 * t1774
        t2689 = t665 + t830
        t759 = t1773 * t2124 + t2403
        t914 = t1773 * t2121 + t2402
        t2645 = t759 + t914
        t875 = -t1310 * t1675 + t1311 * t2291 - t1312 * t1676 + t1337 * t1604 + t1338 * t1718 + t1339 * t1605
        t876 = t1313 * t1675 - t1314 * t2291 + t1315 * t1676 + t1340 * t1604 + t1341 * t1718 + t1342 * t1605
        t670 = -t1774 * t876 + t1777 * t875
        t1053 = -t1449 * t1718 - t1451 * t1719 + (t1406 * t2470 + t1772 * t2012) * t1773
        t1054 = -t1452 * t1718 - t1454 * t1719 + (t1415 * t2470 + t1772 * t2011) * t1773
        t828 = t1053 * t1777 - t1054 * t1774
        t2684 = t828 + t670
        t2640 = -t874 - t933
        t2639 = t875 + t956
        t2638 = -t876 - t957
        t890 = -t1311 * t1719 + t1372 * t1604 + t1374 * t1605 - t1718 * t2054
        t2635 = t890 + t961
        t891 = t1314 * t1719 + t1375 * t1604 + t1377 * t1605 - t1718 * t2053
        t2634 = -t891 - t962
        t752 = t1043 * t1720 + t1044 * t1724 + t1161 * t2428
        t2633 = t1192 * t1720 - t1194 * t1724 - t1263 * t2428 - t752
        t1346 = -t1483 * t1793 + t1484 * t1790
        t2361 = t1484 * t1789 - t1312 - t1479
        t2362 = -t1483 * t1794 + t1310 + t2461
        t922 = t1346 * t1718 + t1604 * t2361 + t1605 * t2362
        t1428 = t1604 * t1793 - t1605 * t1790
        t1427 = -t1605 * t1789 + t1587
        t2352 = t1404 + t1427
        t1429 = t1604 * t1794 - t2455
        t2353 = -t1402 + t1429
        t978 = -t1428 * t1606 - t1483 * t2352 - t1484 * t2353
        t2632 = t922 + t978
        t1349 = -t1790 * t1955 + t1793 * t1956
        t2359 = -t1789 * t1955 + t1315 + t1480
        t2360 = t1794 * t1956 - t1313 - t2546
        t923 = t1349 * t1718 + t1604 * t2359 + t1605 * t2360
        t979 = t1428 * t2017 + t1955 * t2353 + t1956 * t2352
        t2631 = t923 + t979
        t2629 = t1139 + t969
        t1576 = t2017 * t2494
        t2678 = -t1041 - t1108
        t2614 = t1044 + t1119
        t2677 = t1053 + t1131
        t2676 = -t1054 - t1132
        t1081 = t1431 * t2428 + t1718 * t2350 - t1719 * t2351
        t2675 = -t1081 - t1153
        t1082 = t1434 * t2428 + t1718 * t2348 - t1719 * t2349
        t2674 = t1082 + t1154
        t2673 = t1161 + t1263
        t2671 = t1194 + t1240
        t2317 = t1801 * t2269 + t1665 + t1757
        t2044 = t1504 * t1772 + t1509 * t2470
        t2459 = t1508 * t1776
        t1297 = t1773 * t2044 + t2459
        t1918 = t1777 * t1939
        t1910 = t1773 * t1918
        t1631 = t1773 * t1923
        t2075 = t1767 * t2162
        t2024 = t2075 + t1631
        t2550 = t1776 * t1940
        t1219 = -t1910 + t2024 - t2550
        t2532 = t2529 * t1776
        t2505 = -t1773 * t2528 + t2532
        t2020 = t1776 * t2071
        t2609 = -t1692 * t1776 + t2020
        t1080 = t2024 + t2505 - t2609
        t2300 = 2 * t1080
        t1072 = t2363 * t2428 - t1843 + t1909
        t2375 = t1072 - t1073
        t993 = t2669 * t1720
        t2666 = (2 * t1013 * t994 - 2 * t1014 * t993 + t1074 * t2238 + t2300 * t2375) * t2178 + (t1219 * t2722 + t1227 * t2236) * t2177
        t2063 = t1677 * t2486 + t1678 * t2488
        t1456 = t1774 * t2246 - t2063
        t1457 = -t1679 * t2486 - t1680 * t2488 + t1777 * t2246
        t2320 = -t1923 + t1457
        t2311 = t1745 * t2470 + t1771 * t2255
        t2331 = -t1540 * t1772 - t1724 * t2311
        t2393 = t1777 * t1394
        t1045 = t1724 * t1456 + t2320 * t1720 + (t1774 * t1997 + t2393) * t2428 + t2331
        t2399 = t1776 * t1777
        t1634 = t1689 * t2399
        t2275 = -t1575 * t2399 - t2311 * t2418 + t1634
        t1048 = (t1456 * t1773 + t2707) * t1777 + (-t1773 * t2320 + t2550) * t1774 + t2275
        t1499 = -t1722 * t2486 + t1723 * t2488 + t1776 * t2294
        t1690 = t1723 * t2494
        t2324 = -t1628 * t1772 - t1690 * t1720
        t2341 = -t1456 + t2311
        t1097 = -t1720 * t1499 + (t2326 * t1776 + (t1919 + t2341) * t1773) * t1772 + t2324
        t1860 = -t1724 * t1690 - t1923 * t2428 + (t1631 - t2020) * t1772
        t1098 = t1457 * t2428 - t1499 * t1724 - t1772 * t1910 + t2274 * t2427 + t1860
        t1649 = t1773 * t1689
        t1652 = t1774 * t1690
        t2513 = -t1651 * t1776 + t1652 * t1773 - t1559
        t1101 = t1649 + (t1499 * t1774 + t1394) * t1773 + (((-t2248 + t2294) * t1773 - t2062) * t1774 + t2341) * t1776 + t2513
        t1657 = t1777 * t1690
        t2245 = (-t1692 + t1750) * t1773
        t1830 = -t1657 * t1773 + t2021 + t2245
        t1102 = -t1499 * t2418 + t1830 - t2170 + (t1457 - t1918) * t1776
        t1172 = (t1774 * t1940 + t2393) * t1773 + t2330
        t2539 = t1544 * t2483 + t1545 * t2485 + t1679 * t2484 - t1680 * t2252 + t1770 * t1749 / 2
        t2514 = -t1923 + t2539
        t1356 = t1542 * t2483 + t1543 * t2485 + t1677 * t2484
        t2540 = t1356 + (-t2448 / 2 + t1774 * t2229) * t2494
        t836 = t1720 * t2514 + t1724 * t2540 + t1772 * t2501 + t2331
        t843 = t2275 + t2540 * t2418 + t2364 * t2399 - t2514 * t2419 + (-t2532 + t2609) * t1774
        t2354 = t1610 * t2483 + t1611 * t2485 + t1722 * t2484 + (t2436 / 2 + t2281 / 2) * t2494
        t2512 = t2311 - t2540
        t906 = -t1720 * t2354 + t1772 * t2538 + t2427 * t2515 + t2428 * t2512 + t2324
        t907 = -t1724 * t2354 + t1772 * t2505 + t2428 * t2539 + t1860
        t2008 = -t1773 * t1776 * t2163 + t1649
        t912 = t2008 + t2354 * t2419 + (t2512 + t2670) * t1776 + t2513 + t2668
        t913 = t1830 - t2354 * t2418 + (-t2528 + t2539) * t1776 - t2531
        t2665 = -t2655 * t2193 - t2650 * t2199 - (t1014 * t836 + t1073 * t912 - t1074 * t913 + t1078 * t906 + t1080 * t907 + t843 * t994) * t2578 - (t1045 * t1172 + t1048 * t1182 + t1097 * t1217 + t1098 * t1219 + t1101 * t1226 - t1102 * t1227) * t2579
        t2314 = t1689 * t1771 + t1745
        t1539 = t2314 * t2418
        t2297 = t1770 * t2483
        t2608 = t1775 * t2485 - t2297
        t1371 = t2017 * t2608 - t2160 * t2484
        t2253 = -t2303 / 2
        t2088 = -t2017 * t2253 + t1371
        t2034 = t1576 + t2088
        t2299 = t1607 * t2484
        t1370 = -t1606 * t2608 - t2299
        t2089 = t1606 * t2253 + t1370
        t1122 = -t1539 + (-t1774 * t2034 + t1777 * t2089) * t1773
        t2035 = t2314 - t2089
        t1136 = t1774 * t2035 - t1777 * t2034
        t1687 = t1718 * t2494
        t1650 = t1774 * t1687
        t1627 = t1773 * t1650
        t1443 = t1718 * t2608 + t1719 * t2484
        t2087 = t1718 * t2252 + t1443
        t2027 = t2087 * t1774
        t1177 = t1773 * t2027 + t1776 * t2035 + t1627
        t1561 = t1776 * t1576
        t2033 = -t1687 - t2087
        t1178 = t1776 * t2088 + t2033 * t2418 + t1561
        t1426 = t2017 * t2488 + t2160 * t2486
        t1384 = t1426 + t1576
        t1425 = -t1606 * t2488 + t1607 * t2486
        t1235 = -t1539 + (-t1384 * t1774 + t1425 * t1777) * t1773
        t2613 = -t1425 + t2314
        t1241 = -t1384 * t1777 + t1774 * t2613
        t1546 = t1718 * t2488 - t1719 * t2486
        t1270 = t1546 * t2419 + t1776 * t2613 + t1627
        t2329 = -t1546 - t1687
        t1271 = t1426 * t1776 + t2329 * t2418 + t1561
        t1324 = t1650 + t2027
        t1655 = t1777 * t1687
        t1325 = t1777 * t2087 + t1655
        t1422 = t1546 * t1774 + t1650
        t1423 = t1546 * t1777 + t1655
        t2182 = 0.2500000000e0 * t1776
        t682 = -t1774 * t891 + t1777 * t890
        t2564 = t1081 * t1777 - t1082 * t1774 + t682
        t2664 = t2652 * t2180 + t2564 * t2182 - t2651 * t2184 + (t1014 * t1136 + t1015 * t1122 + t1078 * t1325 + t1080 * t1324 + t1177 * t1288 - t1178 * t1286) * t2578 + (t1172 * t1241 + t1175 * t1235 + t1217 * t1423 + t1219 * t1422 + t1270 * t1387 - t1271 * t1385) * t2579
        t820 = -t1043 * t1777 - t1044 * t1774
        t989 = t1192 * t1777 - t1194 * t1774
        t2562 = t820 + t989
        t2618 = t1606 * t2525
        t1808 = J2[4]
        t1810 = J2[2]
        t2394 = t1776 * t1810
        t1807 = J2[5]
        t2409 = t1773 * t1807
        t2110 = t2394 + t2409
        t1666 = t1774 * t2110 + t1777 * t1808
        t1811 = J2[1]
        t1812 = J2[0]
        t2408 = t1773 * t1810
        t2107 = t1776 * t1812 + t2408
        t1668 = t1774 * t2107 + t1777 * t1811
        t2617 = t1774 * (t1666 * t1773 + t1668 * t1776)
        t1781 = rS2[0]
        t1779 = rS2[2]
        t2416 = t1773 * t1779
        t2111 = t1776 * t1781 + t2416
        t2616 = t1777 * t2111
        t1547 = -t1720 * t2490 - t1721 * t2489
        t2612 = -t1547 + t2068
        t1028 = -t1606 * t2529 - t2017 * t2364
        t1092 = t1718 * t2364 + t2618
        t1094 = t1718 * t2529 - t2017 * t2525
        t2003 = 0.2500000000e0 * t2160
        t2201 = 0.2500000000e0 * t1719
        t2203 = 0.2500000000e0 * t1718
        t2209 = 0.2500000000e0 * t2017
        t2213 = 0.2500000000e0 * t1607
        t2587 = 0.2500000000e0 * t1606
        t472 = t1118 * t1719 + t1606 * t837 - t1607 * t2471 - t1718 * t961 - t2017 * t839 + t2160 * t998
        t473 = -t1119 * t1719 + t1606 * t838 + t1607 * t997 - t1718 * t962 - t2017 * t840 + t2160 * t999
        t854 = -t1370 * t2017 - t1371 * t1606 - t1607 * t2529 + t2160 * t2364
        t936 = t1370 * t1718 + t1443 * t1606 + t1607 * t2525 + t1719 * t2364
        t937 = -t1371 * t1718 + t1443 * t2017 - t1719 * t2529 - t2160 * t2525
        t2009 = (t1015 * t854 + t1028 * t1136 + t1092 * t1325 - t1094 * t1324 - t1286 * t937 + t1288 * t936) * t2578 + t472 * t2180 - t473 * t2184 + t664 * t2587 - t665 * t2209 - t682 * t2203 - t538 * t2213 + t2734 * t2003 - t820 * t2201
        t1282 = t1483 * t2485 - t1484 * t2483 + (t2453 / 2 + t2442 / 2) * t2494
        t1283 = -t1955 * t2483 + t1956 * t2485 - t2494 * t2046 / 2 + t1724 * t2252
        t1104 = -t1282 * t1724 + t1283 * t1720
        t1142 = t1282 * t1774 - t1283 * t1777
        t2347 = t1604 * t2485 - t1605 * t2483 + (t2446 / 2 + t1775 * t2278) * t2494
        t1169 = t1282 * t2428 - t1720 * t2347
        t1170 = t1283 * t2428 - t1724 * t2347
        t1358 = t2347 * t1774
        t1359 = t2347 * t1777
        t2186 = 0.2500000000e0 * t1773
        t2099 = t1772 * t2186
        t893 = -t1346 * t1606 - t1483 * t2361 - t1484 * t2362
        t895 = -t1349 * t1606 - t1483 * t2359 - t1484 * t2360
        t596 = -t1720 * t893 + t1724 * t895 + t2428 * t978
        t894 = t1346 * t2017 + t1955 * t2362 + t1956 * t2361
        t896 = t1349 * t2017 + t1955 * t2360 + t1956 * t2359
        t597 = -t1720 * t894 + t1724 * t896 + t2428 * t979
        t683 = -t1774 * t895 + t1777 * t893
        t684 = -t1774 * t896 + t1777 * t894
        t733 = -t1774 * t923 + t1777 * t922
        t2086 = (t1015 * t1104 + t1073 * t1359 - t1074 * t1358 + t1142 * t994 + t1169 * t1288 - t1170 * t1286) * t2578 + t596 * t2180 - t597 * t2184 - t683 * t2199 + t684 * t2193 + t733 * t2099
        t2610 = t2009 - t2086
        t2301 = t1781 + t2494
        t2242 = t2301 * t1773
        t2397 = t1776 * t1779
        t2607 = -t2397 + t2242
        t2594 = -t2640 - t2678
        t2593 = -t2639 - t2677
        t2592 = -t2638 - t2676
        t2591 = t2635 - t2675
        t2590 = -t2634 + t2674
        t2589 = t2615 + t2672
        t2588 = t2614 + t2671
        t2586 = 0.5000000000e0 * t1606
        t2585 = 0.5000000000e0 * t1772
        t2181 = 0.5000000000e0 * t1776
        t2208 = 0.5000000000e0 * t2017
        t1708 = (t1772 * t1805 + t1802 * t2470) * t1773
        t2535 = t1663 - (t1772 * t1806 + t2261) * t1773
        t1284 = -t1708 * t2419 - t1720 * t2317 - t1721 * t2535
        t2584 = t1284 - t2593
        t1285 = -t1708 * t2418 + t1724 * t2317 - t1725 * t2535
        t2583 = t1285 + t2592
        t2239 = 2 * t2375
        t2573 = -(-t1286 * t2239 + t2481 * t994 - t2482 * t993) * t2178 + t2721 * t2722
        t1942 = -t2391 + (-t2262 - t1776 - 1) * t1774
        t1900 = -t2272 + t1942
        t1207 = t1743 + (t1900 - t2066) * t2494 + t2713
        t2058 = t1753 + t2406
        t1761 = t1776 * t1766
        t2307 = t1761 + t1766
        t2227 = -t1686 - t1750 - t2307
        t1208 = (-t1937 + t2058) * t2494 - t1840 + t2227
        t1256 = (t2448 / 2 + (-t1772 * t1770 / 2 + t2292) * t2419) * t2494 - t1356 + t2311
        t1881 = (-t2400 + (-t2166 - t2292) * t1773) * t1766
        t1257 = t1881 + t2539
        t1301 = t1900 * t2494 - t1394 + t1743
        t1302 = t2058 * t2494 + t2227 - t2274
        t1366 = t2419 * t2606 + t2063 + t2311
        t1367 = t1881 + t1457
        t2571 = -(t1073 * t1256 - t1074 * t1257 + t1207 * t906 - t1208 * t907) * t2578 - (t1097 * t1301 - t1098 * t1302 + t1226 * t1366 - t1227 * t1367) * t2579
        t1246 = t1747 + (-t2266 + t2437 / 2 + (t2469 + t2172) * t1720) * t2494 - t1335
        t1368 = t2298 + (t2247 + t2018) * t1720 + t2068
        t2570 = -(t1073 * t1246 + t1074 * t2005 + t1207 * t934 - t1208 * t935) * t2578 - (t1149 * t1301 - t1150 * t1302 + t1226 * t1368 - t1227 * t1369) * t2579
        t1199 = t1550 * t2428 + t1718 * t2336 - t1719 * t2337
        t1198 = t1199 * t2428
        t1000 = t1403 * t1719 + t1446 * t1604 + t1448 * t1605 - t1718 * t2052
        t992 = t1000 * t2428
        t607 = -t1720 * t890 + t1724 * t891 + t992
        t2569 = -t1081 * t1720 + t1082 * t1724 + t1198 + t607
        t656 = -t1774 * t833 + t1777 * t831
        t2567 = -t1009 * t1777 + t1011 * t1774 - t656
        t657 = -t1774 * t834 + t1777 * t832
        t2566 = t1010 * t1777 - t1012 * t1774 + t657
        t669 = -t1774 * t874 + t1777 * t873
        t2565 = t1040 * t1777 - t1041 * t1774 + t669
        t1280 = t2299 + (-t2297 + (t2494 / 2 + t2485) * t1775) * t1606 + t2314
        t1281 = t1371 + (t2577 + 1) * t1576
        t2563 = -(t1207 * t1325 - t1208 * t1324 + t1280 * t1288 - t1281 * t1286) * t2578 - (t1301 * t1423 - t1302 * t1422 - t1384 * t1385 + t1387 * t2613) * t2579
        t1055 = t1428 * t1718 + t1604 * t2352 + t1605 * t2353
        t2098 = t1772 * t2185
        t2561 = -t1055 * t2098 - (t1073 * t1282 - t1074 * t1283 + t1169 * t1207 - t1170 * t1208) * t2578
        t1195 = t1282 * t1776 + t1358 * t1773
        t1196 = t1283 * t1776 - t2347 * t2418
        t2560 = -t1055 * t2181 - (t1078 * t1282 + t1080 * t1283 + t1195 * t1207 - t1196 * t1208) * t2578
        t1008 = t1402 * t1675 - t1403 * t2291 + t1404 * t1676 + t1458 * t1604 + t1459 * t1718 + t1460 * t1605
        t2202 = 0.5000000000e0 * t1718
        t2526 = t2525 * t1771
        t938 = t1606 * t2342 + t1718 * t2357 - t1720 * t2526 - t1771 * t2522
        t939 = -t1718 * t2356 - t1724 * t2526 + t1771 * t2533 + t2017 * t2342
        t2559 = t1008 * t2202 - (t1092 * t1246 + t1094 * t2005 + t1207 * t938 - t1208 * t939) * t2578
        t2558 = t1199 * t2181
        t2556 = t1767 * t1772
        t1950 = 0.5000000000e0 * t1403 - 0.5000000000e0 * t1501
        t2555 = t1771 * t1950
        t2554 = (t1511 + t1669) * t2585
        t2553 = (t1502 + t1663) * t2585
        t1953 = 0.2500000000e0 * t2615
        t1852 = t1953 + 0.2500000000e0 * t2672
        t2552 = t1774 * t1852
        t2551 = t1774 * t1977
        t1500 = t1724 * t2489 + t1725 * t2490 - t1777 * t2417
        t2338 = t1500 + t1692
        t2549 = t1776 * t2338
        t1952 = 0.2500000000e0 * t2614
        t1851 = t1952 + 0.2500000000e0 * t2671
        t2548 = t1777 * t1851
        t2547 = t1777 * t1975
        t2218 = 0.5000000000e0 * t1503
        t2219 = 0.5000000000e0 * t1404
        t2220 = 0.5000000000e0 * t1402
        t2545 = (t1770 * t2220 - t1775 * t2219 - t2218 - 0.5000000000e0 * t1447 + 0.5000000000e0 * t1549) * t1718
        t2192 = 0.5000000000e0 * t1724
        t2198 = 0.5000000000e0 * t1720
        t747 = -t1043 * t1606 - t1044 * t2017 - t1161 * t1718
        t2544 = (t2098 * t747 + t2192 * t2733 + t2198 * t492) * t1771
        t2543 = (-0.5000000000e0 * t1551 + t1950) * t1719
        t2542 = t2633 * t2181
        t2537 = t1720 * t1806 + t1504 + t1704
        t2536 = -t1724 * t1806 + t1513 + t2432
        t2407 = t1773 * t1812
        t2316 = -t1774 * t1808 + (2 * t2394 - t2407 + t2409) * t1777
        t1659 = t1776 * t2019 + t2417
        t1261 = t1497 * t1773 + t1659 * t2419 + t2008
        t1740 = t2489 * t2289
        t1594 = t1740 + (-t1773 * t2241 - t2398) * t1777
        t1902 = t1777 * t1912
        t2392 = t1777 * t1659
        t1262 = t2245 + (t1594 + t1902) * t1776 + (-t1500 - t2392) * t1773
        t1334 = t1773 * t1902 + t2075 + t2549
        t1418 = -t2307 - t2338
        t1488 = t1740 + (-t2398 + (-t2241 - t2541) * t1773) * t1777
        t1489 = (t2398 + (t2541 - t2019) * t1773) * t1774
        t1917 = t1942 * t2494
        t2511 = t1917 - t1497
        t2520 = -(t1078 * t1256 + t1080 * t1257 + t1207 * t912 - t1208 * t913) * t2578 - (t1101 * t1301 - t1102 * t1302 + t1217 * t1366 + t1219 * t1367) * t2579 - (t1261 * t2511 - t1262 * t1418 + t1332 * t1489 + t1334 * t1488) * t2580
        t1598 = t1663 * t1774
        t1927 = t1773 * t2039 - t2395
        t1600 = t1927 * t1774
        t2015 = -t1664 * t1774 + t2044
        t1915 = t1773 * t2015 + t2459
        t1187 = -t1598 * t1720 + t1600 * t1721 + t1774 * t1915
        t1601 = t1663 * t1777
        t1603 = t1927 * t1777
        t2043 = t1513 * t1772 - t1515 * t2470
        t2014 = -t1664 * t1777 + t2043
        t2457 = t1514 * t1776
        t1914 = t1773 * t2014 - t2457
        t1189 = -t1601 * t1720 + t1603 * t1721 + t1774 * t1914
        t2519 = t1187 * t1777 - t1189 * t1774 - t2567
        t1188 = t1598 * t1724 + t1600 * t1725 + t1777 * t1915
        t1190 = t1601 * t1724 + t1603 * t1725 + t1777 * t1914
        t2518 = t1188 * t1777 - t1190 * t1774 + t2566
        t2194 = 0.5000000000e0 * t1722
        t924 = t1606 * t2354 - t1677 * t2525 + t1718 * t2540 + t1722 * t2364
        t925 = t1679 * t2525 - t1718 * t2539 - t1722 * t2529 + t2017 * t2354
        t2517 = t1161 * t2194 + t969 * t2202 - (t1092 * t1256 - t1094 * t1257 + t1207 * t924 - t1208 * t925) * t2578
        t2200 = 0.5000000000e0 * t1719
        t2516 = t1161 * t2200 + t1000 * t2202 - (t1092 * t1280 - t1094 * t1281 + t1207 * t936 - t1208 * t937) * t2578
        t1780 = rS2[1]
        t2509 = t1774 * t1780 - t2616
        t1093 = -t1718 * t2363 + t2618
        t2373 = t1092 - t1093
        t2237 = 2 * t2373
        t2479 = 2 * t1028
        t1027 = t2669 * t1606
        t2480 = 2 * t1027
        t2508 = (t1015 * t2480 + t1018 * t2479 + t1286 * t2237) * t2178
        t1127 = (-t1282 * t1777 - t1283 * t1774) * t1773
        t604 = t1776 * t978 + (t1774 * t893 + t1777 * t895) * t1773
        t605 = t1776 * t979 + (t1774 * t894 + t1777 * t896) * t1773
        t2507 = t605 * t2184 - (t1014 * t1142 + t1015 * t1127 + t1078 * t1359 + t1080 * t1358 + t1195 * t1288 - t1196 * t1286) * t2578 - t604 * t2180 - t733 * t2182
        t645 = t1055 * t2428 - t1720 * t922 + t1724 * t923
        t2506 = t604 * t2199 - (t1014 * t1104 + t1073 * t1195 - t1074 * t1196 + t1078 * t1169 + t1080 * t1170 + t1127 * t994) * t2578 - t605 * t2193 - t645 * t2182
        t2196 = 0.5000000000e0 * t1721
        t2190 = 0.5000000000e0 * t1725
        t2187 = 0.2500000000e0 * t1772
        t2183 = 0.5000000000e0 * t1774
        t2179 = 0.5000000000e0 * t1777
        t2503 = (t1013 * t2479 + t1014 * t2480 + t1094 * t2238 - t2300 * t2373) * t2178
        t2502 = (t1074 * t2237 - t1094 * t2239 - t2479 * t993 + t2480 * t994) * t2178
        t452 = t1606 * t822 - t1718 * t956 + t1771 * t719 - t2017 * t824
        t453 = t1606 * t823 - t1718 * t957 + t1771 * t2735 - t2017 * t825
        t849 = -t1606 * t2356 + t1771 * t2530 - t2017 * t2357 + t2364 * t2434
        t2500 = t670 * t2203 + t453 * t2184 - (t1015 * t849 + t1028 * t1084 + t1092 * t1321 - t1094 * t1320 - t1286 * t939 + t1288 * t938) * t2578 - t452 * t2180 - t650 * t2587 + t651 * t2209
        t525 = -t1000 * t1718 - t1043 * t1607 + t1044 * t2160 - t1161 * t1719 + t1606 * t890 - t2017 * t891
        t610 = t1776 * t1000 + (t1774 * t890 + t1777 * t891) * t1773
        t2499 = t759 * t2201 + t610 * t2203 - (t1014 * t854 + t1028 * t1122 + t1078 * t936 + t1080 * t937 + t1092 * t1177 - t1094 * t1178) * t2578 - t525 * t2182 - t568 * t2587 + t569 * t2209 + t520 * t2213
        t2195 = 0.2500000000e0 * t1722
        t2205 = 0.2500000000e0 * t1679
        t2207 = 0.2500000000e0 * t1677
        t862 = -t1606 * t2539 + t1677 * t2529 - t1679 * t2364 - t2017 * t2540
        t2498 = t759 * t2195 + t2739 * t2205 - t520 * t2207 + t518 * t2203 - (t1014 * t862 + t1028 * t843 + t1078 * t924 + t1080 * t925 + t1092 * t912 - t1094 * t913) * t2578 - t476 * t2587 + t477 * t2209
        t527 = t1721 * t1043 - t1725 * t1044 - t1720 * t875 + t1724 * t876 + (t1008 * t1772 + t1161 * t2470) * t1773
        t2497 = t2733 * t2191 - t492 * t2197 + t527 * t2203 + t452 * t2199 - (t1028 * t842 + t1073 * t938 - t1074 * t939 + t1092 * t934 - t1094 * t935 + t849 * t994) * t2578 - t453 * t2193 - t462 * t2587 + t463 * t2209
        t446 = t1118 * t1722 + t1606 * t831 + t1677 * t2471 - t1679 * t998 - t1718 * t932 - t2017 * t833
        t447 = -t1119 * t1722 + t1606 * t832 - t1677 * t997 - t1679 * t999 - t1718 * t933 - t2017 * t834
        t2496 = t752 * t2195 + t2735 * t2205 + t719 * t2207 + t508 * t2203 + t446 * t2199 - (t1028 * t836 + t1073 * t924 - t1074 * t925 + t1092 * t906 - t1094 * t907 + t862 * t994) * t2578 - t447 * t2193 - t468 * t2587 + t469 * t2209
        t1674 = -t1774 * t1811 + t1777 * t2107
        t1734 = t1776 * t1807 - t2408
        t1710 = t1734 * t1774
        t1735 = t2394 - t2407
        t1712 = t1735 * t1774
        t1713 = t1734 * t1777
        t2495 = (-t1774 * t2316 + (t1666 + t1712) * t1777) * t1776 + (t1774 * (t1674 - t1713) + (-t1668 + t1710) * t1777) * t1773
        t2491 = 4 * t994
        t2108 = t1773 * t1808 + t1776 * t1811
        t1667 = t1774 * t2108 + t1777 * J2[3]
        t2449 = t1667 * t1774
        t2441 = t1720 * t1785
        t2433 = t1724 * t1785
        t2415 = t1773 * t1781
        t2414 = t1773 * t1786
        t2413 = t1773 * t1788
        t2404 = t1774 * t1787
        t2396 = t1776 * t1786
        t2390 = t1777 * t1780
        t2389 = t1777 * t1787
        t2388 = t1784 * t1816
        t2387 = t1785 * t1816
        t2386 = t1785 * t1817
        t2385 = t1786 * t1816
        t2384 = t1786 * t1817
        t2383 = t1786 * t1818
        t2382 = t1787 * t1816
        t2381 = t1787 * t1817
        t2380 = t1787 * t1818
        t2379 = t1788 * t1816
        t2378 = t1788 * t1817
        t2377 = t1788 * t1818
        t2372 = t1264 + t2706
        t2370 = -t1266 - t2705
        t2334 = -t1721 * t1801 - t1509 - t1703
        t2332 = -t1725 * t1801 + t1515 + t1705
        t1548 = t1724 * t2490 - t1725 * t2489
        t2327 = -t1548 - t1691
        t2323 = t1666 * t2418 + t1668 * t2399
        t1632 = t2068 * t2418
        t2321 = -t1720 * t2074 - t1632
        t1654 = t1776 * t1691
        t2319 = t1685 * t1776 + t1654
        t1742 = t1767 * t2257
        t2313 = t2164 * t2556 + t1742
        t2309 = -t1750 - t1761
        t2308 = t2611 * t2305
        t2273 = t1657 + t2309
        t2258 = t2494 * t2556
        t1883 = t1917 + t1575
        t1209 = t1883 + t2363
        t2244 = t1207 - 0.1000000000e1 * t1209
        t1303 = t1883 - t1394
        t2243 = t1301 - 0.1000000000e1 * t1303
        t2226 = t1773 * t2248 * t2611 + t2308
        t1211 = t2015 * t1776 + (t1598 * t1772 - t1600 * t2470 - t1508) * t1773
        t2225 = 0.5000000000e0 * t1211
        t1212 = t2014 * t1776 + (t1601 * t1772 - t1603 * t2470 + t1514) * t1773
        t2224 = 0.5000000000e0 * t1212
        t1553 = -t1720 * t1805 - t1721 * t1802
        t1222 = -t1553 * t1776 + (t1772 * t2334 + t2470 * t2537) * t1773
        t2223 = 0.5000000000e0 * t1222
        t1556 = t1724 * t1805 - t1725 * t1802
        t1223 = -t1556 * t1776 + (t1772 * t2332 + t2470 * t2536) * t1773
        t2222 = 0.5000000000e0 * t1223
        t2217 = 0.5000000000e0 * t1604
        t2216 = 0.5000000000e0 * t1605
        t2212 = 0.5000000000e0 * t1607
        t2206 = 0.5000000000e0 * t1677
        t2204 = 0.5000000000e0 * t1679
        t2189 = 0.2500000000e0 * t1771
        t2188 = 0.5000000000e0 * t1771
        t746 = (t1207 * t1359 - t1208 * t1358 + t1282 * t1288 - t1283 * t1286) * t2578
        t2171 = t2180 * t2632 - t2184 * t2631 + t746
        t606 = (t1078 * t1280 + t1080 * t1281 + t1177 * t1207 - t1178 * t1208) * t2578
        t737 = (t1207 * t1321 - t1208 * t1320 + t1246 * t1288 + t1286 * t2005) * t2578
        t765 = (t1217 * t2613 + t1219 * t1384 + t1270 * t1301 - t1271 * t1302) * t2579
        t901 = (t1301 * t1468 - t1302 * t1467 + t1368 * t1387 - t1369 * t1385) * t2579
        t649 = t1776 * t1055 + (t1774 * t922 + t1777 * t923) * t1773
        t2143 = t649 * t2181
        t2119 = t1265 * t1774 + t1267 * t1777
        t1299 = t1773 * t2043 - t2457
        t2118 = t1297 * t1774 + t1299 * t1777
        t2112 = -t2397 + t2415
        t2109 = -t1773 * t1811 + t1776 * t1808
        t2106 = t1428 * t2202
        t2102 = t1720 * t2189
        t2100 = t1724 * t2189
        t2097 = t1772 * t2182
        t2095 = t1161 * t2185
        t2094 = t1773 * t2184
        t2093 = t1773 * t2180
        t2092 = t1774 * t2182
        t2091 = t1776 * t2180
        t1518 = -t1902 + t1941
        t1706 = (t1772 * t2490 + t2470 * t2489) * t1773
        t1577 = t1706 * t1774 + t1744
        t1578 = t1706 * t1777 + t1749
        t1083 = (-t1418 * t1577 + t1516 * t2327 + t1518 * t2612 + t1578 * t2511) * t2580
        t2090 = t2271 - 0.1e1 * t1753
        t2085 = t2093 * t684 + t2094 * t683 - t2507
        t2084 = 0.2500000000e0 * t2470
        t2083 = 0.5000000000e0 * t2470
        t2082 = t2193 * t2631 - t2199 * t2632 - t2561
        t2081 = t2093 * t2631 + t2094 * t2632 - t2560
        t2077 = t1776 * t2541
        t2051 = t1771 * t2099
        t2050 = t1772 * t2094
        t2049 = t1772 * t2093
        t2048 = t1772 * t2095
        t2047 = t2093 * t597 + t2094 * t596 + t2099 * t649 - t2506
        t2032 = t1773 * t2084
        t2031 = t1161 * t2083
        t2030 = t1263 * t2083
        t2028 = (-t2469 - 1) * t2258
        t2010 = t2051 * t820 + t2100 * t2734 + t2102 * t538 - t2500
        t2002 = 0.2500000000e0 * t2090
        t2001 = 0.5000000000e0 * t2090
        t1999 = t2003 * t2739 + t2093 * t473 + t2094 * t472 - t2499
        t1995 = 0.5000000000e0 * t2657
        t1994 = 0.5000000000e0 * t2656
        t1993 = 0.5000000000e0 * t2691
        t1992 = 0.5000000000e0 * t2701
        t1988 = 0.5000000000e0 * t2698
        t1186 = -t1595 * t1718 - t1597 * t1719 + (t1502 * t2470 + t1772 * t2016) * t1773
        t1987 = 0.5000000000e0 * t527 - t1053 * t2198 + t1054 * t2192 - t1192 * t2196 - t1194 * t2190 + (t1186 * t1772 + t1263 * t2470) * t2185
        t1986 = 0.5000000000e0 * t2692
        t565 = -t1720 * t838 + t1724 * t840 + t2428 * t962
        t757 = -t1057 * t1720 + t1059 * t1724 + t1154 * t2428
        t1985 = 0.5000000000e0 * t565 + 0.5000000000e0 * t757
        t1984 = 0.5000000000e0 * t2652
        t1983 = 0.5000000000e0 * t2651
        t1185 = t1776 * t1186
        t1007 = t1776 * t1008
        t600 = t1007 + (t1774 * t875 + t1777 * t876) * t1773
        t1982 = (t1053 * t1774 + t1054 * t1777) * t2185 + 0.5000000000e0 * t600 + 0.5000000000e0 * t1185
        t1981 = 0.5000000000e0 * t610 + t2558 + (t1081 * t1774 + t1082 * t1777) * t2185
        t1980 = 0.5000000000e0 * t2690
        t1979 = 0.5000000000e0 * t2689
        t1970 = 0.5000000000e0 * t2693
        t1968 = 0.5000000000e0 * t2738
        t1966 = 0.2500000000e0 * t2641
        t1965 = 0.2500000000e0 * t2640
        t1964 = 0.2500000000e0 * t2639
        t1963 = 0.2500000000e0 * t2638
        t1962 = 0.2500000000e0 * t2635
        t1961 = 0.2500000000e0 * t2634
        t1960 = 0.2500000000e0 * t2632
        t1959 = 0.2500000000e0 * t2631
        t1957 = 0.5000000000e0 * t2629
        t1954 = t2180 * t2591 - t2184 * t2590 - t2563
        t1951 = 0.5000000000e0 * t2673
        t1936 = t2003 * t2614 + t2209 * t2634 + t2213 * t2615 + t2587 * t2635 - t2516
        t1935 = -t2205 * t2614 - t2207 * t2615 + t2209 * t2640 + t2587 * t2641 - t2517
        t1934 = t1771 * t2048 + t2100 * t2614 - t2102 * t2615 + t2209 * t2638 + t2587 * t2639 - t2559
        t1929 = t2093 * t2689 + t2094 * t2690 + t2664
        t1925 = t2179 * t683 - t2183 * t684
        t1924 = t1000 * t2181 + t2093 * t2590 + t2094 * t2591 + t2558 + t606 + t765
        t493 = t1043 * t1677 - t1044 * t1679 - t1161 * t1722 + t1606 * t873 - t1718 * t969 - t2017 * t874
        t1922 = t2049 * t2733 - t2050 * t492 + t2097 * t747 + t2099 * t493 - t2496
        t1921 = t2091 * t2733 - t2092 * t492 + t2093 * t447 + t2094 * t446 + t2182 * t493 - t2186 * t747 - t2498
        t522 = -t1008 * t1718 + t1606 * t875 + t1771 * t752 - t2017 * t876
        t1920 = t2032 * t747 + t2051 * t752 + t2099 * t522 + t2100 * t2735 - t2102 * t719 - t2497
        t1901 = t2633 * t2083
        t1899 = (t1254 + t2120) * t2181 + (t1187 * t1774 + t1189 * t1777 + t1354) * t2185 - 0.5000000000e0 * t2650
        t1255 = t1669 * t1724 + t1671 * t1725 + t1777 * t1913
        t1355 = t1663 * t1724 - t1664 * t2418 + t1665 * t1725
        t1898 = (t1255 + t2119) * t2181 + (t1188 * t1774 + t1190 * t1777 - 0.1e1 * t1355) * t2185 + 0.5000000000e0 * t2655
        t1290 = t2013 * t1776 + (t1669 * t1772 - t1671 * t2470 + t1664) * t1773
        t1397 = t1773 * t2042 - t2450
        t1897 = (t1290 + t2118) * t2181 + (t1774 * t1211 + t1777 * t1212 - 0.1e1 * t1397) * t2185 + 0.5000000000e0 * t2697
        t1200 = -t1553 * t2419 - t1720 * t2334 - t1721 * t2537
        t1202 = -t1556 * t2419 - t1720 * t2332 - t1721 * t2536
        t559 = t1776 * t956 + (t1774 * t822 + t1777 * t824) * t1773
        t734 = t1131 * t1776 + (t1001 * t1774 + t1003 * t1777) * t1773
        t1896 = t1284 * t2181 + (t1200 * t1774 + t1202 * t1777) * t2185 + 0.5000000000e0 * t559 + 0.5000000000e0 * t734
        t1201 = -t1553 * t2418 + t1724 * t2334 - t1725 * t2537
        t1203 = -t1556 * t2418 + t1724 * t2332 - t1725 * t2536
        t560 = t1776 * t957 + (t1774 * t823 + t1777 * t825) * t1773
        t735 = t1132 * t1776 + (t1002 * t1774 + t1004 * t1777) * t1773
        t1895 = -0.1e1 * t1285 * t2181 - 0.1e1 * (t1201 * t1774 + t1203 * t1777) * t2185 - 0.5000000000e0 * t560 - 0.5000000000e0 * t735
        t1894 = t1200 * t2179 - t1202 * t2183 + 0.5000000000e0 * t2649
        t1893 = t1201 * t2179 - t1203 * t2183 + 0.5000000000e0 * t2648
        t1892 = 0.5000000000e0 * t1064 + 0.5000000000e0 * t2637
        t1351 = t1776 * t1355
        t1065 = t1773 * t2119 + t1351
        t1891 = 0.5000000000e0 * t1065 + 0.5000000000e0 * t2743
        t1890 = -t1397 * t2181 - t2118 * t2185 - 0.5000000000e0 * t2645
        t1129 = t1264 * t1777 - t1266 * t1774
        t1889 = 0.5000000000e0 * t1129 - t1970
        t1130 = t1265 * t1777 - t1267 * t1774
        t1888 = 0.5000000000e0 * t1130 + t1968
        t1882 = t1083 + t737 + t901 + (-t1223 - t2583) * t2184 + (t1222 + t2584) * t2180
        t1880 = -t2733 * t2180 + t492 * t2184 - 0.2500000000e0 * t493
        t1879 = t2032 * t2562 + t2099 * t2684 + t2197 * t2693 - t2749
        t1878 = -t2202 * t522 - t2208 * t453 + t2586 * t452
        t1876 = -t2098 * t645 - t2192 * t597 + t2198 * t596
        t1874 = t1446 * t2217 + t1448 * t2216 + t1550 * t2098
        t1873 = -t1984 + t1995
        t1872 = -t1983 + t1994
        t1871 = -t1980 + t1993
        t1870 = t1979 - t1992
        t1863 = -t1981 + t1987
        t1859 = t1966 + 0.2500000000e0 * t2679
        t1858 = t1965 + 0.2500000000e0 * t2678
        t1857 = t1964 + 0.2500000000e0 * t2677
        t1856 = t1963 + 0.2500000000e0 * t2676
        t1855 = -t1962 + 0.2500000000e0 * t2675
        t1854 = -t1961 + 0.2500000000e0 * t2674
        t1849 = (t1502 + t2535) * t2083
        t1848 = -t2218 * t2469 - 0.5000000000e0 * t1596 - 0.5000000000e0 * t2317
        t1847 = t1665 * t2083 + 0.5000000000e0 * t1670 + 0.5000000000e0 * t1735 + 0.5000000000e0 * t2110
        t1846 = t1671 * t2083 - 0.5000000000e0 * t1664 + 0.5000000000e0 * t1734 - 0.5000000000e0 * t2107
        t1845 = t1772 * t2181 * t2673 + t2049 * t2588 + t2050 * t2589 + t2098 * t2629 + t2193 * t2594 + t2199 * t2595 - t2571
        t1844 = -t2570 + (t1008 + t1186) * t2098 + (t2030 + t2031) * t1773 + t2593 * t2199 - t2589 * t2197 + t2592 * t2193 - t2588 * t2191
        t1842 = t2049 * t2743 + t2050 * t2637 - t2091 * t2700 + t2092 * t2647 + t2093 * t2701 + t2094 * t2691 + t2097 * t2645 + t2099 * t2697 + t2182 * t2698 + t2186 * t2633 - t2665
        t776 = t1351 + (t1774 * t2370 + t1777 * t2372) * t1773
        t807 = -t1774 * t2372 + t1777 * t2370
        t808 = -t1774 * t2371 + t1777 * t2369
        t1839 = (-t1065 + t776) * t2180 + (-t1130 + t807) * t2094 + (t1129 + t808) * t2093 + t2750
        t1838 = t1894 - t1899
        t1837 = t1893 - t1898
        t1836 = t1892 + 0.5000000000e0 * t777 - 0.5000000000e0 * t2637
        t1835 = -t1891 + 0.5000000000e0 * t776 + 0.5000000000e0 * t2743
        t1834 = -t2200 * t747 - t2202 * t525 - t2208 * t473 - t2212 * t492 + t2586 * t472
        t1827 = -t2095 - t2520 + (-t1397 - t1263) * t2185 + (t1290 + t2629) * t2181 + (t1211 + t2716) * t2094 + (t1255 + t1212 + t2594) * t2093 + (t1297 - t1354 + t2589) * t2092 + (t1355 + t1299 + t2588) * t2091
        t1826 = -t2194 * t747 - t2202 * t493 - t2204 * t2733 + t2206 * t492 - t2208 * t447 + t2586 * t446
        t1825 = t1458 * t2217 + t1460 * t2216 - t1597 * t2200 + t1675 * t2220 + t1676 * t2219 - t1708 * t2181
        t1398 = t1667 * t1777 + t2617
        t1399 = t2323 - t2449
        t1824 = -0.1e1 * t1888 + (t2323 - 0.1e1 * t1399) * t2179 + (-0.1e1 * t1398 + t2617) * t2183 + 0.5000000000e0 * t807 + 0.5000000000e0 * t2738
        t1823 = t1889 + (-0.1e1 * t1399 - 0.1e1 * t2449) * t2183 + t1398 * t2179 - 0.5000000000e0 * t1667 * t1769 + 0.5000000000e0 * t808 + 0.5000000000e0 * t2693
        t1568 = -t2390 + (-t1776 * t2301 - t2416 - t2494) * t1774
        t1569 = t2307 - t2509
        t1637 = t2607 * t1774
        t1756 = t1777 * t2397
        t1638 = -t1777 * t2242 + t1756
        t1819 = m[1]
        t1821 = t1819 * (t1568 * t1637 + t1569 * t1638) + t1411 * t2217 + t1413 * t2216 - t1512 * t2200 + t1610 * t2220 + t1611 * t2219 + t1723 * t2218
        t1714 = t2109 * t1777
        t1711 = t2109 * t1774
        t1648 = -t1761 - t2616
        t1647 = t2607 * t1777
        t1646 = (-t2111 - t2302) * t1774
        t1645 = t1774 * t2112 + t2256
        t1562 = t1720 * t1687
        t1535 = t1576 * t2428
        t1519 = t2309 + t2392
        t1517 = (t1659 - t2077) * t1774
        t1492 = t1724 * t2314
        t1388 = t1499 * t1777 + t2273
        t1386 = t1652 + (t1499 - t2077) * t1774
        t1382 = t1548 * t1776 + t1654 + (-t1706 * t1773 - t2258) * t1777
        t1381 = t1706 * t2419 + t1776 * t2612 + t1742
        t1352 = t1593 * t1774 - t1594 * t1777 + t2226
        t1318 = t1776 * (-t1708 * t1776 + (t1772 * t2317 + t2470 * t2535) * t1773)
        t1317 = t1774 * t2612 + t1777 * t2327
        t1316 = -t1632 + (t1547 * t1777 + t1774 * t2327) * t1773
        t1296 = t1633 + (t1497 * t1777 - t1774 * t2338) * t1773
        t1293 = t1774 * t2339 - t1777 * t2338 - t2161
        t1289 = t1777 * t2354 + t2273
        t1287 = t1652 + (-t2077 + t2354) * t1774
        t1269 = t1776 * t1445 + (-t1592 * t1773 + t2028) * t1777 + t2319
        t1268 = t1592 * t2419 + t1776 * t2023 + t2313
        t1245 = t1426 * t2428 + t1724 * t2329 + t1535
        t1244 = -t1546 * t1720 + t2428 * t2613 - t1562
        t1233 = t1774 * t2341 - t1777 * t2320 + t2226
        t1224 = t1634 + (-t1613 + t2681) * t1777 + (-t1594 * t1773 - t2549) * t1774
        t1214 = (-t1369 * t1774 + t1444 * t1777) * t1773 + t2321
        t1213 = -4 * t1418 * t1488 + 4 * t1489 * t2511
        t1210 = t1384 * t1720 + t1425 * t1724 - t1492
        t1204 = 4 * t1418 * t2327 + 4 * t2511 * t2612
        t1156 = t2356 * t1776 + (-t1773 * t2342 + t2028) * t1777 + t2319
        t1155 = t1773 * t2251 + t1776 * t2006 + t2313
        t1152 = t1724 * t2033 + t2088 * t2428 + t1535
        t1151 = -t1720 * t2087 + t2035 * t2428 - t1562
        t1134 = -t1283 * t1718 + t2017 * t2347
        t1133 = -t1282 * t1718 + t1606 * t2347
        t1109 = t1774 * t2512 - t1777 * t2514 + t2226
        t1075 = t1720 * t2034 + t1724 * t2089 - t1492
        t1069 = 4 * t1293 * t1317 - 4 * t1516 * t1577 + 4 * t1518 * t1578
        t1068 = (t1774 * t2005 + t1777 * t2357) * t1773 + t2321
        t1066 = t1282 * t2017 - t1283 * t1606
        t1061 = 4 * t1301 * t2613 - 4 * t1302 * t1384
        t1052 = 4 * t1301 * t1368 - 4 * t1302 * t1369
        t1050 = 4 * t1301 * t1366 - 4 * t1302 * t1367
        t1037 = t1718 * t1055
        t919 = 4 * t1334 * t2358
        t900 = 4 * t1175 * t1241 - 4 * t1385 * t1422 + 4 * t1387 * t1423
        t899 = 4 * t1175 * t1230 - 4 * t1385 * t1467 + 4 * t1387 * t1468
        t892 = 4 * t1207 * t1282 - 4 * t1208 * t1283
        t889 = 4 * t1207 * t1280 - 4 * t1208 * t1281
        t861 = 4 * t1207 * t1256 - 4 * t1208 * t1257
        t848 = 4 * t1207 * t1246 + 4 * t1208 * t2005
        t835 = 4 * t1224 * t1296 + 4 * t1261 * t1332 + 4 * t1262 * t1334
        t762 = 4 * t1172 * t1235 + 4 * t1217 * t1270 + 4 * t1219 * t1271
        t740 = 4 * t1015 * t1142 - 4 * t1286 * t1358 + 4 * t1288 * t1359
        t739 = 4 * t1015 * t1136 - 4 * t1286 * t1324 + 4 * t1288 * t1325
        t736 = -4 * t1227 * t2366
        t726 = 4 * t1015 * t1084 - 4 * t1286 * t1320 + 4 * t1288 * t1321
        t721 = 4 * t1219 * t2367
        t678 = 4 * t1015 * t1018
        t666 = 4 * t1067 * t1182 + 4 * t1149 * t1226 - 4 * t1150 * t1227
        t641 = 4 * t1045 * t1182 + 4 * t1097 * t1226 - 4 * t1098 * t1227
        t640 = t1606 * t922 - t2017 * t923 - t1037
        t638 = 4 * t1048 * t1172 + 4 * t1101 * t1217 + 4 * t1102 * t1219
        t601 = 4 * t1014 * t1127 + 4 * t1078 * t1195 + 4 * t1080 * t1196
        t589 = 4 * t1014 * t1122 + 4 * t1078 * t1177 + 4 * t1080 * t1178
        t588 = t1606 * t894 - t1718 * t979 - t2017 * t896
        t587 = t1606 * t893 - t1718 * t978 - t2017 * t895
        t572 = 4 * t1073 * t1169 - 4 * t1074 * t1170 + 4 * t1104 * t994
        t561 = 4 * t1027 * t1028 + 4 * t1094 * t2373
        t555 = 4 * t1013 * t1014 - 4 * t1080 * t2374
        t554 = -4 * t1074 * t2375 - t2491 * t993
        t530 = 4 * t1028 * t849 + 4 * t1092 * t938 - 4 * t1094 * t939
        t529 = 4 * t1028 * t854 + 4 * t1092 * t936 - 4 * t1094 * t937
        t528 = 4 * t1028 * t862 + 4 * t1092 * t924 - 4 * t1094 * t925
        t504 = 4 * t1073 * t934 - 4 * t1074 * t935 + 4 * t842 * t994
        t494 = 4 * t1014 * t843 + 4 * t1078 * t912 + 4 * t1080 * t913
        t480 = 4 * t1073 * t906 - 4 * t1074 * t907 + 4 * t836 * t994
        cor[0] = ((0.4e1 * t1301 - 0.4e1 * t1303) * t1302 * t2177 + (0.4e1 * t1207 - 0.4e1 * t1209) * t1208 * t2178) * t1788 ** 2 + ((t1213 * t2176 + t1050 * t2177 + t861 * t2178 + t1950 * t1722 + (t2553 - 0.1e1 * t1847) * t1776 + (t2554 - 0.1e1 * t1846) * t1773 + t1821 + (t1412 - 0.1e1 * t1510) * t2202) * t2658 + (t2511 * t1519 - 0.1000000000e1 * t1418 * t1517 - 0.1000000000e1 * t1488 * t1516 + t1489 * t1518) * t2380 + (t1301 * t1388 - 0.1000000000e1 * t1302 * t1386 + t1366 * t1387 - 0.1000000000e1 * t1367 * t1385) * t2381 + (-0.2500000000e0 * t678 + t1207 * t1289 - 0.1000000000e1 * t1208 * t1287 + t1256 * t1288 - 0.1000000000e1 * t1257 * t1286) * t2382 + (-0.1e1 * t1824 + t2225 - 0.1e1 * t2108 * t2179 + (-0.1e1 * t1666 - 0.1e1 * t1712) * t2185 + (-0.1e1 * t1668 + t1710) * t2181) * t2389 + (t1823 - 0.1e1 * t2224 - 0.1e1 * t2108 * t2183 + t2316 * t2185 + (t1674 - 0.1e1 * t1713) * t2181) * t2404 + (t1568 * t1648 + t1569 * t1646 - t1637 * t1647 - 0.1000000000e1 * t1638 * t1645) * t1787 * t1819) * t1787 + ((t848 * t2178 + t1204 * t2176 + t1052 * t2177 + ((-0.1e1 * t2555 - 0.1e1 * t1848) * t1772 + t1849) * t1773 + t1825 + (t1459 - 0.1e1 * t1595) * t2202) * t2658 + (t1882 + ((-0.1e1 * t1129 - 0.1e1 * t808) * t2180 + (t1130 - 0.1e1 * t807) * t2184) * t1773 + t1827 + (t1065 - 0.1e1 * t776) * t2180 - t2750) * t2659 + (t919 * t2719 + t1332 * t2612 - 0.1e1 * t1334 * t2327 + t1381 * t2511 - 0.1000000000e1 * t1382 * t1418) * t2383 + (t721 * t2719 + t1217 * t1368 + t1219 * t1369 + t1268 * t1301 - 0.1000000000e1 * t1269 * t1302) * t2384 + (-0.2500000000e0 * t555 + t1078 * t1246 - t1080 * t2005 + t1155 * t1207 - 0.1000000000e1 * t1156 * t1208) * t2385 + ((-0.1e1 * t1836 + t2222) * t1777 + (-0.1e1 * t1835 + t2223) * t1774 + t2583 * t2179 + t2584 * t2183) * t2414 + (t1185 + t1318 + t1007) * t1786) * t1786 + ((t1061 * t2177 + t2178 * t889 + t1874 + t2543 - t2545) * t2658 + (t1845 + t1954 + t2573) * t2659 + (t1844 + t1924 - t2666) * t2660 + (-0.2500000000e0 * t736 + t1226 * t2613 - 0.1000000000e1 * t1227 * t1384 + t1244 * t1301 - 0.1000000000e1 * t1245 * t1302) * t2386 + (t1073 * t1280 - 0.1000000000e1 * t1074 * t1281 + t1151 * t1207 - 0.1000000000e1 * t1152 * t1208 - 0.2500000000e0 * t554) * t2387 + (t1198 + t992) * t1785) * t1785 + ((t2106 + t892 * t2178 + (0.5000000000e0 * t1429 - t2220) * t1605 + (0.5000000000e0 * t1427 + t2219) * t1604) * t2658 + (t1935 + t2171 - t2508) * t2659 + (t1934 + t2081 - t2503) * t2660 + (t1936 + t2082 - t2502) * t2661 + (t1092 * t1282 - 0.1000000000e1 * t1094 * t1283 + t1133 * t1207 - 0.1000000000e1 * t1134 * t1208 - 0.2500000000e0 * t561) * t2388 + (-0.1e1 * t1037 - 0.1e1 * t2631 * t2208 + t2632 * t2586) * t1784) * t1784 + 0.5000000000e0 * (t2716 * t2389 + (-0.1e1 * t933 - 0.1e1 * t1255 - 0.1e1 * t1108 - 0.1e1 * t1041 - 0.1e1 * t874) * t2404) * t1787 + 0.5000000000e0 * (t2590 * t2433 + (-0.1e1 * t1081 - 0.1e1 * t1153 - 0.1e1 * t890 - 0.1e1 * t961) * t2441) * t1785
        cor[1] = (t1385 * t2243 * t2378 + t1286 * t2244 * t2379 + (-0.1e1 * t2554 + t1846) * t2413 + (-0.1e1 * t1821 + (-0.1e1 * t2553 + t1847) * t1776 + (-0.1e1 * t1412 + t1510) * t2202 + (-0.1e1 * t1403 + t1501) * t2194) * t1788 - 0.2500000000e0 * t1213 * t2377 - 0.2500000000e0 * t1050 * t2378 - 0.2500000000e0 * t861 * t2379) * t1788 + ((-t1774 * t1823 + t1777 * t1824 + t2178 * t678) * t2658 + (t1819 * (-0.1e1 * t1647 * t1648 - 0.1e1 * t1645 * t1646 + (-0.1e1 * t1774 * (t1774 * t2111 + t2390) + t2509 * t1777 - 0.1e1 * t2161) * (-0.1e1 * t1777 * (-0.1e1 * t1777 * t2415 + t1756) + t2112 * t1768 + t2308)) + (t1293 * t1352 - 0.1e1 * t1516 * t1517 + t1518 * t1519) * t1818 + (t1015 * t1109 - 0.1e1 * t1286 * t1287 + t1288 * t1289) * t1816 + (t1175 * t1233 - 0.1e1 * t1385 * t1386 + t1387 * t1388) * t1817 + (-0.1e1 * t1768 * t1714 - 0.1e1 * (-0.1e1 * t1711 * t1774 + t2495) * t1777 - 0.1e1 * t2518) * t2183 + (t1711 * t1769 + (-0.1e1 * t1714 * t1777 + t2495) * t1774 + t2519) * t2179) * t1787) * t1787 + (((-t1951 * t1776 + (-t1957 - t2548 - t2552) * t1773) * t1772 - t2573 + t1858 * t1724 + t1859 * t1720 + t1954 + t2571) * t2658 + (-t1774 * t1979 + t1777 * t1980 + t2177 * t900 + t2178 * t739) * t2659 + t1870 * t2433 + t1871 * t2441 + (t1175 * t1210 + t1182 * t1241 + t1226 * t1423 - 0.1000000000e1 * t1227 * t1422 + t1244 * t1387 - 0.1000000000e1 * t1245 * t1385 - 0.2500000000e0 * t641) * t2386 + (-0.2500000000e0 * t480 + t1015 * t1075 + t1073 * t1325 - 0.1000000000e1 * t1074 * t1324 + t1136 * t994 + t1151 * t1288 - 0.1000000000e1 * t1152 * t1286) * t2387 + ((-0.1e1 * t565 - 0.1e1 * t757) * t2183 + t2692 * t2179 + (0.1e1 * t2542 + (-0.1e1 * t2551 + 0.1e1 * t2547 - 0.1e1 * t1988) * t1773 + t2564 * t2185) * t1772) * t1785) * t1785 + ((-t1606 * t1966 + t1677 * t1953 + t1679 * t1952 - t1965 * t2017 + t2171 + t2508 + t2517) * t2658 + (t2178 * t740 + t1925) * t2659 + (t2009 + (t1773 * t1880 - t2182 * t747) * t1772 + t2086 + t2496) * t2661 + (t1015 * t1066 + t1028 * t1142 + t1092 * t1359 - 0.1000000000e1 * t1094 * t1358 + t1133 * t1288 - 0.1000000000e1 * t1134 * t1286 - 0.2500000000e0 * t528) * t2388 + (t2179 * t587 - 0.1e1 * t2183 * t588 - 0.1e1 * t2202 * t733 - 0.1e1 * t2208 * t684 + t2586 * t683 - 0.1e1 * t1826) * t1784) * t1784 + ((t1839 + t1882 + (-0.5000000000e0 * t1290 - 0.1e1 * t2548 - 0.1e1 * t2552 - t1957 + (-0.1e1 * t1299 - 0.1e1 * t1355) * t2180 + (-0.1e1 * t1297 + t1354) * t2184) * t1776 + (0.5000000000e0 * t1397 + t1858 * t1777 - 0.1e1 * t1859 * t1774 + 0.1e1 * t1951 + (-0.1e1 * t1212 - 0.1e1 * t1255) * t2180 + (-0.1e1 * t1211 - 0.1e1 * t1254) * t2184) * t1773 + t2520) * t2658 + (t1069 * t2176 - t1774 * t1893 + t1777 * t1894 + t2177 * t899 + t2178 * t726) * t2659 + (t2010 + t1880 * t1776 + (-t2180 * t447 - t2184 * t446 + 0.2500000000e0 * t747) * t1773 + t2085 + t2498) * t2662 + (((-0.1e1 * t2180 * t2743 + (-0.1e1 * t881 + t520) * t2184) * t1772 + (-0.1e1 * t469 - 0.1e1 * t578) * t2180 + (-0.1e1 * t468 - 0.1e1 * t577) * t2184 + (-0.1e1 * t518 - 0.1e1 * t632) * t2187 - 0.2500000000e0 * t2633) * t1773 + t1879 + t1929 + (t2700 * t2180 + (-0.1e1 * t759 - 0.1e1 * t914) * t2187 + 0.2500000000e0 * (-0.1e1 * t719 - 0.1e1 * t865) * t1774 - 0.2500000000e0 * t627 - 0.2500000000e0 * t508) * t1776 + t2665) * t2661 + (-0.2500000000e0 * t835 + t1293 * t1316 + t1296 * t1317 + t1332 * t1578 + t1334 * t1577 + t1381 * t1518 - 0.1000000000e1 * t1382 * t1516) * t2383 + (t1172 * t1230 + t1175 * t1214 + t1217 * t1468 + t1219 * t1467 + t1268 * t1387 - 0.1000000000e1 * t1269 * t1385 - 0.2500000000e0 * t638) * t2384 + (-0.2500000000e0 * t494 + t1014 * t1084 + t1015 * t1068 + t1078 * t1321 + t1080 * t1320 + t1155 * t1288 - 0.1000000000e1 * t1156 * t1286) * t2385 + ((-0.1e1 * t1891 + t2223) * t1777 + (-0.1e1 * t1892 - 0.1e1 * t2222) * t1774 - 0.1e1 * t1897 + 0.5000000000e0 * t2684) * t2396 + (t1774 * t1838 + t1777 * t1837 - 0.1e1 * t1890) * t2414 + (t1774 * t1895 + t1777 * t1896) * t1786) * t1786
        cor[2] = ((-0.1e1 * t1825 + (-0.1e1 * t1459 + t1595) * t2202) * t1788 + (-0.2500000000e0 * t1204 + (t1332 - 0.1000000000e1 * t1333) * t1418) * t2377 + (-0.2500000000e0 * t1052 + (t1217 - 0.1000000000e1 * t1218) * t1302 + (-0.1000000000e1 * t1301 + t1303) * t1219) * t2378 + (-0.2500000000e0 * t848 + (t1078 - 0.1000000000e1 * t1079) * t1208 + (-0.1000000000e1 * t1207 + t1209) * t1080) * t2379 + ((t1848 + t2555) * t1772 - 0.1e1 * t1849) * t2413) * t1788 + ((t1839 - 0.1e1 * t901 - 0.1e1 * t737 - 0.1e1 * t1083 - 0.1e1 * t1857 * t1777 - 0.1e1 * t1856 * t1774 + t1827 + (-0.1e1 * t1222 - 0.1e1 * t1284) * t2180 + (t1223 + t1285) * t2184) * t2658 + (-0.2500000000e0 * t1069 + t1224 * t1293 + t1261 * t1518 - 0.1000000000e1 * t1262 * t1516 + t1296 * t1352 + t1332 * t1519 + t1334 * t1517) * t2380 + (t1048 * t1175 + t1101 * t1387 - 0.1000000000e1 * t1102 * t1385 + t1172 * t1233 + t1217 * t1388 + t1219 * t1386 - 0.2500000000e0 * t899) * t2381 + (-0.2500000000e0 * t726 + t1014 * t1109 + t1015 * t843 + t1078 * t1289 + t1080 * t1287 - 0.1000000000e1 * t1286 * t913 + t1288 * t912) * t2382 + ((t1888 + t2225) * t1776 - 0.1e1 * t1838 + (-0.1e1 * t1297 + t2518) * t2185) * t2389 + ((t1889 - 0.1e1 * t2224) * t1776 + t1837 + (t1299 + t2519) * t2185) * t2404 + (t2181 * t2565 - 0.1e1 * t2185 * t2562) * t1787) * t1787 + ((t555 * t2178 - t721 * t2177 - t919 * t2176 + (t1774 * t1835 + t1777 * t1836) * t1773) * t2658 + (t494 * t2178 + t638 * t2177 + t835 * t2176 + (t1774 * t1892 + t1777 * t1891 + t1897) * t1776 + (t1774 * t1899 + t1777 * t1898 + t1890) * t1773) * t2659 + (0.5000000000e0 * t1318 + t1982) * t2396 + ((t1223 * t2181 - 0.1e1 * t1895) * t1777 + (t1222 * t2181 + t1896) * t1774) * t2414 + ((t1014 * t1068 + t1078 * t1155 + t1080 * t1156) * t1816 + (t1172 * t1214 + t1217 * t1268 + t1219 * t1269) * t1817 + (t1296 * t1316 + t1332 * t1381 + t1334 * t1382) * t1818) * t1786) * t1786 + ((t1852 * t1721 + t1856 * t1724 + t1857 * t1720 + t1851 * t1725 + t1924 + t2666 + (-0.1e1 * t2031 - 0.1e1 * t2030 + (-0.1e1 * t1008 - 0.1e1 * t1186) * t2585) * t1773 + t2570) * t2658 + (((-0.1e1 * t820 - 0.1e1 * t989) * t2084 + (-0.1e1 * t670 - 0.1e1 * t828) * t2187) * t1773 + t1842 + t1929 + t2749 + (-0.1e1 * t538 - 0.1e1 * t661) * t2197) * t2659 + (t762 * t2177 + t589 * t2178 + t1981 * t1776 + (t1774 * t1984 + t1777 * t1983) * t1773) * t2660 + (t1210 * t1172 + t1182 * t1235 + t1244 * t1217 + t1245 * t1219 + t1226 * t1270 - 0.1000000000e1 * t1227 * t1271 - 0.2500000000e0 * t666) * t2386 + (-0.2500000000e0 * t504 + t1075 * t1014 + t1073 * t1177 - 0.1000000000e1 * t1074 * t1178 + t1151 * t1078 + t1152 * t1080 + t994 * t1122) * t2387 - 0.1e1 * t1872 * t2433 + t1873 * t2441 + ((-0.1e1 * t1772 * t1863 + t1774 * t1986 + t1777 * t1985 + 0.1e1 * t1901) * t1773 + t2647 * t2196 - t2700 * t2190 + t2569 * t2181) * t1785) * t1785 + ((-t1963 * t2017 + t2503 - t1964 * t1606 + (t1720 * t1953 - t1724 * t1952 - t2048) * t1771 + t2081 + t2559) * t2658 + (t1921 + (-t2099 * t820 - t2193 * t2734 - t2199 * t538) * t1771 + t2085 + t2500) * t2659 + (t601 * t2178 + t2143 + (t2179 * t605 + t2183 * t604) * t1773) * t2660 + (t2047 + t1999 + (-t2084 * t747 - t2187 * t522) * t1773 + (-t2099 * t752 - t2193 * t2735 + t2199 * t719) * t1771 + t2497) * t2661 + (t1014 * t1066 + t1028 * t1127 + t1078 * t1133 + t1080 * t1134 + t1092 * t1195 - 0.1000000000e1 * t1094 * t1196 - 0.2500000000e0 * t530) * t2388 + (t2181 * t640 - 0.1e1 * t2202 * t649 - 0.1e1 * t2208 * t605 + t2586 * t604 - 0.1e1 * t1878 - 0.1e1 * t2544 + (t2179 * t588 + t2183 * t587) * t1773) * t1784) * t1784
        cor[3] = ((-0.2500000000e0 * t1061 + (-0.1000000000e1 * t1225 + t1226) * t1302 + t2243 * t1227) * t2378 + (-0.2500000000e0 * t889 + (-0.1000000000e1 * t1072 + t1073) * t1208 + t2244 * t1074) * t2379 + (-0.1e1 * t1874 - 0.1e1 * t2543 + t2545) * t1788) * t1788 + ((-0.1e1 * t606 + t1844 - 0.1e1 * t765 + (t1774 * t1855 - 0.1e1 * t1777 * t1854) * t1773 + t2666 + (-0.1e1 * t1000 - 0.1e1 * t1199) * t2181) * t2658 + (t1067 * t1172 + t1149 * t1217 + t1150 * t1219 + t1182 * t1214 + t1226 * t1268 - 0.1000000000e1 * t1227 * t1269 - 0.2500000000e0 * t762) * t2384 + (-0.2500000000e0 * t589 + t842 * t1014 + t994 * t1068 + t1073 * t1155 - 0.1000000000e1 * t1074 * t1156 + t934 * t1078 + t935 * t1080) * t2385 + t1863 * t2396 + (t1772 * t1982 + t1774 * t1873 + t1777 * t1872 + t2083 * t2645) * t2414 + ((-0.1e1 * t559 - 0.1e1 * t734) * t2198 + (t2747 - 0.1e1 * t881) * t2196 + (t560 + t735) * t2192 + (-0.1e1 * t2739 - 0.1e1 * t882) * t2190) * t1786) * t1786 + ((-t1606 * t1962 - t1607 * t1953 - t2017 * t1961 - t2614 * t2002 + t2082 + t2502 + t2516) * t2658 + (-t2739 * t2002 + t1920 + t2047 + (-t2180 * t473 - t2184 * t472) * t1773 + t2499) * t2660 + (t1028 * t1104 + t1066 * t994 + t1073 * t1133 - 0.1000000000e1 * t1074 * t1134 + t1092 * t1169 - 0.1000000000e1 * t1094 * t1170 - 0.2500000000e0 * t529) * t2388 + (-0.1e1 * t2001 * t2733 + t2098 * t640 + t2192 * t588 - 0.1e1 * t2198 * t587 - 0.1e1 * t2202 * t645 - 0.1e1 * t2208 * t597 + t2586 * t596 - 0.1e1 * t1834) * t1784) * t1784 + ((t1774 * t1854 + t1777 * t1855 + t1845 + t2563 - t2573) * t2658 + (t1922 - t2610) * t2662 + (((-0.1e1 * t665 - 0.1e1 * t830) * t1777 + (-0.1e1 * t664 - 0.1e1 * t829) * t1774) * t2186 + t1842 + t1879 - t2664) * t2660 + t1871 * t2389 + t1870 * t2404 + (t1045 * t1175 + t1097 * t1387 - 0.1000000000e1 * t1098 * t1385 + t1182 * t1233 + t1226 * t1388 - 0.1000000000e1 * t1227 * t1386 - 0.2500000000e0 * t900) * t2381 + (t1015 * t836 + t1073 * t1289 - 0.1000000000e1 * t1074 * t1287 + t1109 * t994 - 0.1000000000e1 * t1286 * t907 + t1288 * t906 - 0.2500000000e0 * t739) * t2382 + (t2192 * t2566 + t2198 * t2567 + ((-t1774 * t1970 + t1777 * t1968) * t1773 + t2562 * t2181 + t2565 * t2185) * t1772) * t1787) * t1787 + ((t2178 * t572 - t1876) * t2662 + (t504 * t2178 + t666 * t2177 + t1975 * t1725 + t1994 * t1724 - t1977 * t1721 - t1995 * t1720 + (t1772 * t1987 - t1901) * t1773) * t2660 + (t480 * t2178 + t641 * t2177 + t1992 * t1724 - t1993 * t1720 + (-t2542 + (t1988 - t2547 + t2551) * t1773) * t1772) * t2659 + (t2177 * t736 + t2178 * t554) * t2658 + ((4 * t1210 * t1182 + 4 * t1226 * t1244 - 0.4e1 * t1227 * t1245) * t2177 + (4 * t1073 * t1151 - 0.4e1 * t1074 * t1152 + t1075 * t2491) * t2178 + t1985 * t1724 - 0.1e1 * t1986 * t1720 + 0.5000000000e0 * t2569 * t2428) * t1785) * t1785
        cor[4] = ((-0.2500000000e0 * t892 + (t1092 - 0.1000000000e1 * t1093) * t1208 + t2244 * t1094) * t2379 + (-0.1e1 * t2106 + (-0.1e1 * t1404 - 0.1e1 * t1427) * t2217 + (t1402 - 0.1e1 * t1429) * t2216) * t1788) * t1788 + ((t1774 * t1959 - t1777 * t1960 + t1935 + t2508 - t746) * t2658 + (t1015 * t862 + t1028 * t1109 + t1092 * t1289 - 0.1000000000e1 * t1094 * t1287 - 0.1000000000e1 * t1286 * t925 + t1288 * t924 - 0.2500000000e0 * t740) * t2382 + (t2179 * t446 - 0.1e1 * t2183 * t447 - 0.1e1 * t2194 * t820 - 0.1e1 * t2202 * t669 - 0.1e1 * t2204 * t2734 + 0.1e1 * t2206 * t538 - 0.1e1 * t2208 * t657 + t2586 * t656 - 0.1e1 * t1925) * t1787) * t1787 + (((-t1774 * t1960 - t1777 * t1959) * t1773 + t2503 + t1934 + t2560) * t2658 + (t2010 + t1921 + (-t2180 * t684 - t2184 * t683) * t1773 + t2507) * t2659 + (t1014 * t849 + t1028 * t1068 + t1078 * t938 + t1080 * t939 + t1092 * t1155 - 0.1000000000e1 * t1094 * t1156 - 0.2500000000e0 * t601) * t2385 + (t759 * t1772 * t2188 + (t453 - 0.1e1 * t605) * t2179 + (t452 - 0.1e1 * t604) * t2183) * t2414 + (t2181 * t522 - 0.1e1 * t2202 * t600 - 0.1e1 * t2208 * t560 + t2586 * t559 - 0.1e1 * t2143 + (t1720 * t2747 + t1724 * t2739) * t2188) * t1786) * t1786 + ((t1720 * t1960 - t1724 * t1959 + t1936 + t2502 + t2561) * t2658 + (t1922 + t2610) * t2659 + (t1920 + t1999 + (-t2180 * t597 - t2184 * t596 - t2187 * t649) * t1773 + t2506) * t2660 + (t1028 * t1075 + t1073 * t936 - 0.1000000000e1 * t1074 * t937 + t1092 * t1151 - 0.1000000000e1 * t1094 * t1152 + t854 * t994 - 0.2500000000e0 * t572) * t2387 + (t2001 * t2735 + t2098 * t525 + t2192 * t473 - 0.1e1 * t2198 * t472 - 0.1e1 * t2200 * t752 - 0.1e1 * t2202 * t607 - 0.1e1 * t2208 * t565 + t2212 * t719 + t2586 * t564 + t1876) * t1785) * t1785 + ((0.5000000000e0 * t2160 * t2733 + t2178 * t529 + t1834) * t2661 + (t2178 * t530 + t1878 + t2544) * t2660 + (t2178 * t528 + t1826) * t2659 + t2178 * t561 * t2658 + ((t1028 * t1066 + t1092 * t1133 - 0.1e1 * t1094 * t1134) * t1816 - 0.1e1 * t588 * t2208 + t587 * t2586 - 0.1e1 * t640 * t2202) * t1784) * t1784
    
    #grav MAPLE 
    t2814 = q[0]
    t2790 = math.sin(t2814)
    t2812 = q[2]
    t2788 = math.sin(t2812)
    t2813 = q[1]
    t2794 = math.cos(t2813)
    t2858 = t2794 * t2788
    t2842 = t2790 * t2858
    t2793 = math.cos(t2812)
    t2795 = math.cos(t2814)
    t2854 = t2795 * t2793
    t2768 = t2842 - t2854
    t2810 = q[4]
    t2791 = math.cos(t2810)
    t2878 = t2768 * t2791
    t2855 = t2795 * t2788
    t2856 = t2794 * t2793
    t2769 = t2790 * t2856 + t2855
    t2811 = q[3]
    t2787 = math.sin(t2811)
    t2789 = math.sin(t2813)
    t2869 = t2789 * t2787
    t2778 = t2790 * t2869
    t2792 = math.cos(t2811)
    t2753 = t2769 * t2792 - t2778
    t2786 = math.sin(t2810)
    t2884 = t2753 * t2786
    t2894 = t2878 + t2884
    t2879 = t2768 * t2786
    t2883 = t2753 * t2791
    t2893 = t2879 - t2883
    t2892 = t2794 * t2787
    t2821 = g[1]
    t2868 = t2789 * t2792
    t2830 = -t2769 * t2787 - t2790 * t2868
    t2891 = t2821 * t2830
    t2863 = t2790 * t2788
    t2773 = t2794 * t2854 - t2863
    t2867 = t2789 * t2795
    t2756 = t2773 * t2787 + t2792 * t2867
    t2822 = g[0]
    t2890 = t2756 * t2822
    t2888 = t2821 * t2790 + t2822 * t2795
    t2889 = t2888 * t2892
    t2798 = rS5[0]
    t2796 = rS5[2]
    t2872 = t2786 * t2796
    t2887 = t2791 * t2798 - t2872
    t2820 = g[2]
    t2886 = t2888 * t2789 + t2820 * t2794
    t2885 = t2791 / 2
    t2841 = t2787 * t2867
    t2757 = t2773 * t2792 - t2841
    t2882 = t2757 * t2786
    t2881 = t2757 * t2791
    t2859 = t2793 * t2792
    t2767 = t2789 * t2859 + t2892
    t2880 = t2767 * t2786
    t2877 = t2769 * t2786
    t2772 = -t2790 * t2793 - t2794 * t2855
    t2876 = t2772 * t2786
    t2875 = t2772 * t2791
    t2874 = t2773 * t2786
    t2873 = t2786 * t2792
    t2797 = rS5[1]
    t2871 = t2787 * t2797
    t2870 = t2788 * t2789
    t2803 = rS3[1]
    t2866 = t2789 * t2803
    t2805 = rS2[2]
    t2865 = t2789 * t2805
    t2819 = l[0]
    t2864 = t2789 * t2819
    t2862 = t2791 * t2792
    t2860 = t2792 * t2819
    t2857 = t2794 * t2792
    t2785 = t2795 * t2819
    t2853 = t2820 * t2789
    t2850 = -t2769 * t2860 + t2819 * t2778
    t2782 = t2794 * t2785
    t2849 = t2782 + t2785
    t2807 = rS2[0]
    t2848 = -t2807 - t2819
    t2847 = t2798 + t2819 / 2
    t2800 = rS4[1]
    t2846 = t2800 * t2870
    t2845 = t2786 * t2870
    t2844 = t2791 * t2870
    t2780 = t2788 * t2864
    t2843 = t2793 * t2869
    t2840 = -t2878 / 2
    t2839 = t2875 / 2
    t2838 = t2793 * t2782 + t2849
    t2837 = t2820 * (t2792 + 1) * t2780
    t2836 = t2773 * t2860 + t2838
    t2835 = -t2793 - 1 - t2859
    t2799 = rS4[2]
    t2801 = rS4[0]
    t2834 = t2787 * t2799 + t2792 * t2801
    t2833 = t2794 * t2807 + t2865
    t2781 = t2793 * t2785
    t2831 = -t2819 * t2842 + t2781
    t2829 = -t2841 - t2863
    t2766 = t2843 - t2857
    t2825 = t2772 * t2819
    t2802 = rS3[2]
    t2804 = rS3[0]
    t2824 = t2788 * t2802 - t2819 + (-t2804 - t2819) * t2793
    t2823 = -t2790 * t2794 - t2769 - t2790
    t2818 = m[1]
    t2817 = m[2]
    t2816 = m[3]
    t2815 = m[4]
    t2809 = rS1[0]
    t2808 = rS1[2]
    t2806 = rS2[1]
    t2779 = t2787 * t2864
    t2775 = t2819 * t2843
    t2771 = -t2792 * t2856 + t2869
    t2770 = t2787 * t2856 + t2868
    t2764 = t2772 * t2860
    t2762 = t2768 * t2860
    t2761 = t2767 * t2795
    t2760 = t2766 * t2795
    t2759 = t2767 * t2790
    t2758 = t2766 * t2790
    t2751 = t2876 + t2881
    t2750 = t2875 - t2882
    grav[0, 0] = -(t2822 * (-t2795 * t2808 + (-t2809 - t2819) * t2790) + t2821 * (-t2790 * t2808 + t2795 * t2809 + t2785)) * m[0] - (t2821 * t2849 + (-t2822 * t2806 + t2821 * t2833) * t2795 + (t2822 * (-t2794 * t2819 - t2819 - t2833) - t2821 * t2806) * t2790) * t2818 - (t2822 * (t2768 * t2802 - t2769 * t2804 - t2788 * t2785) + t2821 * (t2772 * t2802 + t2773 * t2804 - t2795 * t2866 + t2838) + (t2822 * t2866 + (t2822 * (-t2794 - 1 - t2856) - t2821 * t2788) * t2819) * t2790) * t2817 - (t2822 * (-t2753 * t2801 + t2768 * t2800 + t2799 * t2830 + t2850) + t2821 * (t2756 * t2799 + t2757 * t2801 + t2772 * t2800 + t2836) + (t2821 * t2829 + t2822 * t2823) * t2819) * t2816 - (t2822 * (t2894 * t2796 - t2830 * t2797 + t2893 * t2798 + t2850) + t2821 * (t2750 * t2796 + t2751 * t2798 - t2756 * t2797 + t2836) + (t2822 * (-t2883 / 2 + t2879 / 2 + t2823) + t2821 * (t2881 / 2 + t2876 / 2 + t2829)) * t2819) * t2815
    grav[1, 0] = -(t2820 * (t2794 * t2848 - t2865) + t2888 * (t2789 * t2848 + t2794 * t2805)) * t2818 - ((-t2803 * t2888 + t2820 * t2824) * t2794 + (t2820 * t2803 + t2888 * t2824) * t2789) * t2817 - (t2822 * (-t2760 * t2799 - t2761 * t2801 + t2795 * t2846) + t2821 * (-t2758 * t2799 - t2759 * t2801 + t2790 * t2846) + t2820 * (-t2770 * t2799 + t2771 * t2801 + t2800 * t2858 + t2779) + (t2886 * t2835 - t2889) * t2819) * t2816 - (t2822 * ((-t2761 * t2791 + t2795 * t2845) * t2798 + t2760 * t2797 + (t2761 * t2786 + t2795 * t2844) * t2796) + t2821 * ((-t2759 * t2791 + t2790 * t2845) * t2798 + t2758 * t2797 + (t2759 * t2786 + t2790 * t2844) * t2796) + t2820 * ((t2771 * t2791 + t2786 * t2858) * t2798 + t2770 * t2797 + (-t2771 * t2786 + t2791 * t2858) * t2796 + t2779) + ((-t2822 * t2761 / 2 - t2821 * t2759 / 2 + t2820 * t2771 / 2) * t2791 - t2889 + t2886 * (t2786 * t2788 / 2 + t2835)) * t2819) * t2815
    grav[4, 0] = -(t2822 * (t2750 * t2798 - t2751 * t2796) + t2821 * (t2893 * t2796 - t2894 * t2798) + t2820 * ((t2844 + t2880) * t2798 + (t2767 * t2791 - t2845) * t2796) + (t2822 * (-t2882 / 2 + t2839) + t2821 * (-t2884 / 2 + t2840) + t2820 * (t2880 / 2 + t2844 / 2)) * t2819) * t2815
    grav[2, 0] = -(t2822 * (t2772 * t2804 - t2773 * t2802 + t2825) + t2821 * (-t2768 * t2804 - t2769 * t2802 + t2831) + t2820 * (t2780 + (t2788 * t2804 + t2793 * t2802) * t2789)) * t2817 - (t2822 * (t2772 * t2834 - t2773 * t2800 + t2764 + t2825) + t2821 * (-t2768 * t2834 - t2769 * t2800 - t2762 + t2831) + t2837 + (t2788 * t2834 + t2793 * t2800) * t2853) * t2816 - (t2822 * ((t2772 * t2862 - t2874) * t2798 - t2772 * t2871 + (-t2772 * t2873 - t2773 * t2791) * t2796 + t2764) + t2821 * ((-t2768 * t2862 - t2877) * t2798 + t2768 * t2871 + (t2768 * t2873 - t2769 * t2791) * t2796 - t2762 + t2781) + t2837 + (t2822 * (t2792 * t2839 - t2874 / 2 + t2772) + t2821 * (t2792 * t2840 - t2877 / 2 - t2842)) * t2819 + ((t2786 * t2847 + t2791 * t2796) * t2793 + (-t2871 + (t2791 * t2847 - t2872) * t2792) * t2788) * t2853) * t2815
    grav[3, 0] = -(t2822 * (-t2756 * t2801 + t2757 * t2799) + t2821 * (t2753 * t2799 + t2801 * t2830) + t2820 * (t2766 * t2801 - t2767 * t2799 + t2775)) * t2816 - (t2822 * (-t2887 * t2756 - t2757 * t2797) + t2821 * (-t2753 * t2797 + t2887 * t2830) + t2820 * (t2887 * t2766 + t2767 * t2797 + t2775)) * t2815 + (-(-t2820 * t2857 - t2890 + t2891) * t2816 - ((-t2791 / 2 - 1) * t2890 + t2820 * (t2766 * t2885 - t2857) + (t2885 + 1) * t2891) * t2815) * t2819
    return Mass, cor, grav

def read_xk(x_k,n_akt):
    if x_k.shape[0]==3*n_akt:
        #first-order dynamics
        indq=np.arange(n_akt)
        indp=np.arange(2*n_akt)+n_akt
        qd=None
    else:    
        indq=np.arange(n_akt)
        indqd=np.arange(n_akt)+n_akt
        indp=np.arange(2*n_akt)+2*n_akt
        qd=x_k[indqd]
    q=x_k[indq]
    p=x_k[indp]
    return q,qd,p

def HCregressor(x,xD):
    #Hunt-Crossley contact model
    F_s_regressor = np.sign(x)*np.abs(x)**(3/2)
    F_d_regressor = np.abs(x)**(1/2)*xD
    return np.array((F_s_regressor,F_d_regressor))

def tau_p(n_akt,x_k,use_p_factor=False):
    p=read_xk(x_k,n_akt)[-1]
    params=GetParams(n_akt,0)
    Ap=params["eta_p"]
    rp=1 #eta_p=Ap*rp
    tau_p_vec=np.zeros((n_akt,1))
    for i in range(n_akt):
        tau_p_vec[i,0]=(p[2*i] - p[2*i+1]) * Ap * rp
    return tau_p_vec

def tau_rv(rv,qd,n_akt):
    return np.multiply(rv.reshape((n_akt,1)),qd.reshape((n_akt,1))).reshape((n_akt,1))

def tau_hc(q,qmax_hc,qd,n_akt,hc_params):
    hc_vec=np.zeros((n_akt,1))
    for j in range(n_akt): 
        if q[j]>qmax_hc:
            temp=HCregressor(q[j]-qmax_hc,qd[j])
            hc_vec[j,0]=np.dot(temp.reshape((1,2)),hc_params)
        elif q[j]<-qmax_hc:
            temp=HCregressor(q[j]+qmax_hc,qd[j])
            hc_vec[j,0]=np.dot(temp.reshape((1,2)),hc_params)
    return hc_vec
  
def tau_ks(ks,q,n_akt):
    return np.multiply(ks.reshape((n_akt,1)),q.reshape((n_akt,1))).reshape((n_akt,1))

def implicitConstraint(qd_k,q_k,p_k,n_akt,g_KS0_ident,mE_ident,hc_params,rv,rc,ks,qd_c):
    qmax_hc=GetParams(n_akt,mE_ident)["hc_params"]["qmax_hc"]
    x_k=np.hstack((q_k,p_k))
    grav_vec=getDynamicTerms(n_akt,x_k,g_KS0_ident,mE_ident,True)[-1]
    tau_p_vec=tau_p(n_akt,x_k)
    tau_hc_vec=tau_hc(q_k, qmax_hc, qd_k, n_akt, hc_params)
    rv_vec=tau_rv(rv, qd_k, n_akt)
    rc_vec=tau_rc(rc, qd_k, n_akt,qd_c)
    ks_vec=tau_ks(ks, q_k, n_akt)
    return (tau_p_vec-grav_vec-tau_hc_vec-ks_vec-rv_vec-rc_vec).reshape(n_akt)

def addCoulomb(dqdt_raw,q,n_akt):
    params=GetParams(n_akt,0)
    qmax_hc=params["hc_params"]["qmax_hc"]
    d_HC=params["hc_params"]["d_HC"]
    from torch import absolute,diag
    delta_q=torch.zeros((n_akt,1))
    #delta_q for HC
    for j in range(n_akt): 
        if q[j]>qmax_hc:
            delta_q[j]=q[j]-qmax_hc
        elif q[j]<-qmax_hc:
            delta_q[j]=q[j]+qmax_hc
    rc=torch.tensor(params["rc"])
    rc_vec=tau_rc(rc,dqdt_raw,n_akt,params["qd_c"],notorch=False)
    rv=torch.tensor(params["rv"])
    temp=1/(rv+absolute(delta_q)**(1/2)*d_HC)
    return dqdt_raw+torch.matmul(diag(temp.reshape(n_akt)),rc_vec)

def calcRedFdyn_HC(q,p,n_akt,g_KS0,mE,notorch=False,accelerate_training=False,change_params=False,rv_=None,ks_=None,
                   hc_params=None):
    try: params=GetParams(n_akt,mE.detach().numpy())
    except: params=GetParams(n_akt,mE)
    k_HC=params["hc_params"]["k_HC"]
    d_HC=params["hc_params"]["d_HC"]
    rv=params["rv"]
    ks=params["ks"]
    qmax_hc=params["hc_params"]["qmax_hc"]
    #eta_p=Ap*rp
    Ap=params["eta_p"]
    rp=1
    m=params["m"]
    l=params["h"]
    rS=params["rS"]
    if change_params:
        rv=rv_
        ks=ks_
        k_HC=hc_params[0]
        d_HC=hc_params[1]
    if notorch:
        from math import sin,cos,sqrt
        from numpy import sign,absolute
        fdyn_red_HC=np.zeros([n_akt,1])
        delta_q=np.zeros((n_akt,1))
    else:
        if accelerate_training:
            from math import sin,cos,sqrt
            from numpy import sign,absolute
            q=q.detach().numpy()
            # p=p.detach().numpy()
            g_KS0=g_KS0.detach().numpy()
            fdyn_red_HC=np.zeros([n_akt,1])
            delta_q=np.zeros((n_akt,1))
        else:
            from torch import sqrt,absolute,sign,sin,cos
            fdyn_red_HC=torch.zeros([n_akt,1])
            m=torch.tensor(m)
            delta_q=torch.zeros((n_akt,1))
            rv=rv.reshape(n_akt)
            ks=ks.reshape(n_akt)
    
    #rS
    rS1=rS[0]
    rS2=rS[1]
    rS3=rS[2]
    rS4=rS[3]
    rS5=rS[4]
    g=g_KS0
    
    #delta_q for HC
    for j in range(n_akt): 
        if q[j]>qmax_hc:
            delta_q[j]=q[j]-qmax_hc
        elif q[j]<-qmax_hc:
            delta_q[j]=q[j]+qmax_hc        
    
    #MAPLE (math. & np. removed, abs()->absolute() for autograd!)
    t1570 = q[0]
    t1541 = sin(t1570)
    t1568 = q[2]
    t1539 = sin(t1568)
    t1569 = q[1]
    t1545 = cos(t1569)
    t1624 = t1545 * t1539
    t1608 = t1541 * t1624
    t1544 = cos(t1568)
    t1546 = cos(t1570)
    t1620 = t1546 * t1544
    t1514 = t1608 - t1620
    t1566 = q[4]
    t1542 = cos(t1566)
    t1644 = t1514 * t1542
    t1621 = t1546 * t1539
    t1622 = t1545 * t1544
    t1515 = t1541 * t1622 + t1621
    t1567 = q[3]
    t1538 = sin(t1567)
    t1540 = sin(t1569)
    t1635 = t1540 * t1538
    t1524 = t1541 * t1635
    t1543 = cos(t1567)
    t1499 = t1515 * t1543 - t1524
    t1537 = sin(t1566)
    t1650 = t1499 * t1537
    t1661 = t1644 + t1650
    t1645 = t1514 * t1537
    t1649 = t1499 * t1542
    t1660 = t1645 - t1649
    t1659 = t1545 * t1538
    t1577 = g[1]
    t1634 = t1540 * t1543
    t1596 = -t1515 * t1538 - t1541 * t1634
    t1658 = t1577 * t1596
    t1629 = t1541 * t1539
    t1519 = t1545 * t1620 - t1629
    t1633 = t1540 * t1546
    t1502 = t1519 * t1538 + t1543 * t1633
    t1578 = g[0]
    t1657 = t1578 * t1502
    t1655 = t1577 * t1541 + t1578 * t1546
    t1656 = t1655 * t1659
    t1554 = rS5[0]
    t1552 = rS5[2]
    t1638 = t1537 * t1552
    t1654 = t1542 * t1554 - t1638
    t1576 = g[2]
    t1653 = t1655 * t1540 + t1576 * t1545
    t1652 = Ap * rp
    t1651 = t1542 / 2
    t1607 = t1538 * t1633
    t1503 = t1519 * t1543 - t1607
    t1648 = t1503 * t1537
    t1647 = t1503 * t1542
    t1625 = t1544 * t1543
    t1513 = t1540 * t1625 + t1659
    t1646 = t1513 * t1537
    t1643 = t1515 * t1537
    t1518 = -t1541 * t1544 - t1545 * t1621
    t1642 = t1518 * t1537
    t1641 = t1518 * t1542
    t1640 = t1519 * t1537
    t1639 = t1537 * t1543
    t1553 = rS5[1]
    t1637 = t1538 * t1553
    t1636 = t1539 * t1540
    t1559 = rS3[1]
    t1632 = t1540 * t1559
    t1561 = rS2[2]
    t1631 = t1540 * t1561
    t1575 = l[0]
    t1630 = t1540 * t1575
    t1628 = t1542 * t1543
    t1626 = t1543 * t1575
    t1623 = t1545 * t1543
    t1531 = t1546 * t1575
    t1619 = t1576 * t1540
    t1616 = -t1515 * t1626 + t1575 * t1524
    t1528 = t1545 * t1531
    t1615 = t1528 + t1531
    t1563 = rS2[0]
    t1614 = -t1563 - t1575
    t1613 = t1554 + t1575 / 2
    t1556 = rS4[1]
    t1612 = t1556 * t1636
    t1611 = t1537 * t1636
    t1610 = t1542 * t1636
    t1526 = t1539 * t1630
    t1609 = t1544 * t1635
    t1606 = -t1644 / 2
    t1605 = t1641 / 2
    t1604 = t1544 * t1528 + t1615
    t1603 = t1576 * (t1543 + 1) * t1526
    t1602 = t1519 * t1626 + t1604
    t1601 = -t1544 - 1 - t1625
    t1555 = rS4[2]
    t1557 = rS4[0]
    t1600 = t1538 * t1555 + t1543 * t1557
    t1599 = t1545 * t1563 + t1631
    t1527 = t1544 * t1531
    t1597 = -t1575 * t1608 + t1527
    t1595 = -t1607 - t1629
    t1512 = t1609 - t1623
    t1591 = t1518 * t1575
    t1558 = rS3[2]
    t1560 = rS3[0]
    t1590 = t1539 * t1558 - t1575 + (-t1560 - t1575) * t1544
    t1589 = -t1541 * t1545 - t1515 - t1541
    t1551 = delta_q[0]
    t1536 = absolute(t1551)
    t1583 = sqrt(t1536)
    t1550 = delta_q[1]
    t1535 = absolute(t1550)
    t1582 = sqrt(t1535)
    t1549 = delta_q[2]
    t1534 = absolute(t1549)
    t1581 = sqrt(t1534)
    t1548 = delta_q[3]
    t1533 = absolute(t1548)
    t1580 = sqrt(t1533)
    t1547 = delta_q[4]
    t1532 = absolute(t1547)
    t1579 = sqrt(t1532)
    t1574 = m[1]
    t1573 = m[2]
    t1572 = m[3]
    t1571 = m[4]
    t1565 = rS1[0]
    t1564 = rS1[2]
    t1562 = rS2[1]
    t1525 = t1538 * t1630
    t1521 = t1575 * t1609
    t1517 = -t1543 * t1622 + t1635
    t1516 = t1538 * t1622 + t1634
    t1510 = t1518 * t1626
    t1508 = t1514 * t1626
    t1507 = t1513 * t1546
    t1506 = t1512 * t1546
    t1505 = t1513 * t1541
    t1504 = t1512 * t1541
    t1497 = t1642 + t1647
    t1496 = t1641 - t1648
    fdyn_red_HC[2, 0] = 0.1e1 / (t1581 * d_HC + rv[2]) * ((p[4] - p[5]) * t1652 + (t1578 * (t1518 * t1560 - t1519 * t1558 + t1591) + t1577 * (-t1514 * t1560 - t1515 * t1558 + t1597) + t1576 * (t1526 + (t1539 * t1560 + t1544 * t1558) * t1540)) * t1573 + (t1578 * (t1600 * t1518 - t1519 * t1556 + t1510 + t1591) + t1577 * (-t1600 * t1514 - t1515 * t1556 - t1508 + t1597) + t1603 + (t1600 * t1539 + t1544 * t1556) * t1619) * t1572 + (t1578 * ((t1518 * t1628 - t1640) * t1554 - t1518 * t1637 + (-t1518 * t1639 - t1519 * t1542) * t1552 + t1510) + t1577 * ((-t1514 * t1628 - t1643) * t1554 + t1514 * t1637 + (t1514 * t1639 - t1515 * t1542) * t1552 - t1508 + t1527) + t1603 + (t1578 * (t1543 * t1605 - t1640 / 2 + t1518) + t1577 * (t1543 * t1606 - t1643 / 2 - t1608)) * t1575 + ((t1613 * t1537 + t1542 * t1552) * t1544 + (-t1637 + (t1613 * t1542 - t1638) * t1543) * t1539) * t1619) * t1571 - ks[2] * t1568 - sign(t1549) * t1581 * t1534 * k_HC)
    fdyn_red_HC[4, 0] = 0.1e1 / (t1579 * d_HC + rv[4]) * ((p[8] - p[9]) * t1652 + (t1578 * (t1496 * t1554 - t1497 * t1552) + t1577 * (t1660 * t1552 - t1661 * t1554) + t1576 * ((t1610 + t1646) * t1554 + (t1513 * t1542 - t1611) * t1552) + (t1578 * (-t1648 / 2 + t1605) + t1577 * (-t1650 / 2 + t1606) + t1576 * (t1646 / 2 + t1610 / 2)) * t1575) * t1571 - ks[4] * t1566 - sign(t1547) * t1579 * t1532 * k_HC)
    fdyn_red_HC[3, 0] = 0.1e1 / (t1580 * d_HC + rv[3]) * ((p[6] - p[7]) * t1652 + (t1578 * (-t1502 * t1557 + t1503 * t1555) + t1577 * (t1499 * t1555 + t1557 * t1596) + t1576 * (t1512 * t1557 - t1513 * t1555 + t1521) + (-t1576 * t1623 - t1657 + t1658) * t1575) * t1572 + (t1578 * (-t1502 * t1654 - t1503 * t1553) + t1577 * (-t1499 * t1553 + t1654 * t1596) + t1576 * (t1654 * t1512 + t1513 * t1553 + t1521) + ((-t1542 / 2 - 1) * t1657 + t1576 * (t1512 * t1651 - t1623) + (t1651 + 1) * t1658) * t1575) * t1571 - ks[3] * t1567 - sign(t1548) * t1580 * t1533 * k_HC)
    fdyn_red_HC[0, 0] = 0.1e1 / (t1583 * d_HC + rv[0]) * ((p[0] - p[1]) * t1652 + (t1578 * (-t1546 * t1564 + (-t1565 - t1575) * t1541) + t1577 * (-t1541 * t1564 + t1546 * t1565 + t1531)) * m[0] + (t1577 * t1615 + (-t1578 * t1562 + t1577 * t1599) * t1546 + (t1578 * (-t1545 * t1575 - t1575 - t1599) - t1577 * t1562) * t1541) * t1574 + (t1578 * (t1514 * t1558 - t1515 * t1560 - t1539 * t1531) + t1577 * (t1518 * t1558 + t1519 * t1560 - t1546 * t1632 + t1604) + (t1578 * t1632 + (t1578 * (-t1545 - 1 - t1622) - t1577 * t1539) * t1575) * t1541) * t1573 + (t1578 * (-t1499 * t1557 + t1514 * t1556 + t1555 * t1596 + t1616) + t1577 * (t1502 * t1555 + t1503 * t1557 + t1518 * t1556 + t1602) + (t1577 * t1595 + t1578 * t1589) * t1575) * t1572 + (t1578 * (t1661 * t1552 - t1596 * t1553 + t1660 * t1554 + t1616) + t1577 * (t1496 * t1552 + t1497 * t1554 - t1502 * t1553 + t1602) + (t1578 * (-t1649 / 2 + t1645 / 2 + t1589) + t1577 * (t1647 / 2 + t1642 / 2 + t1595)) * t1575) * t1571 - ks[0] * t1570 - sign(t1551) * t1583 * t1536 * k_HC)
    fdyn_red_HC[1, 0] = 0.1e1 / (t1582 * d_HC + rv[1]) * ((p[2] - p[3]) * t1652 + (t1576 * (t1614 * t1545 - t1631) + t1655 * (t1614 * t1540 + t1545 * t1561)) * t1574 + ((-t1559 * t1655 + t1576 * t1590) * t1545 + (t1576 * t1559 + t1590 * t1655) * t1540) * t1573 + (t1578 * (-t1506 * t1555 - t1507 * t1557 + t1546 * t1612) + t1577 * (-t1504 * t1555 - t1505 * t1557 + t1541 * t1612) + t1576 * (-t1516 * t1555 + t1517 * t1557 + t1556 * t1624 + t1525) + (t1653 * t1601 - t1656) * t1575) * t1572 + (t1578 * ((-t1507 * t1542 + t1546 * t1611) * t1554 + t1506 * t1553 + (t1507 * t1537 + t1546 * t1610) * t1552) + t1577 * ((-t1505 * t1542 + t1541 * t1611) * t1554 + t1504 * t1553 + (t1505 * t1537 + t1541 * t1610) * t1552) + t1576 * ((t1517 * t1542 + t1537 * t1624) * t1554 + t1516 * t1553 + (-t1517 * t1537 + t1542 * t1624) * t1552 + t1525) + ((-t1578 * t1507 / 2 - t1577 * t1505 / 2 + t1576 * t1517 / 2) * t1542 - t1656 + t1653 * (t1537 * t1539 / 2 + t1601)) * t1575) * t1571 - ks[1] * t1569 - sign(t1550) * t1582 * t1535 * k_HC)
    if notorch==False and accelerate_training:
        return torch.tensor(fdyn_red_HC)
    return fdyn_red_HC 

def calcImplDyn(q,qd,p,n_akt,g_KS0,mE,notorch=False):
    try: params=GetParams(n_akt,mE.detach().numpy())
    except: params=GetParams(n_akt,mE)
    m=params["m"]
    if notorch:
        impl_dyn=np.zeros([n_akt,1])
        Mass=np.zeros([n_akt,n_akt])
        from math import sin,cos,tanh,sqrt
        from numpy import absolute,sign
        delta_q=np.zeros((n_akt,1))
        q=q.detach().numpy()
        qd=qd.detach().numpy()
    else:
        from torch import sin,cos,absolute,sign,tanh,sqrt
        impl_dyn=torch.zeros([n_akt,1])
        Mass=torch.zeros([n_akt,n_akt])
        delta_q=torch.zeros((n_akt,1))
    from math import pi
    l=params["h"]
    k_HC=params["hc_params"]["k_HC"]
    d_HC=params["hc_params"]["d_HC"]
    rv=params["rv"].reshape(n_akt)
    ks=params["ks"].reshape(n_akt)
    rc=params["rc"].reshape(n_akt)
    qd_c=params["qd_c"]
    qmax_hc=params["hc_params"]["qmax_hc"]
    
    #rS
    rS=params["rS"]
    rS1=rS[0]
    rS2=rS[1]
    rS3=rS[2]
    rS4=rS[3]
    rS5=rS[4]
    #J
    J=params["J"]
    J1=J[0]
    J2=J[1]
    J3=J[2]
    J4=J[3]
    J5=J[4]
    g=g_KS0.detach().numpy().reshape(3)
    #eta_p=Ap*rp
    Ap=params["eta_p"]
    rp=1
    
    #delta_q for HC
    for j in range(n_akt): 
        if q[j]>qmax_hc:
            delta_q[j]=q[j]-qmax_hc
        elif q[j]<-qmax_hc:
            delta_q[j]=q[j]+qmax_hc        
        
    #MAPLE (math. & np. removed)
    t266 = q[1]
    t220 = sin(t266)
    t262 = J2[1]
    t360 = t220 * t262
    t359 = -0.5e0 * t360
    t237 = rS2[0]
    t272 = l[0]
    t358 = -t237 - t272
    t265 = q[2]
    t223 = cos(t265)
    t224 = cos(t266)
    t267 = q[0]
    t225 = cos(t267)
    t328 = t225 * t224
    t219 = sin(t265)
    t221 = sin(t267)
    t338 = t219 * t221
    t201 = t223 * t328 - t338
    t356 = q[3]
    t218 = sin(t356)
    t329 = t225 * t220
    t302 = t218 * t329
    t317 = cos(t356)
    t167 = t201 * t317 - t302
    t200 = -t219 * t328 - t221 * t223
    t264 = q[4]
    t217 = sin(t264)
    t222 = cos(t264)
    t132 = t167 * t222 + t200 * t217
    t357 = -0.5e0 * t221
    t350 = 0.5e0 * t225
    t215 = t221 ** 2
    t216 = t225 ** 2
    t330 = t225 * t219
    t332 = t223 * t224
    t199 = t221 * t332 + t330
    t295 = t220 * t317
    t164 = t199 * t218 + t221 * t295
    t355 = 0.5e0 * t164
    t166 = t201 * t218 + t225 * t295
    t354 = 0.5e0 * t166
    t336 = t220 * t223
    t196 = t218 * t336 - t224 * t317
    t353 = -0.5e0 * t196
    t352 = 0.5e0 * t221
    t351 = 0.5e0 * t224
    t198 = t223 * t225 - t224 * t338
    t252 = J3[5]
    t253 = J3[4]
    t255 = J3[2]
    t337 = t220 * t221
    t141 = t198 * t252 + t199 * t255 - t253 * t337
    t254 = J3[3]
    t256 = J3[1]
    t142 = t198 * t253 + t199 * t256 - t254 * t337
    t257 = J3[0]
    t143 = t198 * t255 + t199 * t257 - t256 * t337
    t86 = -t142 * t224 + (t141 * t219 - t143 * t223) * t220
    t348 = t86 * t224
    t144 = t200 * t252 + t201 * t255 - t253 * t329
    t145 = t200 * t253 + t201 * t256 - t254 * t329
    t146 = t200 * t255 + t201 * t257 - t256 * t329
    t87 = -t145 * t224 + (t144 * t219 - t146 * t223) * t220
    t347 = t87 * t224
    t341 = t198 * t217
    t296 = t199 * t317
    t303 = t218 * t337
    t165 = t296 - t303
    t344 = t165 * t222
    t278 = t344 / 2 + t341 / 2
    t129 = -t165 * t217 + t198 * t222
    t130 = t341 + t344
    t226 = rS5[2]
    t227 = rS5[1]
    t228 = rS5[0]
    t90 = t129 * t226 + t130 * t228 - t164 * t227
    t346 = t278 * t272 + t90
    t131 = -t167 * t217 + t200 * t222
    t345 = t131 * t226 - t166 * t227 + (t228 + t272 / 2) * t132
    t197 = -t224 * t218 - t223 * t295
    t342 = t197 * t222
    t339 = t219 * t220
    t233 = rS3[1]
    t335 = t220 * t233
    t235 = rS2[2]
    t334 = t220 * t235
    t188 = t197 * t272
    t173 = t221 * t188
    t261 = J2[2]
    t331 = t224 * t261
    t213 = t225 * t272
    t162 = -t197 * t217 + t222 * t339
    t304 = t217 * t339
    t163 = t304 + t342
    t327 = t162 * t226 + t163 * t228 + t196 * t227 + (t342 / 2 + t304 / 2) * t272
    t229 = rS4[2]
    t230 = rS4[1]
    t231 = rS4[0]
    t109 = t164 * t229 + t165 * t231 + t198 * t230
    t206 = t272 * t303
    t294 = t272 * t317
    t157 = t199 * t294 - t206
    t326 = -t109 - t157
    t110 = t166 * t229 + t167 * t231 + t200 * t230
    t187 = t201 * t294
    t158 = -t272 * t302 + t187
    t325 = -t110 - t158
    t135 = -t196 * t229 + t197 * t231 + t230 * t339
    t324 = -t135 - t188
    t232 = rS3[2]
    t234 = rS3[0]
    t286 = -t198 * t232 - t199 * t234
    t136 = -t221 * t335 - t286
    t189 = t199 * t272
    t323 = -t136 - t189
    t137 = t200 * t232 + t201 * t234 - t233 * t329
    t211 = t224 * t213
    t208 = t223 * t211
    t190 = -t272 * t338 + t208
    t322 = -t137 - t190
    t170 = t189 * t329
    t321 = t157 * t329 + t170
    t305 = t220 ** 2 * t223 * t272
    t320 = t224 * t190 + t225 * t305
    t319 = t235 * t329 + t237 * t328
    t318 = t211 + t213
    t240 = J5[5]
    t241 = J5[4]
    t243 = J5[2]
    t111 = t162 * t240 + t163 * t243 + t196 * t241
    t242 = J5[3]
    t244 = J5[1]
    t112 = t162 * t241 + t163 * t244 + t196 * t242
    t245 = J5[0]
    t113 = t162 * t243 + t163 * t245 + t196 * t244
    t57 = t111 * t162 + t112 * t196 + t113 * t163
    t92 = t129 * t240 + t130 * t243 - t164 * t241
    t93 = t129 * t241 + t130 * t244 - t164 * t242
    t94 = t129 * t243 + t130 * t245 - t164 * t244
    t33 = t129 * t92 + t130 * t94 - t164 * t93
    t95 = t131 * t240 + t132 * t243 - t166 * t241
    t96 = t131 * t241 + t132 * t244 - t166 * t242
    t97 = t131 * t243 + t132 * t245 - t166 * t244
    t35 = t129 * t95 + t130 * t97 - t164 * t96
    t50 = t111 * t129 - t112 * t164 + t113 * t130
    t13 = t198 * t33 + t200 * t35 + t50 * t339
    t246 = J4[5]
    t247 = J4[4]
    t249 = J4[2]
    t114 = t164 * t246 + t165 * t249 + t198 * t247
    t248 = J4[3]
    t250 = J4[1]
    t115 = t164 * t247 + t165 * t250 + t198 * t248
    t251 = J4[0]
    t116 = t164 * t249 + t165 * t251 + t198 * t250
    t58 = t114 * t164 + t115 * t198 + t116 * t165
    t117 = t166 * t246 + t167 * t249 + t200 * t247
    t118 = t166 * t247 + t167 * t250 + t200 * t248
    t119 = t166 * t249 + t167 * t251 + t200 * t250
    t60 = t117 * t164 + t118 * t198 + t119 * t165
    t138 = -t196 * t246 + t197 * t249 + t247 * t339
    t139 = -t196 * t247 + t197 * t250 + t248 * t339
    t140 = -t196 * t249 + t197 * t251 + t250 * t339
    t73 = t138 * t164 + t139 * t198 + t140 * t165
    t23 = t198 * t58 + t200 * t60 + t73 * t339
    t316 = 0.5e0 * t23 + 0.5e0 * t13
    t34 = t131 * t92 + t132 * t94 - t166 * t93
    t36 = t131 * t95 + t132 * t97 - t166 * t96
    t51 = t111 * t131 - t112 * t166 + t113 * t132
    t14 = t198 * t34 + t200 * t36 + t51 * t339
    t59 = t114 * t166 + t115 * t200 + t116 * t167
    t61 = t117 * t166 + t118 * t200 + t119 * t167
    t74 = t138 * t166 + t139 * t200 + t140 * t167
    t24 = t198 * t59 + t200 * t61 + t74 * t339
    t315 = 0.5e0 * t24 + 0.5e0 * t14
    t15 = t224 * t50 + (t221 * t33 + t225 * t35) * t220
    t25 = t224 * t73 + (t221 * t58 + t225 * t60) * t220
    t314 = 0.5e0 * t25 + 0.5e0 * t15
    t16 = t224 * t51 + (t221 * t34 + t225 * t36) * t220
    t26 = t224 * t74 + (t221 * t59 + t225 * t61) * t220
    t313 = 0.5e0 * t26 + 0.5e0 * t16
    t20 = -t221 * t35 + t225 * t33
    t29 = -t221 * t60 + t225 * t58
    t312 = 0.5e0 * t29 + 0.5e0 * t20
    t21 = -t221 * t36 + t225 * t34
    t30 = -t221 * t61 + t225 * t59
    t311 = 0.5e0 * t30 + 0.5e0 * t21
    t40 = t162 * t92 + t163 * t94 + t196 * t93
    t41 = t162 * t95 + t163 * t97 + t196 * t96
    t22 = -t221 * t41 + t225 * t40
    t65 = -t114 * t196 + t115 * t339 + t116 * t197
    t66 = -t117 * t196 + t118 * t339 + t119 * t197
    t310 = t66 * t357 + t65 * t350 + 0.5e0 * t22
    t309 = 0.5e0 * t40 + 0.5e0 * t50
    t308 = 0.5e0 * t41 + 0.5e0 * t51
    t307 = -t157 - t346
    t306 = -t158 - t345
    t301 = -t188 - t327
    t300 = -t189 + t326
    t299 = -t190 + t325
    t77 = -t138 * t196 + t139 * t339 + t140 * t197
    t298 = t224 * t158 + t320
    t297 = (-t223 - 1) * t272
    t293 = t358 * t220 + t224 * t235
    t292 = -t189 + t307
    t291 = -t190 + t306
    t290 = t220 * t297
    t289 = (-t215 - t216) * t272 * t224
    t258 = J2[5]
    t285 = t220 * t258 + t331
    t259 = J2[4]
    t284 = t220 * t259 + t224 * t262
    t282 = t135 + t290
    t176 = -t224 * t233 + (t219 * t232 - t223 * t234) * t220
    t281 = t176 + t290
    t280 = 0.5e0 * t73 + 0.5e0 * t65 + t309
    t279 = 0.5e0 * t74 + 0.5e0 * t66 + t308
    t277 = t290 + t327
    t178 = -t224 * t253 + (t219 * t252 - t223 * t255) * t220
    t179 = -t224 * t254 + (t219 * t253 - t223 * t256) * t220
    t180 = -t224 * t256 + (t219 * t255 - t223 * t257) * t220
    t102 = t178 * t198 - t179 * t337 + t180 * t199
    t276 = 0.5e0 * t86 + 0.5e0 * t102 + t280
    t103 = t178 * t200 - t179 * t329 + t180 * t201
    t275 = 0.5e0 * t87 + 0.5e0 * t103 + t279
    t274 = t187 + t208 + (-t302 - t338) * t272 + t318
    t273 = -t296 - t330 + (-t224 - 1 - t332) * t221
    t271 = m[1]
    t270 = m[2]
    t269 = m[3]
    t268 = m[4]
    t260 = J2[3]
    t239 = rS1[0]
    t238 = rS1[2]
    t236 = rS2[1]
    t204 = t224 * t259 - t360
    t185 = -t221 * t260 + t284 * t225
    t182 = t284 * t221 + t225 * t260
    t175 = t225 * t188
    t172 = t293 * t225
    t171 = t293 * t221
    t169 = t220 * t173
    t168 = t178 * t339
    t155 = -t221 * t236 + t318 + t319
    t154 = -t225 * t236 + (t358 * t224 - t272 - t334) * t221
    t152 = t198 * t188
    t149 = t158 * t339
    t148 = t281 * t225
    t147 = t281 * t221
    t134 = t200 * t157
    t121 = t318 - t322
    t120 = -t219 * t213 + (t224 * t297 - t272 + t335) * t221 + t286
    t107 = t224 * (-t179 * t224 - t180 * t336 + t168)
    t106 = t282 * t225 + t175
    t105 = t282 * t221 + t173
    t101 = t137 * t224 - t176 * t329 + t320
    t100 = t323 * t224 + (t176 * t220 - t305) * t221
    t89 = t274 + t110
    t88 = t273 * t272 - t109 + t206
    t85 = t170 + (t136 * t225 + t322 * t221) * t220
    t84 = t323 * t221 + t322 * t225 + t289
    t83 = t277 * t225 + t175
    t82 = t277 * t221 + t173
    t81 = t144 * t200 - t145 * t329 + t146 * t201
    t80 = t144 * t198 - t145 * t337 + t146 * t199
    t79 = t141 * t200 - t142 * t329 + t143 * t201
    t78 = t141 * t198 - t142 * t337 + t143 * t199
    t76 = t224 * t77
    t75 = t77 * t339
    t72 = t110 * t339 + t324 * t200 + t149
    t71 = t135 * t198 + t326 * t339 + t152
    t70 = t110 * t224 + t324 * t329 + t298
    t69 = t169 + (t135 * t220 - t305) * t221 + t300 * t224
    t68 = t274 + t345
    t67 = t206 + (t273 - t278) * t272 - t90
    t64 = t109 * t200 + t325 * t198 + t134
    t63 = t300 * t221 + t299 * t225 + t289
    t62 = (t109 * t225 + t299 * t221) * t220 + t321
    t56 = t224 * t57
    t55 = t57 * t339
    t54 = t196 * t57
    t53 = -t221 * t81 + t225 * t79
    t52 = -t221 * t80 + t225 * t78
    t49 = -t327 * t166 - t345 * t196
    t48 = t327 * t164 + t346 * t196
    t47 = t345 * t224 + t301 * t329 + t298
    t46 = t169 + (t327 * t220 - t305) * t221 + t292 * t224
    t45 = t301 * t200 + t345 * t339 + t149
    t44 = t327 * t198 + t307 * t339 + t152
    t43 = t103 * t224 + (t221 * t79 + t225 * t81) * t220
    t42 = t102 * t224 + (t221 * t78 + t225 * t80) * t220
    t39 = -t345 * t164 + t346 * t166
    t38 = t292 * t221 + t291 * t225 + t289
    t37 = (t291 * t221 + t346 * t225) * t220 + t321
    t32 = t306 * t198 + t346 * t200 + t134
    t28 = t76 + (t221 * t65 + t225 * t66) * t220
    t27 = t198 * t65 + t200 * t66 + t75
    t19 = t56 + (t221 * t40 + t225 * t41) * t220
    t18 = t198 * t40 + t200 * t41 + t55
    t17 = t164 * t40 + t166 * t41 - t54
    t12 = t164 * t34 + t166 * t36 - t196 * t51
    t11 = t164 * t33 + t166 * t35 - t196 * t50
    t10 = -t54 + t268 * (t48 * t67 + t49 * t68) + t308 * t166 + t309 * t164
    t9 = t271 * (t154 * t172 + t155 * t171) + t270 * (t120 * t148 + t121 * t147) + t269 * (t105 * t89 + t106 * t88) + t268 * (t67 * t83 + t68 * t82) + ((t285 * t221 + t225 * t259) * t351 + t225 * t359 + t204 * t350 + t276) * t225 + (-0.5e0 * (-0.1e1 * t221 * t259 + t285 * t225) * t224 + t221 * t359 + t204 * t352 - 0.1e1 * t275) * t221
    t8 = t55 + t75 + t269 * (t71 * t88 + t72 * t89) + t268 * (t44 * t67 + t45 * t68) + t279 * t200 + t280 * t198
    t7 = t107 + t56 + t76 + t270 * (t100 * t120 + t101 * t121) + t269 * (t69 * t88 + t70 * t89) + t268 * (t46 * t67 + t47 * t68) + (t276 * t221 + t275 * t225) * t220
    t6 = t268 * (t38 * t39 + t48 * t83 + t49 * t82) + t21 * t354 + t12 * t357 + t20 * t355 + t11 * t350 + t22 * t353
    t5 = t268 * (t37 * t39 + t46 * t48 + t47 * t49) + t16 * t354 + t15 * t355 + t19 * t353 + t17 * t351 + (t11 * t352 + t12 * t350) * t220
    t4 = t268 * (t32 * t39 + t44 * t48 + t45 * t49) + t14 * t354 + 0.5e0 * t12 * t200 + t13 * t355 + 0.5e0 * t11 * t198 + t18 * t353 + 0.5e0 * t17 * t339
    t3 = t316 * t225 - t315 * t221 + t310 * t339 + t311 * t200 + t312 * t198 + t269 * (t105 * t72 + t106 * t71 + t63 * t64) + t268 * (t32 * t38 + t44 * t83 + t45 * t82)
    t2 = t310 * t224 + (0.5e0 * t42 + 0.5e0 * t348 + t314) * t225 + (-0.5e0 * t43 - 0.5e0 * t347 - t313) * t221 + t270 * (t100 * t148 + t101 * t147 + t84 * t85) + t269 * (t105 * t70 + t106 * t69 + t62 * t63) + t268 * (t37 * t38 + t46 * t83 + t47 * t82) + ((0.5e0 * t53 + t311) * t225 + (0.5e0 * t52 + t312) * t221) * t220
    t1 = (0.5e0 * t27 + 0.5e0 * t18) * t224 + t313 * t200 + t314 * t198 + t269 * (t62 * t64 + t69 * t71 + t70 * t72) + t268 * (t32 * t37 + t44 * t46 + t45 * t47) + (t315 * t225 + t316 * t221 + (0.5e0 * t28 + 0.5e0 * t19) * t219) * t220
    Mass[1, 1] = t271 * ((-t225 * t319 + t289 + (-t224 * t237 - t334) * t215) ** 2 + t171 ** 2 + t172 ** 2) + t270 * (t147 ** 2 + t148 ** 2 + t84 ** 2) + t269 * (t105 ** 2 + t106 ** 2 + t63 ** 2) + t268 * (t38 ** 2 + t82 ** 2 + t83 ** 2) + (t182 * t216 + t20 + t29 + t52) * t225 + (-0.10e1 * t215 * t185 - 0.10e1 * t53 - 0.10e1 * t30 - 0.10e1 * t21 + (-0.1e1 * t185 * t225 + t182 * t221) * t225) * t221
    Mass[2, 4] = t5
    Mass[2, 1] = t2
    Mass[4, 3] = t4
    Mass[1, 3] = t3
    Mass[3, 1] = t3
    Mass[0, 0] = t168 + J1[3] + (-0.10e1 * t179 - t220 * t261 + t224 * t258) * t224 + (-0.10e1 * t180 * t223 + t220 * J2[0] - 0.10e1 * t331) * t220 + m[0] * ((-t225 * t238 + (-t239 - t272) * t221) ** 2 + (-t221 * t238 + t225 * t239 + t213) ** 2) + t271 * (t154 ** 2 + t155 ** 2) + t270 * (t120 ** 2 + t121 ** 2) + t269 * (t88 ** 2 + t89 ** 2) + t268 * (t67 ** 2 + t68 ** 2) + t77 + t57
    Mass[3, 2] = t1
    Mass[1, 0] = t9
    Mass[4, 1] = t6
    Mass[0, 2] = t7
    Mass[1, 2] = t2
    Mass[2, 0] = t7
    Mass[4, 0] = t10
    Mass[3, 4] = t4
    Mass[0, 3] = t8
    Mass[4, 4] = t268 * (t39 ** 2 + t48 ** 2 + t49 ** 2) + t12 * t166 + t11 * t164 - t17 * t196
    Mass[2, 2] = (t107 + t28 + t19) * t224 + t270 * (t100 ** 2 + t101 ** 2 + t85 ** 2) + t269 * (t62 ** 2 + t69 ** 2 + t70 ** 2) + t268 * (t37 ** 2 + t46 ** 2 + t47 ** 2) + ((t16 + t26 + t43 + t347) * t225 + (t15 + t25 + t42 + t348) * t221) * t220
    Mass[0, 1] = t9
    Mass[3, 0] = t8
    Mass[2, 3] = t1
    Mass[3, 3] = (t18 + t27) * t339 + (t24 + t14) * t200 + (t23 + t13) * t198 + t269 * (t64 ** 2 + t71 ** 2 + t72 ** 2) + t268 * (t32 ** 2 + t44 ** 2 + t45 ** 2)
    Mass[4, 2] = t5
    Mass[0, 4] = t10
    Mass[1, 4] = t6

    t3526 = m[2]
    t3901 = 0.2500000000e0 * t3526
    t4307 = 2 * t3901
    t3492 = qd[4]
    t4387 = -0.2e1 * t3492
    t3496 = qd[0]
    t4385 = -0.2e1 * t3496
    t3522 = q[1]
    t3475 = sin(t3522)
    t3523 = q[0]
    t3476 = sin(t3523)
    t3479 = cos(t3523)
    t3478 = cos(t3522)
    t4219 = q[2]
    t3474 = sin(t4219)
    t4126 = t3479 * t3474
    t4197 = cos(t4219)
    t3403 = -t3476 * t4197 - t3478 * t4126
    t3988 = t4197 * t3478
    t4140 = t3476 * t3474
    t3404 = t3479 * t3988 - t4140
    t3510 = J3[4]
    t3513 = J3[1]
    t3511 = J3[3]
    t4145 = t3475 * t3511
    t3157 = t3403 * t3510 + t3404 * t3513 - t3479 * t4145
    t3509 = J3[5]
    t4146 = t3475 * t3510
    t3512 = J3[2]
    t4165 = t3404 * t3512
    t3156 = t3403 * t3509 - t3479 * t4146 + t4165
    t3384 = t3403 * t3512
    t3514 = J3[0]
    t4144 = t3475 * t3513
    t3158 = t3404 * t3514 - t3479 * t4144 + t3384
    t4071 = t3156 * t3403 + t3158 * t3404
    t4151 = t3475 * t3479
    t2908 = -t3157 * t4151 + t4071
    t4005 = t3478 * t4140
    t3399 = -t3479 * t4197 + t4005
    t3400 = t3476 * t3988 + t4126
    t3151 = t3399 * t3510 - t3400 * t3513 + t3476 * t4145
    t3383 = t3400 * t3512
    t3147 = -t3399 * t3509 - t3476 * t4146 + t3383
    t3382 = t3399 * t3512
    t3152 = -t3400 * t3514 + t3476 * t4144 + t3382
    t3873 = t3147 * t3399 + t3152 * t3400
    t4429 = t3873 + t4071 + (-t3151 * t3476 - t3157 * t3479) * t3475
    t4096 = -t2908 + t4429
    t4072 = t3147 * t3403 - t3152 * t3404
    t2906 = t3151 * t4151 + t4072
    t4070 = -t3156 * t3399 + t3158 * t3400
    t4428 = -t4072 - t3475 * (t3151 * t3479 - t3157 * t3476) - t4070
    t4098 = t2906 + t4428
    t3987 = t4197 * t3512
    t3768 = t3474 * t3509 - t3987
    t3330 = t3475 * t3768 - t3478 * t3510
    t3767 = t3474 * t3510 - t3513 * t4197
    t3331 = t3475 * t3767 - t3478 * t3511
    t4156 = t3474 * t3512
    t3450 = t3475 * t4156
    t3986 = t4197 * t3514
    t4129 = t3478 * t3513
    t3332 = -t3475 * t3986 + t3450 - t4129
    t4152 = t3475 * t3476
    t2995 = t3330 * t3399 + t3331 * t4152 - t3332 * t3400
    t4381 = t2995 * t3478
    t2418 = t4381 + (t3476 * t4096 + t3479 * t4098) * t3475
    t3521 = q[4]
    t3477 = cos(t3521)
    t4174 = t3399 * t3477
    t4218 = q[3]
    t3473 = sin(t4218)
    t4196 = cos(t4218)
    t3997 = t3400 * t4196
    t3263 = -t3473 * t4152 + t3997
    t3472 = sin(t3521)
    t4184 = t3263 * t3472
    t3126 = t4174 + t4184
    t4176 = t3399 * t3472
    t4183 = t3263 * t3477
    t3127 = t4176 - t4183
    t3993 = t3475 * t4196
    t3262 = t3400 * t3473 + t3476 * t3993
    t4210 = rS5[2]
    t4211 = rS5[1]
    t4212 = rS5[0]
    t2946 = -t3126 * t4210 - t3127 * t4212 - t3262 * t4211
    t4220 = l[0]
    t4027 = t3477 * t4220
    t3977 = t4027 / 2
    t4031 = t3472 * t4220
    t3980 = t4031 / 2
    t4090 = -t3263 * t3977 + t3399 * t3980 - t2946
    t3797 = t4183 / 2 - t4176 / 2
    t4091 = t3797 * t4220 + t2946
    t4394 = -t4090 - t4091
    t2654 = t4394 * t4152
    t3973 = t4197 * t4220
    t3456 = t3479 * t3973
    t3436 = t3478 * t3456
    t4028 = t3476 * t4220
    t3984 = t3474 * t4028
    t3362 = t3436 - t3984
    t3983 = t3475 * t4028
    t3432 = t3473 * t3983
    t3972 = t4196 * t4220
    t3224 = -t3400 * t3972 + t3432
    t3187 = t3224 * t4151
    t3359 = t3400 * t4220
    t3290 = t3359 * t4151
    t4057 = -t3187 + t3290
    t3356 = t3404 * t3972
    t3463 = t3479 * t4220
    t3982 = t3475 * t3463
    t3800 = t3473 * t3982 - t3356
    t3746 = t3475 * t3800
    t3439 = t3473 * t4151
    t3996 = t3404 * t4196
    t3886 = t3996 - t3439
    t3772 = t3886 * t3477
    t4168 = t3403 * t3472
    t3721 = t3772 + t4168
    t3773 = t3886 * t3472
    t3722 = t3403 * t3477 - t3773
    t3990 = t3479 * t4196
    t3744 = -t3404 * t3473 - t3475 * t3990
    t3562 = t3721 * t4212 + t3722 * t4210 + t3744 * t4211
    t3664 = t3772 / 2 + t4168 / 2
    t4258 = t4220 * t3664 + t3562
    t4260 = t4258 * t3475
    t4229 = t4091 * t4151 + (t3746 - t4260) * t3476
    t2655 = -t3362 * t4152 + t4057 + t4229
    t2905 = t3151 * t4152 - t3873
    t2907 = -t3157 * t4152 + t4070
    t3876 = t2905 * t3476 + t2907 * t3479
    t2705 = t3475 * t3876 - t4381
    t3894 = t4196 * t4197
    t4134 = t3478 * t3473
    t3398 = t3475 * t3894 + t4134
    t3665 = t3398 * t4220
    t3652 = t3476 * t3665
    t4016 = t4197 + 1
    t3756 = t4016 * t3983
    t3735 = t3756 + t3652
    t4161 = t3474 * t3475
    t4013 = t3477 * t4161
    t3260 = t3398 * t3472 + t4013
    t4006 = t3472 * t4161
    t4177 = t3398 * t3477
    t3261 = t4006 - t4177
    t3994 = t3475 * t4197
    t3899 = t3473 * t3994
    t3991 = t3478 * t4196
    t3397 = t3899 - t3991
    t4254 = t3260 * t4210 + t3261 * t4212 + t3397 * t4211 + t4220 * (-t4177 / 2 + t4006 / 2)
    t4395 = t4254 * t3476
    t2927 = t3735 - t4395
    t4217 = rS3[0]
    t3964 = t4197 * t4217
    t4216 = rS3[2]
    t4019 = t3474 * t4216
    t3485 = rS3[1]
    t4132 = t3478 * t3485
    t3640 = t4132 - (-t3964 + t4019) * t3475
    t3625 = t3476 * t3640
    t3159 = t3625 + t3756
    t3524 = m[4]
    t3903 = 0.2500000000e0 * t3524
    t3909 = 0.2500000000e0 * t3476
    t4213 = rS4[2]
    t4215 = rS4[0]
    t3790 = t3397 * t4213 + t3398 * t4215
    t4214 = rS4[1]
    t4018 = t3474 * t4214
    t3971 = t3475 * t4018
    t3666 = -t3790 + t3971
    t3648 = t3476 * t3666
    t3128 = t3475 * t3648
    t3285 = t3475 * t3652
    t3469 = t3475 ** 2
    t3891 = t3476 * t3973
    t3804 = t3469 * t3891
    t3752 = -t3285 - t3804
    t3366 = t3399 * t4214
    t3035 = t3262 * t4213 + t3263 * t4215 - t3366
    t4052 = t3224 - t3359
    t4002 = -t3035 + t4052
    t2858 = t3478 * t4002 + t3128 + t3752
    t3751 = -t3478 * t3359 - t3804
    t3726 = t3478 * t3224 - t3285 + t3751
    t4430 = t3478 * t3035
    t2859 = t3128 + t3726 - t4430
    t4094 = t2858 - t2859
    t3960 = 2 * t4094
    t4267 = t4395 * t3475
    t2719 = (t4052 - t4091) * t3478 + t3752 + t4267
    t2720 = t3478 * t4090 + t3726 + t4267
    t4101 = t2719 - t2720
    t3962 = 2 * t4101
    t3269 = t3475 * t3625
    t3461 = t3475 * t3485
    t3140 = -t3399 * t4216 + t3400 * t4217 - t3476 * t3461
    t4066 = -t3140 - t3359
    t2973 = t3478 * t4066 - t3269 - t3804
    t4423 = t3478 * t3140
    t2974 = -t3269 + t3751 - t4423
    t4085 = t2973 - t2974
    t2659 = t4394 * t3479
    t4207 = 2 * t2659
    t4026 = t3478 * t4220
    t3470 = t3476 ** 2
    t3471 = t3479 ** 2
    t4338 = t3470 + t3471
    t3887 = t4338 * t4026
    t4240 = -t3800 + t4258
    t4245 = t3224 - t4091
    t2656 = -t3887 + (-t3362 - t4240) * t3479 + (-t3359 + t4245) * t3476
    t4208 = 2 * t2656
    t3026 = -t3648 + t3735
    t3525 = m[3]
    t3902 = 0.2500000000e0 * t3525
    t4447 = t3026 * t3902
    t4476 = -(t2418 + t2705) * t3909 + (t2654 * t4208 + t2655 * t4207 + t2927 * t3962) * t3903 + t3960 * t4447 + t3159 * t4085 * t4307
    t3922 = 0.2500000000e0 * t3400
    t3497 = J5[5]
    t3498 = J5[4]
    t3500 = J5[2]
    t4288 = t3500 * t3721
    t2954 = t3497 * t3722 + t3498 * t3744 + t4288
    t3499 = J5[3]
    t3501 = J5[1]
    t2955 = t3498 * t3722 + t3499 * t3744 + t3501 * t3721
    t3123 = t3722 * t3500
    t3502 = J5[0]
    t2956 = t3501 * t3744 + t3502 * t3721 + t3123
    t2639 = -t2954 * t3126 - t2955 * t3262 - t2956 * t3127
    t4186 = t3261 * t3500
    t3043 = t3260 * t3497 + t3397 * t3498 + t4186
    t3044 = t3260 * t3498 + t3261 * t3501 + t3397 * t3499
    t3243 = t3260 * t3500
    t3045 = t3261 * t3502 + t3397 * t3501 + t3243
    t2759 = t3043 * t3126 + t3044 * t3262 + t3045 * t3127
    t4192 = t3127 * t3500
    t2951 = t3126 * t3497 + t3262 * t3498 + t4192
    t2952 = t3126 * t3498 + t3127 * t3501 + t3262 * t3499
    t3122 = t3126 * t3500
    t2953 = t3127 * t3502 + t3262 * t3501 + t3122
    t4108 = -t2951 * t3126 - t2952 * t3262 - t2953 * t3127
    t2360 = t2639 * t3403 - t2759 * t4161 + t3399 * t4108
    t3504 = J4[4]
    t3505 = J4[3]
    t3507 = J4[1]
    t3047 = t3262 * t3504 + t3263 * t3507 - t3399 * t3505
    t3506 = J4[2]
    t3244 = t3263 * t3506
    t3503 = J4[5]
    t3049 = -t3262 * t3503 + t3399 * t3504 - t3244
    t3508 = J4[0]
    t4185 = t3262 * t3506
    t3051 = -t3263 * t3508 + t3399 * t3507 - t4185
    t2803 = -t3047 * t3399 - t3049 * t3262 - t3051 * t3263
    t3245 = t3886 * t3506
    t3055 = t3403 * t3504 - t3503 * t3744 + t3245
    t3056 = t3403 * t3505 - t3504 * t3744 + t3507 * t3886
    t4182 = t3744 * t3506
    t3057 = t3403 * t3507 + t3508 * t3886 - t4182
    t2805 = t3055 * t3262 - t3056 * t3399 + t3057 * t3263
    t3381 = t3398 * t3506
    t4159 = t3474 * t3504
    t4011 = t3475 * t4159
    t3144 = -t3397 * t3503 - t3381 + t4011
    t4158 = t3474 * t3505
    t4010 = t3475 * t4158
    t3145 = -t3397 * t3504 - t3398 * t3507 + t4010
    t4157 = t3474 * t3507
    t4009 = t3475 * t4157
    t4178 = t3397 * t3506
    t3146 = -t3398 * t3508 + t4009 - t4178
    t2879 = t3144 * t3262 - t3145 * t3399 + t3146 * t3263
    t2506 = -t2803 * t3399 + t2805 * t3403 + t2879 * t4161
    t4360 = t2360 + t2506
    t3701 = 0.5000000000e0 * t4360
    t3883 = t2639 * t3479 - t3476 * t4108
    t4195 = t2759 * t3478
    t2161 = -t3475 * t3883 + t4195
    t3879 = t2803 * t3476 + t2805 * t3479
    t4194 = t2879 * t3478
    t2522 = t3475 * t3879 + t4194
    t4349 = t2522 - t2161
    t3137 = t3404 * t3224
    t3995 = t3472 * t4196
    t3169 = -t3403 * t3995 - t3404 * t3477
    t3992 = t3477 * t4196
    t3170 = t3403 * t3992 - t3404 * t3472
    t3890 = t3477 * t3972
    t3801 = t3890 / 2
    t3981 = -t4031 / 2
    t4020 = t3473 * t4211
    t4083 = t3169 * t4210 + t3170 * t4212 + t3404 * t3981 + (t3801 - t4020) * t3403
    t3167 = t3399 * t3995 - t3400 * t3477
    t3900 = t3399 * t3992
    t4169 = t3400 * t3472
    t3168 = -t3900 - t4169
    t2976 = t3167 * t4210 + t3168 * t4212 + t3399 * t4020
    t4084 = t2976 - t3399 * t3890 / 2 + t3400 * t3981
    t2483 = t3399 * t4083 + t3400 * t4240 + t3403 * t4084 - t3404 * t4091 + t3137
    t3212 = t3400 * t3665
    t3989 = t4197 * t3224
    t3342 = (-t3474 * t3995 + t3477 * t4197) * t3475
    t3343 = (t3472 * t4197 + t3474 * t3992) * t3475
    t3893 = t3475 * t3973
    t4153 = t3475 * t3473
    t4015 = t3474 * t4153
    t4069 = t3342 * t4210 + t3343 * t4212 - t4015 * t4211 + t3472 * t3893 / 2 + t3801 * t4161
    t2575 = -t3399 * t4069 - t3400 * t4254 + t3475 * t3989 - t3994 * t4091 - t4084 * t4161 + t3212
    t3634 = -t3404 * t3665 - t4197 * t3746
    t2576 = -t3403 * t4069 + t3404 * t4254 + t4083 * t4161 + t4197 * t4260 + t3634
    t3136 = t3403 * t3224
    t4259 = t4258 * t3399
    t2635 = -t3399 * t3800 + t3403 * t4091 - t3136 + t4259
    t3369 = t3400 * t4214
    t3966 = t4215 * t4196
    t4333 = t3473 * t4213 + t3966
    t3085 = -t3399 * t4333 - t3369
    t3086 = t3403 * t4333 - t3404 * t4214
    t3999 = t3403 * t4214 - t3744 * t4213 + t3886 * t4215
    t3727 = t3800 - t3999
    t2708 = -t3404 * t3035 + t3403 * t3085 + t3399 * t3086 - t3400 * t3727 + t3137
    t3206 = t3475 * t3224
    t3210 = t3399 * t3665
    t3568 = t4254 * t3399
    t4393 = t4091 * t3475
    t4250 = t4393 * t3474
    t2714 = t3206 * t3474 + t3210 - t3568 - t4250
    t3633 = -t3403 * t3665 + t3474 * t3746
    t4262 = t4260 * t3474
    t2715 = t3403 * t4254 + t3633 - t4262
    t3361 = t3403 * t4220
    t3798 = -t3403 * t3972 - t3361
    t3733 = t3798 - t4083
    t3353 = t3399 * t3972
    t3799 = t3478 * t3984 - t3456
    t3796 = t3353 + t3799
    t3734 = t3796 - t4084
    t2725 = t3476 * t3734 + t3479 * t3733
    t3248 = t3966 * t4161 + t4214 * t3994 + t4213 * t4015
    t2790 = t3212 + t3400 * t3790 - t3399 * t3248 + (-t4197 * t3035 + t3989 + (-t3085 - t3369) * t3474) * t3475
    t3897 = t3475 * t3999
    t2791 = t3086 * t4161 - t3403 * t3248 + t3404 * t3666 + t3897 * t4197 + t3634
    t3670 = -t3362 + t3727
    t2816 = t3476 * t4002 + t3479 * t3670 - t3887
    t2823 = t3403 * t3035 - t3399 * t3727 - t3136
    t4053 = t3224 - t3035
    t2867 = t3210 + t3399 * t3790 + (-t3366 + t4053) * t4161
    t2868 = t3403 * t3666 - t3474 * t3897 + t3633
    t3010 = -t3798 + t3086
    t4339 = -t3085 + t3796
    t2871 = -t3010 * t3479 + t3476 * t4339
    t3651 = t3479 * t3665
    t3671 = -t3456 * t3475 - t3982
    t4257 = t4254 * t3479
    t2929 = -t3651 + t3671 + t4257
    t3976 = t4069 * t3476
    t3892 = t3475 * t3972
    t3428 = t3474 * t3892
    t3433 = t3474 * t3983
    t4040 = t3476 * t3428 + t3433
    t2961 = t3976 + t4040
    t3435 = t3474 * t3982
    t3802 = t3479 * t3892
    t4039 = t3474 * t3802 + t3435
    t2962 = t3479 * t4069 + t4039
    t3895 = t4016 * t4220
    t3028 = -t3651 + ((-t3895 + t4018) * t3475 - t3790) * t3479
    t3108 = t3248 * t3476 + t4040
    t3109 = t3248 * t3479 + t4039
    t3905 = 0.2500000000e0 * t3479
    t3916 = 0.2500000000e0 * t3404
    t3918 = 0.2500000000e0 * t3403
    t3924 = 0.2500000000e0 * t3399
    t4305 = 2 * t3903
    t4306 = 2 * t3902
    t4164 = t3473 * t3498
    t2978 = t3167 * t3497 + t3168 * t3500 + t3399 * t4164
    t4163 = t3473 * t3499
    t2979 = t3167 * t3498 + t3168 * t3501 + t3399 * t4163
    t4162 = t3473 * t3501
    t2980 = t3167 * t3500 + t3168 * t3502 + t3399 * t4162
    t4167 = t3403 * t3473
    t2464 = -t2951 * t3169 + t2952 * t4167 - t2953 * t3170 + t2978 * t3722 + t2979 * t3744 + t2980 * t3721
    t2981 = t3169 * t3497 + t3170 * t3500 - t3403 * t4164
    t2982 = t3169 * t3498 + t3170 * t3501 - t3403 * t4163
    t2983 = t3169 * t3500 + t3170 * t3502 - t3403 * t4162
    t2466 = t2954 * t3169 - t2955 * t4167 + t2956 * t3170 + t2981 * t3722 + t2982 * t3744 + t2983 * t3721
    t2292 = t2464 * t3479 - t2466 * t3476
    t3765 = t3473 * t3503 + t3506 * t4196
    t3090 = -t3399 * t3765 - t3400 * t3504
    t3763 = t3473 * t3506 + t3508 * t4196
    t3092 = -t3399 * t3763 - t3400 * t3507
    t3764 = t3473 * t3504 + t3507 * t4196
    t3739 = -t3049 * t3473 - t3051 * t4196 - t3399 * t3764 - t3400 * t3505
    t2643 = -t3047 * t3404 - t3090 * t3744 + t3092 * t3886 + t3403 * t3739
    t3093 = t3403 * t3765 - t3404 * t3504
    t3095 = t3403 * t3763 - t3404 * t3507
    t3738 = t3055 * t3473 + t3057 * t4196 + t3403 * t3764 - t3404 * t3505
    t2645 = -t3056 * t3404 - t3093 * t3744 + t3095 * t3886 + t3403 * t3738
    t4361 = t2643 * t3479 - t2645 * t3476 + t2292
    t4175 = t3399 * t3473
    t2463 = -t2951 * t3167 - t2952 * t4175 - t2953 * t3168 - t2978 * t3126 - t2979 * t3262 - t2980 * t3127
    t2465 = t2954 * t3167 + t2955 * t4175 + t2956 * t3168 - t2981 * t3126 - t2982 * t3262 - t2983 * t3127
    t2291 = t2463 * t3479 - t2465 * t3476
    t2642 = -t3047 * t3400 + t3090 * t3262 + t3092 * t3263 - t3399 * t3739
    t2644 = -t3056 * t3400 + t3093 * t3262 + t3095 * t3263 - t3399 * t3738
    t4362 = t2642 * t3479 - t2644 * t3476 + t2291
    t3099 = t3342 * t3497 + t3343 * t3500 - t3498 * t4015
    t3100 = t3342 * t3498 + t3343 * t3501 - t3499 * t4015
    t3101 = t3342 * t3500 + t3343 * t3502 - t3501 * t4015
    t2598 = t3043 * t3169 - t3044 * t4167 + t3045 * t3170 + t3099 * t3722 + t3100 * t3744 + t3101 * t3721
    t2638 = -t2951 * t3722 - t2952 * t3744 - t2953 * t3721
    t2640 = t2954 * t3722 + t2955 * t3744 + t2956 * t3721
    t2760 = t3043 * t3722 + t3044 * t3744 + t3045 * t3721
    t2104 = -t3399 * t2464 + t3403 * t2466 - t3400 * t2638 - t3404 * t2640 + (t2598 * t3474 + t2760 * t4197) * t3475
    t3251 = (t3474 * t3765 + t3504 * t4197) * t3475
    t3253 = (t3474 * t3763 + t3507 * t4197) * t3475
    t3252 = (t3474 * t3764 + t3505 * t4197) * t3475
    t3743 = t3144 * t3473 + t3146 * t4196 + t3252
    t2773 = -t3145 * t3404 - t3251 * t3744 + t3253 * t3886 + t3403 * t3743
    t2804 = t3047 * t3403 + t3049 * t3744 - t3051 * t3886
    t2806 = -t3055 * t3744 + t3056 * t3403 + t3057 * t3886
    t2881 = -t3144 * t3744 + t3145 * t3403 + t3146 * t3886
    t4369 = t2104 - t3399 * t2643 + t3403 * t2645 - t3400 * t2804 - t3404 * t2806 + (t2773 * t3474 + t2881 * t4197) * t3475
    t2597 = t3043 * t3167 + t3044 * t4175 + t3045 * t3168 - t3099 * t3126 - t3100 * t3262 - t3101 * t3127
    t2103 = -t3399 * t2463 + t3403 * t2465 + t3400 * t4108 - t3404 * t2639 + (t2597 * t3474 - t2759 * t4197) * t3475
    t2772 = -t3145 * t3400 + t3251 * t3262 + t3253 * t3263 - t3399 * t3743
    t4370 = t2103 - t3399 * t2642 + t3403 * t2644 - t3400 * t2803 - t3404 * t2805 + (t2772 * t3474 + t2879 * t4197) * t3475
    t4461 = t2638 * t3479 - t2640 * t3476
    t4465 = t2804 * t3479 - t2806 * t3476 + t4461
    t4475 = t3916 * t4465 - t4370 * t3905 + t4369 * t3909 - t4361 * t3918 + t4362 * t3924 - (t2483 * t2656 + t2575 * t2929 - t2576 * t2927 + t2635 * t2725 + t2714 * t2962 - t2715 * t2961) * t4305 - (t2708 * t2816 + t2790 * t3028 - t2791 * t3026 + t2823 * t2871 + t2867 * t3109 - t2868 * t3108) * t4306
    t3493 = qd[3]
    t4438 = -0.2e1 * t3493
    t3494 = qd[2]
    t4386 = -0.2e1 * t3494
    t3495 = qd[1]
    t4442 = -0.2e1 * t3495
    t2179 = t2639 * t3476 + t3479 * t4108
    t2302 = -t2803 * t3479 + t2805 * t3476
    t4414 = t2179 + t2302
    t4462 = -t2638 * t3399 + t2640 * t3403 + t2760 * t4161
    t4359 = -t2804 * t3399 + t2806 * t3403 + t2881 * t4161 + t4462
    t3699 = 0.5000000000e0 * t4359
    t2877 = t3478 * t2881
    t3878 = t2804 * t3476 + t2806 * t3479
    t2757 = t3478 * t2760
    t3881 = t2638 * t3476 + t2640 * t3479
    t4466 = t3475 * t3881 + t2757
    t4470 = t3475 * t3878 + t2877 + t4466
    t2684 = t2951 * t3260 + t2952 * t3397 + t2953 * t3261
    t4341 = -t2684 - t2759
    t2133 = t2639 * t3744 - t2759 * t3397 + t3262 * t4108
    t4460 = t2638 * t3262 - t2640 * t3744 - t3397 * t2760
    t2833 = t3047 * t4161 + t3049 * t3397 + t3051 * t3398
    t4397 = t2833 + t2879
    t3635 = t3224 * t4161 + t3210
    t2866 = -t3035 * t4161 - t3399 * t3666 + t3635
    t4093 = t2866 - t2867
    t4448 = 2 * t4093
    t3910 = 0.5000000000e0 * t3475
    t3336 = t3478 * t3768 + t4146
    t3766 = -t3986 + t4156
    t3338 = t3478 * t3766 + t4144
    t3337 = t3478 * t3767 + t4145
    t3769 = t3330 * t3474 - t3332 * t4197
    t3740 = -t3337 + t3769
    t4181 = t3331 * t3478
    t3641 = t3475 * t3740 - t4181
    t2895 = -t3336 * t3399 + t3338 * t3400 + t3476 * t3641
    t3345 = t3398 * t3476
    t3189 = t3345 * t3472 + t3476 * t4013
    t4179 = t3345 * t3477
    t3190 = t3476 * t4006 - t4179
    t3344 = t3397 * t3476
    t3001 = t3189 * t3497 + t3190 * t3500 + t3344 * t3498
    t3002 = t3189 * t3498 + t3190 * t3501 + t3344 * t3499
    t3003 = t3189 * t3500 + t3190 * t3502 + t3344 * t3501
    t3809 = t3478 * t3894
    t3402 = -t3809 + t4153
    t4160 = t3474 * t3478
    t3266 = -t3402 * t3472 + t3477 * t4160
    t3267 = t3402 * t3477 + t3472 * t4160
    t3401 = t3473 * t3988 + t3993
    t2514 = -t2951 * t3266 - t2952 * t3401 - t2953 * t3267 + t3001 * t3260 + t3002 * t3397 + t3003 * t3261
    t3052 = t3266 * t3497 + t3267 * t3500 + t3401 * t3498
    t3053 = t3266 * t3498 + t3267 * t3501 + t3401 * t3499
    t3054 = t3266 * t3500 + t3267 * t3502 + t3401 * t3501
    t2573 = t3043 * t3189 + t3044 * t3344 + t3045 * t3190 - t3052 * t3126 - t3053 * t3262 - t3054 * t3127
    t4353 = t2514 + t2573
    t3102 = -t3344 * t3503 - t3345 * t3506 + t3476 * t4011
    t3103 = -t3344 * t3504 - t3345 * t3507 + t3476 * t4010
    t3104 = -t3344 * t3506 - t3345 * t3508 + t3476 * t4009
    t2681 = t3049 * t3401 - t3051 * t3402 - t3102 * t3397 - t3104 * t3398 + (t3047 * t3478 + t3103 * t3475) * t3474
    t3153 = -t3401 * t3503 + t3402 * t3506 + t3478 * t4159
    t3154 = -t3401 * t3504 + t3402 * t3507 + t3478 * t4158
    t3155 = -t3401 * t3506 + t3402 * t3508 + t3478 * t4157
    t4014 = t3475 * t4140
    t2748 = -t3144 * t3344 + t3145 * t4014 - t3146 * t3345 + t3153 * t3262 - t3154 * t3399 + t3155 * t3263
    t4404 = t2681 + t2748
    t4321 = -t4353 - t4404
    t4441 = t2895 - t4321
    t4199 = t3477 / 2
    t4424 = t4199 + 1
    t3225 = t3744 * t4220
    t2472 = -t2951 * t3189 - t2952 * t3344 - t2953 * t3190 - t3001 * t3126 - t3002 * t3262 - t3003 * t3127
    t3347 = t3398 * t3479
    t4012 = t3475 * t4126
    t3191 = t3347 * t3472 + t3477 * t4012
    t3192 = -t3347 * t3477 + t3479 * t4006
    t3346 = -t3478 * t3990 + t3479 * t3899
    t3004 = t3191 * t3497 + t3192 * t3500 + t3346 * t3498
    t3005 = t3191 * t3498 + t3192 * t3501 + t3346 * t3499
    t3006 = t3191 * t3500 + t3192 * t3502 + t3346 * t3501
    t2474 = t2954 * t3189 + t2955 * t3344 + t2956 * t3190 - t3004 * t3126 - t3005 * t3262 - t3006 * t3127
    t3786 = t2573 + t3883
    t2109 = -t2472 * t3399 + t2474 * t3403 + (t3475 * t3786 - t4195) * t3474
    t2650 = t3047 * t4014 + t3049 * t3344 + t3051 * t3345 + t3102 * t3262 - t3103 * t3399 + t3104 * t3263
    t3105 = -t3346 * t3503 - t3347 * t3506 + t3479 * t4011
    t3106 = -t3346 * t3504 - t3347 * t3507 + t3479 * t4010
    t3107 = -t3346 * t3506 - t3347 * t3508 + t3479 * t4009
    t2652 = -t3055 * t3344 + t3056 * t4014 - t3057 * t3345 + t3105 * t3262 - t3106 * t3399 + t3107 * t3263
    t3783 = t2748 + t3879
    t2218 = -t2650 * t3399 + t2652 * t3403 + (t3475 * t3783 + t4194) * t3474
    t4422 = t2109 + t2218
    t2117 = t3786 * t3478 + (t2472 * t3476 + t2474 * t3479 + t2759) * t3475
    t4368 = t2117 + t3783 * t3478 + (t2650 * t3476 + t2652 * t3479 - t2879) * t3475
    t2473 = -t2951 * t3191 - t2952 * t3346 - t2953 * t3192 + t3001 * t3722 + t3002 * t3744 + t3003 * t3721
    t2475 = t2954 * t3191 + t2955 * t3346 + t2956 * t3192 + t3004 * t3722 + t3005 * t3744 + t3006 * t3721
    t2574 = t3043 * t3191 + t3044 * t3346 + t3045 * t3192 + t3052 * t3722 + t3053 * t3744 + t3054 * t3721
    t3785 = t2574 + t3881
    t2118 = t3785 * t3478 + (t2473 * t3476 + t2475 * t3479 - t2760) * t3475
    t2651 = t3047 * t4012 + t3049 * t3346 + t3051 * t3347 - t3102 * t3744 + t3103 * t3403 + t3104 * t3886
    t2653 = -t3055 * t3346 + t3056 * t4012 - t3057 * t3347 - t3105 * t3744 + t3106 * t3403 + t3107 * t3886
    t2749 = -t3144 * t3346 + t3145 * t4012 - t3146 * t3347 - t3153 * t3744 + t3154 * t3403 + t3155 * t3886
    t3782 = t2749 + t3878
    t4367 = t2118 + t3782 * t3478 + (t2651 * t3476 + t2653 * t3479 - t2881) * t3475
    t2515 = t2954 * t3266 + t2955 * t3401 + t2956 * t3267 + t3004 * t3260 + t3005 * t3397 + t3006 * t3261
    t2610 = t3043 * t3266 + t3044 * t3401 + t3045 * t3267 + t3052 * t3260 + t3053 * t3397 + t3054 * t3261
    t2685 = t2954 * t3260 + t2955 * t3397 + t2956 * t3261
    t3880 = -t2684 * t3476 + t3479 * t2685
    t3784 = t2610 + t3880
    t2802 = t3043 * t3260 + t3044 * t3397 + t3045 * t3261
    t4137 = t3478 * t2802
    t2149 = -t3399 * t2514 + t3403 * t2515 + (t3475 * t3784 + t4137) * t3474
    t2682 = -t3055 * t3401 + t3057 * t3402 - t3105 * t3397 - t3107 * t3398 + (t3056 * t3478 + t3106 * t3475) * t3474
    t2780 = -t3144 * t3401 + t3146 * t3402 - t3153 * t3397 - t3155 * t3398 + (t3145 * t3478 + t3154 * t3475) * t3474
    t2835 = -t3055 * t3397 + t3056 * t4161 - t3057 * t3398
    t3877 = t3476 * t2833 + t3479 * t2835
    t3781 = t2780 + t3877
    t2904 = -t3144 * t3397 + t3145 * t4161 - t3146 * t3398
    t4136 = t3478 * t2904
    t2268 = -t3399 * t2681 + t3403 * t2682 + (t3475 * t3781 + t4136) * t3474
    t4419 = t2149 + t2268
    t2159 = t3784 * t3478 + (t3476 * t2514 + t3479 * t2515 - t2802) * t3475
    t2273 = t3781 * t3478 + (t3476 * t2681 + t3479 * t2682 - t2904) * t3475
    t4418 = t2159 + t2273
    t3871 = t3472 * t3497 - t3477 * t3500
    t3013 = t3262 * t3871 - t3263 * t3498
    t3869 = t3472 * t3500 - t3477 * t3502
    t3015 = t3262 * t3869 - t3263 * t3501
    t3870 = t3472 * t3498 - t3477 * t3501
    t3780 = -t2951 * t3472 + t2953 * t3477 - t3262 * t3870 + t3263 * t3499
    t2478 = t2952 * t3263 - t3013 * t3126 - t3015 * t3127 + t3262 * t3780
    t3016 = -t3498 * t3886 - t3744 * t3871
    t3018 = -t3501 * t3886 - t3744 * t3869
    t3779 = t2954 * t3472 - t2956 * t3477 + t3499 * t3886 + t3744 * t3870
    t2480 = -t2955 * t3263 - t3016 * t3126 - t3018 * t3127 + t3262 * t3779
    t3087 = -t3397 * t3871 + t3398 * t3498
    t3089 = -t3397 * t3869 + t3398 * t3501
    t3088 = -t3397 * t3870 + t3398 * t3499
    t3778 = t3043 * t3472 - t3045 * t3477 - t3088
    t2602 = -t3044 * t3263 - t3087 * t3126 - t3089 * t3127 + t3262 * t3778
    t2205 = -t2478 * t3399 + t2480 * t3403 + t2602 * t4161
    t3072 = -t3262 * t3507 + t3263 * t3504
    t4077 = -t3263 * t3503 - t3051 + t4185
    t4078 = -t3262 * t3508 - t3049 + t3244
    t2697 = -t3072 * t3399 - t3262 * t4077 + t3263 * t4078
    t3075 = t3504 * t3886 + t3507 * t3744
    t4075 = -t3503 * t3886 + t3057 - t4182
    t4076 = t3508 * t3744 + t3055 + t3245
    t2699 = -t3075 * t3399 - t3262 * t4075 + t3263 * t4076
    t3197 = t3397 * t3507 - t3398 * t3504
    t3196 = -t3398 * t3503 + t4178
    t4063 = t3146 - t3196
    t3198 = t3397 * t3508 - t3381
    t4064 = t3144 + t3198
    t2794 = -t3197 * t3399 - t3262 * t4063 + t3263 * t4064
    t4413 = -t2697 * t3399 + t2699 * t3403 + t2794 * t4161 + t2205
    t2209 = t2602 * t3478 + (t2478 * t3476 + t2480 * t3479) * t3475
    t4364 = t2209 + t2794 * t3478 + (t2697 * t3476 + t2699 * t3479) * t3475
    t2479 = t2952 * t3886 + t3013 * t3722 + t3015 * t3721 - t3744 * t3780
    t2481 = -t2955 * t3886 + t3016 * t3722 + t3018 * t3721 - t3744 * t3779
    t2603 = -t3044 * t3886 + t3087 * t3722 + t3089 * t3721 - t3744 * t3778
    t2210 = t2603 * t3478 + (t2479 * t3476 + t2481 * t3479) * t3475
    t2698 = t3072 * t3403 + t3744 * t4077 + t3886 * t4078
    t2700 = t3075 * t3403 + t3744 * t4075 + t3886 * t4076
    t2795 = t3197 * t3403 + t3744 * t4063 + t3886 * t4064
    t4363 = t2210 + t2795 * t3478 + (t2698 * t3476 + t2700 * t3479) * t3475
    t2110 = -t2473 * t3399 + t2475 * t3403 + (t3475 * t3785 + t2757) * t3474
    t2219 = -t2651 * t3399 + t2653 * t3403 + (t3475 * t3782 + t2877) * t3474
    t4412 = t2219 + t2110
    t2305 = t2478 * t3479 - t2480 * t3476
    t2470 = t2697 * t3479 - t2699 * t3476
    t4411 = t2305 + t2470
    t2306 = t2479 * t3479 - t2481 * t3476
    t2471 = t2698 * t3479 - t2700 * t3476
    t4410 = t2306 + t2471
    t2400 = t3475 * t3880 + t4137
    t2555 = t3475 * t3877 + t4136
    t4358 = t2400 + t2555
    t2516 = -t2951 * t3342 + t2952 * t4015 - t2953 * t3343 + t2978 * t3260 + t2979 * t3397 + t2980 * t3261
    t2517 = t2954 * t3342 - t2955 * t4015 + t2956 * t3343 + t2981 * t3260 + t2982 * t3397 + t2983 * t3261
    t2311 = t3479 * t2516 - t3476 * t2517
    t2694 = -t3090 * t3397 - t3092 * t3398 + (t3047 * t4197 + t3474 * t3739) * t3475
    t2695 = -t3093 * t3397 - t3095 * t3398 + (t3056 * t4197 + t3474 * t3738) * t3475
    t2469 = t3479 * t2694 - t3476 * t2695
    t4405 = t2469 + t2311
    t4352 = -t2515 - t2574
    t4351 = t2516 + t2597
    t4350 = -t2517 - t2598
    t2531 = -t2952 * t3398 + t3013 * t3260 + t3015 * t3261 - t3397 * t3780
    t4347 = t2531 + t2602
    t2532 = t2955 * t3398 + t3016 * t3260 + t3018 * t3261 - t3397 * t3779
    t4346 = -t2532 - t2603
    t2393 = t2684 * t3399 + t3403 * t2685 + t2802 * t4161
    t4345 = t2833 * t3399 - t2835 * t3403 - t2904 * t4161 - t2393
    t2987 = -t3126 * t3501 + t3127 * t3498
    t4088 = t3127 * t3497 - t2953 - t3122
    t4089 = -t3126 * t3502 + t2951 + t4192
    t2563 = t2987 * t3397 + t3260 * t4088 + t3261 * t4089
    t3069 = t3260 * t3501 - t3261 * t3498
    t3068 = -t3261 * t3497 + t3243
    t4079 = t3045 + t3068
    t3070 = t3260 * t3502 - t4186
    t4080 = -t3043 + t3070
    t2619 = -t3069 * t3262 - t3126 * t4079 - t3127 * t4080
    t4344 = t2563 + t2619
    t2990 = -t3498 * t3721 + t3501 * t3722
    t4086 = -t3497 * t3721 + t2956 + t3123
    t4087 = t3502 * t3722 - t2954 - t4288
    t2564 = t2990 * t3397 + t3260 * t4086 + t3261 * t4087
    t2620 = t3069 * t3744 + t3721 * t4080 + t3722 * t4079
    t4343 = t2564 + t2620
    t4342 = t2610 + t2780
    t4403 = -t2682 - t2749
    t4340 = t2685 + t2760
    t4402 = t2694 + t2772
    t4401 = -t2695 - t2773
    t2722 = t3072 * t4161 + t3397 * t4077 - t3398 * t4078
    t4400 = -t2722 - t2794
    t2723 = t3075 * t4161 + t3397 * t4075 - t3398 * t4076
    t4399 = t2723 + t2795
    t4398 = t2802 + t2904
    t4396 = t2835 + t2881
    t4044 = t3509 * t3994 + t3332 + t3450
    t2634 = t4394 * t3399
    t3647 = t3479 * t3666
    t3636 = t3475 * t3647
    t3288 = t3475 * t3651
    t3803 = t3469 * t3456
    t3750 = t3803 + t3288
    t4292 = t3478 * t3670
    t2860 = -t3636 + t3750 - t4292
    t4261 = t4258 * t3478
    t4233 = -t3475 * t4257 + t4261
    t3745 = t3478 * t3800
    t4336 = -t3478 * t3362 + t3745
    t2721 = t3750 + t4233 - t4336
    t4023 = 2 * t2721
    t2713 = t4090 * t4161 - t3568 + t3635
    t4102 = t2713 - t2714
    t4392 = (-2 * t2634 * t2655 + 2 * t2635 * t2654 + t2715 * t3962 + t4023 * t4102) * t3903 + (t2860 * t4448 + t2868 * t3960) * t3902
    t3771 = t3147 * t3474 + t3152 * t4197
    t4190 = t3151 * t3478
    t2938 = t3475 * t3771 + t4190
    t4058 = -t3474 * t3187 - t3403 * t3652
    t4030 = t3474 * t4220
    t3979 = t4030 / 2
    t3898 = t3475 * t3979
    t3815 = t3472 * t3898
    t4268 = t3191 * t4210 + t3192 * t4212 + t3346 * t4211 - t3347 * t3977 + t3479 * t3815
    t4243 = -t3651 + t4268
    t2997 = t3189 * t4210 + t3190 * t4212 + t3344 * t4211
    t4269 = -t3345 * t3977 + t3476 * t3815 + t2997
    t2477 = t3399 * t4243 + t3403 * t4269 + t3474 * t4229 + t4058
    t4133 = t3478 * t3479
    t3291 = t3359 * t4133
    t4000 = -t3224 * t4133 - t3652 * t4151 + t3291
    t2484 = t4000 + t4269 * t4151 + t4091 * t4133 - t4243 * t4152 + (-t4261 + t4336) * t3476
    t4029 = t3475 * t4220
    t3452 = t3473 * t4029
    t3360 = -t3809 * t4220 + t3452
    t4051 = -t3474 * t3285 - t3399 * t3360
    t4081 = t3478 * t3472 * t3979 + t3266 * t4210 + t3267 * t4212 + t3401 * t4211 + t3402 * t3977
    t4244 = t3652 - t4269
    t2547 = -t3399 * t4081 + t3474 * t4267 + t4160 * t4245 + t4161 * t4244 + t4051
    t3596 = -t3403 * t3360 - t3651 * t4161 + (t3288 - t3745) * t3474
    t2548 = -t3403 * t4081 + t3474 * t4233 + t4161 * t4268 + t3596
    t3312 = t3475 * t3359
    t3736 = -t3475 * t3478 * t3891 + t3312
    t3315 = t3476 * t3360
    t4242 = t3475 * t3315 - t3478 * t3652 - t3206
    t2553 = t3736 + t4081 * t4152 + (t4244 + t4395) * t3478 + t4242 + t4393
    t3320 = t3479 * t3360
    t3969 = (-t3362 + t3436) * t3475
    t3553 = -t3320 * t3475 + t3746 + t3969
    t2554 = t3553 - t4081 * t4151 + (-t4257 + t4268) * t3478 - t4260
    t3097 = -t3344 * t4213 - t3345 * t4215 + t3476 * t3971
    t3098 = -t3346 * t4213 - t3347 * t4215 + t3479 * t3971
    t4047 = -t3651 + t3098
    t4127 = t3479 * t3035
    t2686 = t3403 * t3097 + t4047 * t3399 + (t3476 * t3727 + t4127) * t4161 + t4058
    t2689 = (t3097 * t3475 + t4430) * t3479 + (-t3475 * t4047 + t4292) * t3476 + t4000
    t3142 = -t3401 * t4213 + t3402 * t4215 + t3478 * t4018
    t4068 = -t3097 + t3652
    t2738 = -t3399 * t3142 + (t4053 * t3478 + (t3648 + t4068) * t3475) * t3474 + t4051
    t2739 = t3098 * t4161 - t3403 * t3142 - t3474 * t3636 + t3999 * t4160 + t3596
    t2742 = t3312 + (t3476 * t3142 + t3035) * t3475 + (((-t3973 + t4018) * t3475 - t3790) * t3476 + t4068) * t3478 + t4242
    t2743 = -t3142 * t4151 + t3553 - t3897 + (t3098 - t3647) * t3478
    t2813 = (t3476 * t3670 + t4127) * t3475 + t4057
    t4390 = -t4367 * t3918 + t4368 * t3924 - (t2477 * t2655 + t2484 * t2635 + t2547 * t2719 + t2548 * t2721 + t2553 * t2714 - t2554 * t2715) * t4305 - (t2686 * t2813 + t2689 * t2823 + t2738 * t2858 + t2739 * t2860 + t2742 * t2867 - t2743 * t2868) * t4306
    t4032 = t3262 * t4220
    t3186 = t4032 * t4151
    t4332 = -t3472 * t4210 + t3477 * t4212
    t3012 = t3744 * t4332 - t3886 * t4211
    t3978 = -t4027 / 2
    t3813 = -t3744 * t3978 + t3012
    t3761 = t3225 + t3813
    t3011 = -t3262 * t4332 - t3263 * t4211
    t3814 = t3262 * t3978 + t3011
    t2763 = -t3186 + (-t3476 * t3761 + t3479 * t3814) * t3475
    t3762 = t4032 - t3814
    t2777 = t3476 * t3762 - t3479 * t3761
    t3429 = t3473 * t3893
    t3889 = t3478 * t3972
    t3357 = t3429 - t3889
    t3313 = t3476 * t3357
    t3284 = t3475 * t3313
    t3084 = t3397 * t4332 + t3398 * t4211
    t3812 = t3397 * t3977 + t3084
    t3754 = t3812 * t3476
    t2818 = t3475 * t3754 + t3478 * t3762 + t3284
    t3208 = t3478 * t3225
    t3760 = -t3357 - t3812
    t2819 = t3478 * t3813 + t3760 * t4151 + t3208
    t3067 = t3744 * t4215 + t3886 * t4213
    t3025 = t3067 + t3225
    t3066 = -t3262 * t4215 + t3263 * t4213
    t2876 = -t3186 + (-t3025 * t3476 + t3066 * t3479) * t3475
    t4331 = t4032 - t3066
    t2882 = -t3025 * t3479 + t3476 * t4331
    t3193 = t3397 * t4215 - t3398 * t4213
    t2911 = t3193 * t4152 + t3478 * t4331 + t3284
    t4056 = -t3193 - t3357
    t2912 = t3067 * t3478 + t4056 * t4151 + t3208
    t2965 = t3313 + t3754
    t3318 = t3479 * t3357
    t2966 = t3479 * t3812 + t3318
    t3063 = t3193 * t3476 + t3313
    t3064 = t3193 * t3479 + t3318
    t3907 = 0.2500000000e0 * t3478
    t2323 = t3479 * t2531 - t3476 * t2532
    t4272 = t3479 * t2722 - t3476 * t2723 + t2323
    t4389 = t4364 * t3905 - t4363 * t3909 + (t2655 * t2777 + t2656 * t2763 + t2719 * t2966 + t2721 * t2965 + t2818 * t2929 - t2819 * t2927) * t4305 + (t2813 * t2882 + t2816 * t2876 + t2858 * t3064 + t2860 * t3063 + t2911 * t3028 - t2912 * t3026) * t4306 + t4272 * t3907
    t4384 = t4196 + 1
    t4375 = t3262 * t4254
    t3516 = J2[4]
    t3518 = J2[2]
    t4128 = t3478 * t3518
    t3515 = J2[5]
    t4143 = t3475 * t3515
    t3867 = t4128 + t4143
    t3333 = t3476 * t3867 + t3479 * t3516
    t3519 = J2[1]
    t3520 = J2[0]
    t4142 = t3475 * t3518
    t3864 = t3478 * t3520 + t4142
    t3335 = t3476 * t3864 + t3479 * t3519
    t4374 = t3476 * (t3333 * t3475 + t3335 * t3478)
    t3488 = rS2[0]
    t3486 = rS2[2]
    t4150 = t3475 * t3486
    t3868 = t3478 * t3488 + t4150
    t4373 = t3479 * t3868
    t2461 = -t2684 * t3479 - t2685 * t3476
    t2630 = t3479 * t2833 - t2835 * t3476
    t4270 = t2461 + t2630
    t2113 = t3262 * t2478 - t2480 * t3744 - t3397 * t2602 + t2639 * t3886 + t2759 * t3398 - t3263 * t4108
    t2114 = t3262 * t2479 - t2481 * t3744 - t3397 * t2603 + t3263 * t2638 + t2640 * t3886 - t3398 * t2760
    t2495 = -t3011 * t3744 - t3262 * t3012 - t3263 * t4258 + t3886 * t4091
    t2577 = t3397 * t3011 + t3262 * t3084 + t3263 * t4254 + t3398 * t4091
    t2578 = -t3397 * t3012 + t3084 * t3744 - t3398 * t4258 - t3886 * t4254
    t2669 = -t3262 * t4258 - t3744 * t4091
    t2733 = t3397 * t4091 + t4375
    t2735 = t3397 * t4258 - t3744 * t4254
    t3731 = 0.2500000000e0 * t3886
    t3926 = 0.2500000000e0 * t3398
    t3928 = 0.2500000000e0 * t3397
    t3934 = 0.2500000000e0 * t3744
    t3938 = 0.2500000000e0 * t3263
    t4313 = 0.2500000000e0 * t3262
    t3724 = (t2495 * t2656 + t2577 * t2929 - t2578 * t2927 + t2669 * t2777 + t2733 * t2966 - t2735 * t2965) * t4305 + t2113 * t3905 - t2114 * t3909 + t2305 * t4313 - t2306 * t3934 - t2323 * t3928 - t2179 * t3938 + t4461 * t3731 - t2461 * t3926
    t2534 = -t2987 * t3262 - t3126 * t4088 - t3127 * t4089
    t2536 = -t2990 * t3262 - t3126 * t4086 - t3127 * t4087
    t2237 = -t2534 * t3399 + t2536 * t3403 + t2619 * t4161
    t2535 = t2987 * t3744 + t3721 * t4089 + t3722 * t4088
    t2537 = t2990 * t3744 + t3721 * t4087 + t3722 * t4086
    t2238 = -t2535 * t3399 + t2537 * t3403 + t2620 * t4161
    t2324 = t2534 * t3479 - t2536 * t3476
    t2325 = t2535 * t3479 - t2537 * t3476
    t2374 = t3479 * t2563 - t3476 * t2564
    t2924 = -t3721 * t4210 + t3722 * t4212 - t4220 * t3773 / 2 + t3403 * t3977
    t2984 = -t3126 * t4212 + t3127 * t4210
    t4082 = t3263 * t3981 + t3399 * t3978 + t2984
    t2745 = t2924 * t3399 + t3403 * t4082
    t2783 = -t2924 * t3479 - t3476 * t4082
    t4074 = t3260 * t4212 - t3261 * t4210 + t3398 * t3980 + t3477 * t3898
    t2810 = -t3399 * t4074 - t4082 * t4161
    t2811 = t2924 * t4161 - t3403 * t4074
    t2999 = t4074 * t3476
    t3000 = t4074 * t3479
    t3911 = 0.2500000000e0 * t3475
    t3825 = t3474 * t3911
    t3795 = (t2635 * t2783 + t2656 * t2745 + t2714 * t3000 - t2715 * t2999 + t2810 * t2929 - t2811 * t2927) * t4305 + t2237 * t3905 - t2238 * t3909 - t2324 * t3924 + t2325 * t3918 + t2374 * t3825
    t4337 = t3724 - t3795
    t3194 = -t3399 * t4217 - t3400 * t4216
    t4335 = t3799 - t3194
    t4334 = -t3475 * t3964 - t4132
    t4320 = -t4352 - t4403
    t4319 = -t4351 - t4402
    t4318 = -t4350 - t4401
    t4317 = t4347 - t4400
    t4316 = -t4346 + t4399
    t4315 = t4341 + t4397
    t4314 = t4340 + t4396
    t4312 = 0.5000000000e0 * t3262
    t4311 = 0.5000000000e0 * t3474
    t3906 = 0.5000000000e0 * t3478
    t3933 = 0.5000000000e0 * t3744
    t3387 = (t3474 * t3513 + t3510 * t4197) * t3475
    t4264 = t3330 - (t3474 * t3514 + t3987) * t3475
    t2925 = -t3387 * t4152 - t3399 * t4044 - t3400 * t4264
    t4310 = t2925 - t4319
    t2926 = -t3387 * t4151 + t3403 * t4044 - t3404 * t4264
    t4309 = t2926 + t4318
    t2840 = t3197 * t4161 + t3397 * t4063 - t3398 * t4064
    t4302 = t2840 * t3906
    t3943 = 0.5000000000e0 * t3146
    t3944 = 0.5000000000e0 * t3045
    t3945 = 0.5000000000e0 * t3043
    t4300 = t3397 * (t3472 * t3945 - t3477 * t3944 - t3943 - 0.5000000000e0 * t3088 + 0.5000000000e0 * t3196)
    t3678 = 0.5000000000e0 * t3044 - 0.5000000000e0 * t3144
    t4299 = t3398 * (-0.5000000000e0 * t3198 + t3678)
    t2388 = -t2684 * t3262 - t2685 * t3744 - t2802 * t3397
    t3824 = t3474 * t3910
    t3917 = 0.5000000000e0 * t3403
    t3923 = 0.5000000000e0 * t3399
    t4298 = t3473 * (t2133 * t3923 + t2388 * t3824 + t3917 * t4460)
    t4297 = t3473 * t3678
    t4296 = (t3154 + t3336) * t4311
    t4295 = (t3145 + t3330) * t4311
    t3681 = 0.2500000000e0 * t4341
    t3575 = t3681 + 0.2500000000e0 * t4397
    t4294 = t3476 * t3575
    t4293 = t3476 * t3701
    t3143 = t3403 * t4216 + t3404 * t4217 - t3461 * t3479
    t4065 = t3143 + t3362
    t4291 = t3478 * t4065
    t3680 = 0.2500000000e0 * t4340
    t3574 = t3680 + 0.2500000000e0 * t4396
    t4290 = t3479 * t3574
    t4289 = t3479 * t3699
    t4287 = t4345 * t3906
    t3963 = 2 * t4102
    t4283 = -(-t2634 * t4208 + t2635 * t4207 - t2927 * t3963) * t3903 + t4447 * t4448
    t3672 = -t4126 + (-t3988 - t3478 - 1) * t3476
    t3623 = -t3997 + t3672
    t2848 = t3432 + (t3623 - t3797) * t4220 - t2946
    t3787 = t3439 + t4140
    t3457 = t3478 * t3463
    t4033 = t3457 + t3463
    t3958 = -t3356 - t3436 - t4033
    t2849 = (-t3664 + t3787) * t4220 - t3562 + t3958
    t3737 = t3894 + t4016
    t2897 = (t4179 / 2 + (t4134 + (-t3474 * t3472 / 2 + t3737) * t3475) * t3476) * t4220 - t2997
    t4235 = t3475 * t3737 + t4134
    t3604 = t4235 * t3463
    t2898 = -t3604 + t4268
    t2942 = t3623 * t4220 - t3035 + t3432
    t2943 = t3787 * t4220 + t3958 - t3999
    t3007 = t4028 * t4235 - t3097
    t3008 = -t3604 + t3098
    t4281 = -(t2547 * t2848 - t2548 * t2849 + t2714 * t2897 - t2715 * t2898) * t4305 - (t2738 * t2942 - t2739 * t2943 + t2867 * t3007 - t2868 * t3008) * t4306
    t2887 = t3353 - t3456 + (t4005 + t3900 / 2 + t4169 / 2) * t4220 - t2976
    t4280 = -(t2575 * t2848 - t2576 * t2849 + t2714 * t2887 + t2715 * t3733) * t4305 - (t2790 * t2942 - t2791 * t2943 + t2867 * t4339 - t2868 * t3010) * t4306
    t2696 = t3069 * t3397 + t3260 * t4079 + t3261 * t4080
    t2923 = (t4184 / 2 + t4174 / 2) * t4220 - t2984
    t4279 = (t2714 * t2923 - t2715 * t2924 + t2810 * t2848 - t2811 * t2849) * t4305 + t2696 * t3824
    t2641 = t3044 * t3398 + t3087 * t3260 + t3089 * t3261 - t3397 * t3778
    t2633 = t2641 * t4161
    t2248 = -t3399 * t2531 + t3403 * t2532 + t2633
    t2839 = t2840 * t4161
    t4278 = -t3399 * t2722 + t3403 * t2723 + t2248 + t2839
    t2836 = t2999 * t3475 - t3478 * t4082
    t2837 = t2924 * t3478 - t4074 * t4151
    t4277 = -(t2719 * t2923 + t2721 * t2924 + t2836 * t2848 - t2837 * t2849) * t4305 - t2696 * t3906
    t2297 = t2472 * t3479 - t2474 * t3476
    t4275 = -t2650 * t3479 + t2652 * t3476 - t2297
    t2298 = t2473 * t3479 - t2475 * t3476
    t4274 = t2651 * t3479 - t2653 * t3476 + t2298
    t2310 = t3479 * t2514 - t3476 * t2515
    t4273 = t3479 * t2681 - t3476 * t2682 + t2310
    t2921 = t4032 * t4424 - t3011
    t2922 = t3225 * t4424 + t3012
    t4271 = -(t2848 * t2966 - t2849 * t2965 + t2921 * t2929 - t2922 * t2927) * t4305 - (t2942 * t3064 - t2943 * t3063 - t3025 * t3026 + t3028 * t4331) * t4306
    t4266 = t3399 * t3514 + t3147 + t3383
    t4265 = -t3403 * t3514 + t3156 + t4165
    t4141 = t3475 * t3520
    t4043 = -t3476 * t3516 + (2 * t4128 - t4141 + t4143) * t3479
    t4255 = t4254 * t3473
    t2579 = t3262 * t4069 + t3397 * t4084 - t3399 * t4255 - t3473 * t4250
    t2580 = -t3397 * t4083 - t3403 * t4255 + t3473 * t4262 + t3744 * t4069
    t2649 = t3043 * t3342 - t3044 * t4015 + t3045 * t3343 + t3099 * t3260 + t3100 * t3397 + t3101 * t3261
    t3927 = 0.5000000000e0 * t3397
    t4253 = t2649 * t3927 - (t2579 * t2848 - t2580 * t2849 + t2733 * t2887 + t2735 * t3733) * t4305
    t3970 = t3475 * t4019
    t4038 = t4334 * t3476
    t3249 = t3476 * t3970 + t4038
    t4035 = t3478 * t4019 + t3461
    t3322 = -t3478 * t3964 + t4035
    t2902 = t3475 * t3140 + t3322 * t4152 + t3736 + (-t3249 - t3625) * t3478
    t3427 = t3479 * t3970
    t3250 = t3479 * t4334 + t3427
    t3624 = t3479 * t3640
    t2903 = -t3475 * t3143 - t3322 * t4151 + t3969 + (t3250 + t3624) * t3478
    t2975 = t3475 * t3624 + t3803 + t4291
    t3059 = -t4033 - t4065
    t3131 = (-t3895 + t4019) * t4152 + t4038
    t3720 = -t3964 - t3895
    t3132 = t3427 + (t3475 * t3720 - t4132) * t3479
    t3646 = t3672 * t4220
    t4241 = t3646 - t3140
    t4248 = -(t2553 * t2848 - t2554 * t2849 + t2719 * t2897 + t2721 * t2898) * t4305 - (t2742 * t2942 - t2743 * t2943 + t2858 * t3007 + t2860 * t3008) * t4306 - (t2902 * t4241 - t2903 * t3059 - t2973 * t3131 + t2975 * t3132) * t4307
    t3254 = t3330 * t3476
    t3658 = t3475 * t3766 - t4129
    t3256 = t3658 * t3476
    t3742 = -t3331 * t3476 + t3771
    t3643 = t3475 * t3742 + t4190
    t2828 = -t3254 * t3399 + t3256 * t3400 + t3476 * t3643
    t3257 = t3330 * t3479
    t3259 = t3658 * t3479
    t3770 = t3156 * t3474 - t3158 * t4197
    t3741 = -t3331 * t3479 + t3770
    t4188 = t3157 * t3478
    t3642 = t3475 * t3741 - t4188
    t2830 = -t3257 * t3399 + t3259 * t3400 + t3476 * t3642
    t4247 = t2828 * t3479 - t2830 * t3476 - t4275
    t2829 = t3254 * t3403 + t3256 * t3404 + t3479 * t3643
    t2831 = t3257 * t3403 + t3259 * t3404 + t3479 * t3642
    t4246 = t2829 * t3479 - t2831 * t3476 + t4274
    t2565 = t3262 * t4081 - t3344 * t4254 + t3397 * t4269 + t3401 * t4091
    t2566 = t3346 * t4254 - t3397 * t4268 - t3401 * t4258 + t3744 * t4081
    t3919 = 0.5000000000e0 * t3401
    t4239 = t2802 * t3919 + t2610 * t3927 - (t2565 * t2848 - t2566 * t2849 + t2733 * t2897 - t2735 * t2898) * t4305
    t3925 = 0.5000000000e0 * t3398
    t4238 = t2802 * t3925 + t2641 * t3927 - (t2577 * t2848 - t2578 * t2849 + t2733 * t2921 - t2735 * t2922) * t4305
    t3487 = rS2[1]
    t4236 = t3476 * t3487 - t4373
    t2734 = -t3397 * t4090 + t4375
    t4100 = t2733 - t2734
    t3961 = 2 * t4100
    t4205 = 2 * t2669
    t2668 = t4394 * t3262
    t4206 = 2 * t2668
    t4234 = (t2656 * t4206 + t2659 * t4205 + t2927 * t3961) * t3903
    t2245 = t2619 * t3478 + (t2534 * t3476 + t2536 * t3479) * t3475
    t2246 = t2620 * t3478 + (t2535 * t3476 + t2537 * t3479) * t3475
    t2768 = (-t2924 * t3476 + t3479 * t4082) * t3475
    t4232 = t2246 * t3909 - (t2655 * t2783 + t2656 * t2768 + t2719 * t3000 + t2721 * t2999 + t2836 * t2929 - t2837 * t2927) * t4305 - t2245 * t3905 - t2374 * t3907
    t2286 = -t3399 * t2563 + t3403 * t2564 + t2696 * t4161
    t4231 = t2245 * t3924 - (t2635 * t2768 + t2655 * t2745 + t2714 * t2836 - t2715 * t2837 + t2719 * t2810 + t2721 * t2811) * t4305 - t2246 * t3918 - t2286 * t3907
    t3921 = 0.5000000000e0 * t3400
    t3915 = 0.5000000000e0 * t3404
    t3912 = 0.2500000000e0 * t3474
    t3908 = 0.5000000000e0 * t3476
    t3904 = 0.5000000000e0 * t3479
    t4228 = (t2654 * t4205 + t2655 * t4206 + t2735 * t3962 - t4023 * t4100) * t3903
    t4227 = (-t2634 * t4205 + t2635 * t4206 + t2715 * t3961 - t2735 * t3963) * t3903
    t2093 = t2360 * t3473 + t2463 * t3262 - t2465 * t3744 - t2597 * t3397
    t2094 = t2464 * t3262 - t2466 * t3744 - t2598 * t3397 + t3473 * t4462
    t2490 = -t3262 * t4083 + t3473 * t4259 - t3744 * t4084 + t4091 * t4167
    t4226 = t2311 * t3928 + t2094 * t3909 - (t2490 * t2656 + t2579 * t2929 - t2580 * t2927 + t2669 * t2725 + t2733 * t2962 - t2735 * t2961) * t4305 - t2093 * t3905 - t2291 * t4313 + t2292 * t3934
    t2503 = -t3262 * t4268 + t3344 * t4258 - t3346 * t4091 - t3744 * t4269
    t3920 = 0.2500000000e0 * t3401
    t3930 = 0.2500000000e0 * t3346
    t3932 = 0.2500000000e0 * t3344
    t4225 = t2400 * t3920 + t4466 * t3930 - t2161 * t3932 + t2159 * t3928 - (t2484 * t2669 + t2503 * t2655 + t2553 * t2733 - t2554 * t2735 + t2565 * t2719 + t2566 * t2721) * t4305 - t2117 * t4313 + t2118 * t3934
    t2166 = t3262 * t2531 - t2532 * t3744 - t3397 * t2641 - t2684 * t3263 + t2685 * t3886 - t3398 * t2802
    t2251 = t3478 * t2641 + (t3476 * t2531 + t3479 * t2532) * t3475
    t4224 = t2400 * t3926 + t2251 * t3928 - (t2495 * t2655 + t2577 * t2719 + t2578 * t2721 + t2669 * t2763 + t2733 * t2818 - t2735 * t2819) * t4305 - t2166 * t3907 - t2209 * t4313 + t2210 * t3934 + t2161 * t3938
    t2168 = -t3399 * t2516 + t3403 * t2517 + t3400 * t2684 - t3404 * t2685 + (t2649 * t3474 + t2802 * t4197) * t3475
    t4223 = t4460 * t3916 - t2133 * t3922 + t2168 * t3928 + t2093 * t3924 - (t2483 * t2669 + t2490 * t2635 + t2575 * t2733 - t2576 * t2735 + t2579 * t2714 - t2580 * t2715) * t4305 - t2094 * t3918 - t2103 * t4313 + t2104 * t3934
    t2087 = t2472 * t3262 - t2474 * t3744 - t2573 * t3397 - t2639 * t3346 + t2759 * t3401 + t3344 * t4108
    t2088 = t2473 * t3262 - t2475 * t3744 - t2574 * t3397 - t2638 * t3344 - t2640 * t3346 - t2760 * t3401
    t4222 = t2393 * t3920 + t4462 * t3930 + t2360 * t3932 + t2149 * t3928 + t2087 * t3924 - (t2477 * t2669 + t2503 * t2635 + t2547 * t2733 - t2548 * t2735 + t2565 * t2714 - t2566 * t2715) * t4305 - t2088 * t3918 - t2109 * t4313 + t2110 * t3934
    t3341 = -t3476 * t3519 + t3479 * t3864
    t3417 = t3478 * t3515 - t4142
    t3389 = t3417 * t3476
    t3418 = t4128 - t4141
    t3391 = t3418 * t3476
    t3392 = t3417 * t3479
    t4221 = (t3476 * (t3341 - t3392) + (-t3335 + t3389) * t3479) * t3475 + (-t3476 * t4043 + (t3333 + t3391) * t3479) * t3478
    t4209 = 4 * t2635
    t4200 = Ap * rp
    t4198 = pi / qd_c
    t3865 = t3475 * t3516 + t3478 * t3519
    t3334 = t3476 * t3865 + t3479 * J2[3]
    t4180 = t3334 * t3476
    t4173 = t3399 * t3493
    t4166 = t3403 * t3493
    t4149 = t3475 * t3488
    t4148 = t3475 * t3494
    t4147 = t3475 * t3496
    t4138 = t3476 * t3495
    t4131 = t3478 * t3486
    t4130 = t3478 * t3494
    t4125 = t3479 * t3487
    t4124 = t3479 * t3495
    t4123 = t3492 * t3524
    t4122 = t3493 * t3524
    t4121 = t3493 * t3525
    t4120 = t3494 * t3524
    t4119 = t3494 * t3525
    t4118 = t3494 * t3526
    t4117 = t3495 * t3524
    t4116 = t3495 * t3525
    t4115 = t3495 * t3526
    t4114 = t3496 * t3524
    t4113 = t3496 * t3525
    t4112 = t3496 * t3526
    t4099 = t2905 + t4429
    t4097 = -t2907 - t4428
    t4061 = -t3400 * t3509 - t3152 - t3382
    t4059 = -t3404 * t3509 + t3158 + t3384
    t3195 = t3403 * t4217 - t3404 * t4216
    t4054 = -t3195 - t3361
    t4050 = t3333 * t4151 + t3335 * t4133
    t3289 = t3799 * t4151
    t4048 = -t3399 * t3802 - t3289
    t3317 = t3478 * t3361
    t4046 = t3403 * t3889 + t3317
    t3431 = t3469 * t3984
    t4041 = t4384 * t3431
    t3453 = t3474 * t4029
    t4037 = t3428 + t3453
    t4036 = -t3436 - t3457
    t3385 = t4216 * t3994 + t4217 * t4161
    t4034 = t4338 * t4029
    t3529 = g[2]
    t4025 = t3529 * t4220
    t4024 = t3488 + t4220
    t3998 = t3320 + t4036
    t3985 = t3469 * t4030
    t3605 = t3646 + t3224
    t2850 = t3605 + t4090
    t3968 = t2848 - 0.1000000000e1 * t2850
    t2944 = t3605 - t3035
    t3967 = t2942 - 0.1000000000e1 * t2944
    t3965 = t4024 * t3475
    t3957 = t3893 * t4338 + t4034
    t2852 = t3742 * t3478 + (t3254 * t3474 - t3256 * t4197 - t3151) * t3475
    t3950 = 0.5000000000e0 * t2852
    t2853 = t3741 * t3478 + (t3257 * t3474 - t3259 * t4197 + t3157) * t3475
    t3949 = 0.5000000000e0 * t2853
    t3200 = -t3399 * t3513 - t3400 * t3510
    t2863 = -t3200 * t3478 + (t3474 * t4061 + t4197 * t4266) * t3475
    t3948 = 0.5000000000e0 * t2863
    t3203 = t3403 * t3513 - t3404 * t3510
    t2864 = -t3203 * t3478 + (t3474 * t4059 + t4197 * t4265) * t3475
    t3947 = 0.5000000000e0 * t2864
    t3942 = 0.5000000000e0 * t3260
    t3941 = 0.5000000000e0 * t3261
    t3937 = 0.5000000000e0 * t3263
    t3931 = 0.5000000000e0 * t3344
    t3929 = 0.5000000000e0 * t3346
    t3914 = 0.2500000000e0 * t3473
    t3913 = 0.5000000000e0 * t3473
    t2387 = (t2848 * t3000 - t2849 * t2999 + t2923 * t2929 - t2924 * t2927) * t4305
    t3885 = t3905 * t4344 - t3909 * t4343 + t2387
    t3875 = t2906 * t3476 + t2908 * t3479
    t2940 = t3475 * t3770 - t4188
    t3874 = t3476 * t2938 + t3479 * t2940
    t3866 = -t3475 * t3519 + t3478 * t3516
    t2290 = t3478 * t2696 + (t3476 * t2563 + t3479 * t2564) * t3475
    t3851 = t2290 * t3906
    t3833 = t3069 * t3927
    t3828 = t3399 * t3914
    t3826 = t3403 * t3914
    t3823 = t3474 * t3907
    t3821 = t2802 * t3910
    t3820 = t3475 * t3909
    t3819 = t3475 * t3905
    t3818 = t3476 * t3907
    t3817 = t3478 * t3905
    t2247 = (t2719 * t2921 + t2721 * t2922 + t2818 * t2848 - t2819 * t2849) * t4305
    t2378 = (t2848 * t2962 - t2849 * t2961 + t2887 * t2929 + t2927 * t3733) * t4305
    t2406 = (t2858 * t4331 + t2860 * t3025 + t2911 * t2942 - t2912 * t2943) * t4306
    t2542 = (t2942 * t3109 - t2943 * t3108 - t3010 * t3026 + t3028 * t4339) * t4306
    t3161 = -t3624 + t3671
    t3226 = t3385 * t3476 + t3433
    t3227 = t3385 * t3479 + t3435
    t2724 = (-t3059 * t3226 + t3159 * t4054 + t3161 * t4335 + t3227 * t4241) * t4307
    t3816 = t3996 - 0.1e1 * t3439
    t3811 = 0.2500000000e0 * t4197
    t3810 = 0.5000000000e0 * t4197
    t3805 = t3478 * t3895
    t3794 = t2324 * t3820 + t2325 * t3819 - t4232
    t3793 = t3918 * t4343 - t3924 * t4344 + t4279
    t3792 = t3819 * t4343 + t3820 * t4344 - t4277
    t3777 = t3473 * t3825
    t3776 = t3474 * t3820
    t3775 = t3474 * t3819
    t3774 = t3474 * t3821
    t3759 = t3475 * t3811
    t3758 = t2802 * t3810
    t3757 = t2904 * t3810
    t3755 = t4384 * t3985
    t3753 = -t3478 * t4024 - t4150
    t3747 = t2237 * t3820 + t2238 * t3819 + t2290 * t3825 - t4231
    t3730 = 0.2500000000e0 * t3816
    t3729 = 0.5000000000e0 * t3816
    t3725 = t2179 * t3828 + t2461 * t3777 + t3826 * t4461 - t4226
    t3719 = 0.5000000000e0 * t4370
    t3718 = 0.5000000000e0 * t4369
    t3717 = 0.5000000000e0 * t4422
    t3716 = 0.5000000000e0 * t4412
    t3712 = 0.5000000000e0 * t4419
    t2827 = -t3251 * t3397 - t3253 * t3398 + (t3145 * t4197 + t3474 * t3743) * t3475
    t3711 = 0.5000000000e0 * t2168 - t2694 * t3923 + t2695 * t3917 - t2833 * t3921 - t2835 * t3915 + (t2827 * t3474 + t2904 * t4197) * t3910
    t3710 = 0.5000000000e0 * t4413
    t2206 = -t2479 * t3399 + t2481 * t3403 + t2603 * t4161
    t2398 = -t2698 * t3399 + t2700 * t3403 + t2795 * t4161
    t3709 = 0.5000000000e0 * t2206 + 0.5000000000e0 * t2398
    t3708 = 0.5000000000e0 * t4364
    t3707 = 0.5000000000e0 * t4363
    t2648 = t3478 * t2649
    t2241 = t2648 + (t3476 * t2516 + t3479 * t2517) * t3475
    t2826 = t3478 * t2827
    t3706 = (t3476 * t2694 + t3479 * t2695) * t3910 + 0.5000000000e0 * t2241 + 0.5000000000e0 * t2826
    t3705 = 0.5000000000e0 * t2251 + t4302 + (t3476 * t2722 + t3479 * t2723) * t3910
    t3704 = 0.5000000000e0 * t4411
    t3703 = 0.5000000000e0 * t4410
    t3694 = 0.5000000000e0 * t4414
    t3692 = 0.5000000000e0 * t4465
    t3690 = 0.2500000000e0 * t4353
    t3689 = 0.2500000000e0 * t4352
    t3688 = 0.2500000000e0 * t4351
    t3687 = 0.2500000000e0 * t4350
    t3686 = 0.2500000000e0 * t4347
    t3685 = 0.2500000000e0 * t4346
    t3684 = 0.2500000000e0 * t4344
    t3683 = 0.2500000000e0 * t4343
    t3682 = 0.5000000000e0 * t4342
    t3679 = 0.5000000000e0 * t4398
    t3669 = t2113 * t3820 + t2114 * t3819 + t3731 * t4466 - t4224
    t3667 = t3905 * t4317 - t3909 * t4316 - t4271
    t3655 = -t3930 * t4340 - t3932 * t4341 + t3934 * t4352 + t4313 * t4353 - t4239
    t3654 = t3473 * t3774 + t3826 * t4340 - t3828 * t4341 + t3934 * t4350 + t4313 * t4351 - t4253
    t3653 = t3731 * t4340 + t3934 * t4346 + t3938 * t4341 + t4313 * t4347 - t4238
    t3649 = t2324 * t3904 - t2325 * t3908
    t3644 = t3737 * t3478 * t4025
    t3638 = t3819 * t4410 + t3820 * t4411 + t4389
    t3637 = t2641 * t3906 + t3819 * t4316 + t3820 * t4317 + t2247 + t2406 + t4302
    t2134 = t3262 * t2514 - t2515 * t3744 - t3397 * t2610 + t2684 * t3344 - t3346 * t2685 - t3401 * t2802
    t3628 = -t2133 * t3776 + t2134 * t3825 + t2388 * t3823 + t3775 * t4460 - t4222
    t3627 = t2087 * t3820 + t2088 * t3819 - t2133 * t3818 + t2134 * t3907 - t2388 * t3911 + t3817 * t4460 - t4225
    t2163 = t2393 * t3473 + t3262 * t2516 - t2517 * t3744 - t3397 * t2649
    t3626 = t2163 * t3825 - t2360 * t3828 + t2388 * t3759 + t2393 * t3777 + t3826 * t4462 - t4223
    t3622 = t4345 * t3810
    t3621 = (t2895 + t3876) * t3906 + (t2828 * t3476 + t2830 * t3479 + t2995) * t3910 + 0.5000000000e0 * t4368
    t2896 = t3336 * t3403 + t3338 * t3404 + t3479 * t3641
    t2996 = t3330 * t3403 - t3331 * t4151 + t3332 * t3404
    t3620 = (t2896 + t3875) * t3906 + (t2829 * t3476 + t2831 * t3479 - 0.1e1 * t2996) * t3910 + 0.5000000000e0 * t4367
    t2931 = t3740 * t3478 + (t3336 * t3474 - t3338 * t4197 + t3331) * t3475
    t3038 = t3475 * t3769 - t4181
    t3619 = (t2931 + t3874) * t3906 + (t3476 * t2852 + t3479 * t2853 - 0.1e1 * t3038) * t3910 + 0.5000000000e0 * t4418
    t2200 = t2597 * t3478 + (t2463 * t3476 + t2465 * t3479) * t3475
    t2375 = t2772 * t3478 + (t2642 * t3476 + t2644 * t3479) * t3475
    t2841 = -t3200 * t4152 - t3399 * t4061 - t3400 * t4266
    t2843 = -t3203 * t4152 - t3399 * t4059 - t3400 * t4265
    t3618 = t2925 * t3906 + (t2841 * t3476 + t2843 * t3479) * t3910 + 0.5000000000e0 * t2200 + 0.5000000000e0 * t2375
    t2201 = t2598 * t3478 + (t2464 * t3476 + t2466 * t3479) * t3475
    t2376 = t2773 * t3478 + (t2643 * t3476 + t2645 * t3479) * t3475
    t2842 = -t3200 * t4151 + t3403 * t4061 - t3404 * t4266
    t2844 = -t3203 * t4151 + t3403 * t4059 - t3404 * t4265
    t3617 = -0.1e1 * t2926 * t3906 - 0.1e1 * (t2842 * t3476 + t2844 * t3479) * t3910 - 0.5000000000e0 * t2201 - 0.5000000000e0 * t2376
    t3616 = t2841 * t3904 - t2843 * t3908 + 0.5000000000e0 * t4362
    t3615 = t2842 * t3904 - t2844 * t3908 + 0.5000000000e0 * t4361
    t3614 = 0.5000000000e0 * t2705 + 0.5000000000e0 * t4349
    t2992 = t3478 * t2996
    t2706 = t3475 * t3875 + t2992
    t3613 = 0.5000000000e0 * t2706 + 0.5000000000e0 * t4470
    t3612 = -t3038 * t3906 - t3874 * t3910 - 0.5000000000e0 * t4358
    t2770 = t2905 * t3479 - t2907 * t3476
    t3611 = 0.5000000000e0 * t2770 - t3694
    t2771 = t2906 * t3479 - t2908 * t3476
    t3610 = 0.5000000000e0 * t2771 + t3692
    t3603 = t2378 + t2542 + t2724 + (-t2864 - t4309) * t3909 + (t2863 + t4310) * t3905
    t3602 = t2133 * t3909 - t4460 * t3905 - 0.2500000000e0 * t2134
    t3601 = t2093 * t4312 - t2094 * t3933 - t2163 * t3927
    t3600 = t2237 * t3923 - t2238 * t3917 - t2286 * t3824
    t3598 = t3087 * t3942 + t3089 * t3941 + t3197 * t3824
    t3597 = t4270 * t3759 + t3825 * t4405 + t3922 * t4414 - t4475
    t3595 = -t3708 + t3719
    t3594 = -t3707 + t3718
    t3593 = -t3704 + t3717
    t3592 = t3703 - t3716
    t3585 = -t3705 + t3711
    t3582 = t3690 + 0.2500000000e0 * t4404
    t3581 = t3689 + 0.2500000000e0 * t4403
    t3580 = t3688 + 0.2500000000e0 * t4402
    t3579 = t3687 + 0.2500000000e0 * t4401
    t3578 = -t3686 + 0.2500000000e0 * t4400
    t3577 = -t3685 + 0.2500000000e0 * t4399
    t3572 = (t3145 + t4264) * t3810
    t3571 = t3943 * t4196 + 0.5000000000e0 * t3252 + 0.5000000000e0 * t4044
    t3570 = t3332 * t3810 + 0.5000000000e0 * t3337 + 0.5000000000e0 * t3418 + 0.5000000000e0 * t3867
    t3569 = t3338 * t3810 - 0.5000000000e0 * t3331 + 0.5000000000e0 * t3417 - 0.5000000000e0 * t3864
    t3566 = t3474 * t3906 * t4398 + t4314 * t3775 + t4315 * t3776 + t4342 * t3824 + t4320 * t3918 + t4321 * t3924 - t4281
    t3565 = -t4280 + (t2649 + t2827) * t3824 + (t3757 + t3758) * t3475 + t4319 * t3924 - t4315 * t3922 + t4318 * t3918 - t4314 * t3916
    t3563 = t3775 * t4470 + t4349 * t3776 + t4359 * t3817 + t4360 * t3818 + t3819 * t4412 + t3820 * t4422 + t4358 * t3823 + t3825 * t4418 + t3907 * t4419 + t4345 * t3911 - t4390
    t3561 = -t3616 + t3621
    t3560 = t3615 - t3620
    t2417 = t2992 + (t3476 * t4097 + t3479 * t4099) * t3475
    t3559 = -t3613 + 0.5000000000e0 * t2417 + 0.5000000000e0 * t4470
    t3558 = t3614 + 0.5000000000e0 * t2418 - 0.5000000000e0 * t4349
    t3554 = t2113 * t4312 - t2114 * t3933 - t2133 * t3937 - t2166 * t3927 - t2388 * t3925
    t2448 = -t3476 * t4099 + t3479 * t4097
    t2449 = -t3476 * t4098 + t3479 * t4096
    t3550 = (t2417 - t2706) * t3905 + (-t2771 + t2448) * t3820 + (t2770 + t2449) * t3819 + t4476
    t3549 = -t3821 - t4248 + (-t3038 - t2904) * t3910 + (t2931 + t4342) * t3906 + (t2852 + t4441) * t3820 + (t2853 + t2896 + t4320) * t3819 + (t2938 - t2995 + t4315) * t3818 + (t2940 + t2996 + t4314) * t3817
    t3548 = t2087 * t4312 - t2088 * t3933 + t2133 * t3931 - t2134 * t3927 - t2388 * t3919 - t3929 * t4460
    t3547 = t3099 * t3942 + t3101 * t3941 - t3253 * t3925 + t3342 * t3945 + t3343 * t3944 - t3387 * t3906
    t3039 = t3334 * t3479 + t4374
    t3040 = t4050 - t4180
    t3546 = -0.1e1 * t3610 + (t4050 - 0.1e1 * t3040) * t3904 + (-0.1e1 * t3039 + t4374) * t3908 + 0.5000000000e0 * t2448 + 0.5000000000e0 * t4465
    t3545 = t3611 + (-0.1e1 * t3040 - 0.1e1 * t4180) * t3908 + t3039 * t3904 + 0.5000000000e0 * t2449 - 0.5000000000e0 * t3334 * t3471 + 0.5000000000e0 * t4414
    t3216 = -t4125 + (-t4220 + t3753) * t3476
    t3217 = t4033 - t4236
    t3446 = t3476 * t4131
    t3295 = t4024 * t4152 - t3446
    t3449 = t3479 * t4131
    t3296 = -t3479 * t3965 + t3449
    t3527 = m[1]
    t3543 = t3527 * (t3216 * t3295 + t3217 * t3296) + t3052 * t3942 + t3054 * t3941 - t3155 * t3925 + t3266 * t3945 + t3267 * t3944 + t3402 * t3943
    t3531 = g[0]
    t3530 = g[1]
    t3490 = rS1[0]
    t3489 = rS1[2]
    t3484 = delta_q[0]
    t3483 = delta_q[1]
    t3482 = delta_q[2]
    t3481 = delta_q[3]
    t3480 = delta_q[4]
    t3468 = absolute(t3484)
    t3467 = absolute(t3483)
    t3466 = absolute(t3482)
    t3465 = absolute(t3481)
    t3464 = absolute(t3480)
    t3393 = t3866 * t3479
    t3390 = t3866 * t3476
    t3311 = -t3457 - t4373
    t3310 = (-t3965 + t4131) * t3479
    t3309 = (-t3868 - t4026) * t3476
    t3308 = t3983 - t3476 * (t4131 - t4149)
    t3209 = t3399 * t3357
    t3182 = t3225 * t4161
    t3162 = t3322 * t3479 + t4036
    t3160 = (t3322 - t3805) * t3476
    t3135 = t3403 * t4032
    t3029 = t3142 * t3479 + t3998
    t3027 = t3315 + (t3142 - t3805) * t3476
    t3023 = t3195 * t3478 + t3317 + (-t3385 * t3475 - t3985) * t3479
    t3022 = t3385 * t4152 + t3478 * t4335 + t3431
    t2993 = -t3249 * t3476 - t3250 * t3479 + t3957
    t2959 = t3478 * (-t3387 * t3478 + (t3474 * t4044 + t4197 * t4264) * t3475)
    t2958 = t3476 * t4335 + t3479 * t4054
    t2957 = -t3289 + (t3194 * t3479 + t3476 * t4054) * t3475
    t2937 = t3290 + (t3140 * t3479 - t3476 * t4065) * t3475
    t2934 = t3476 * t4066 - t3479 * t4065 - t3887
    t2930 = t3479 * t4081 + t3998
    t2928 = t3315 + (-t3805 + t4081) * t3476
    t2910 = t3478 * t3086 + (-t3248 * t3475 - t3755) * t3479 + t4046
    t2909 = t3248 * t4152 + t3478 * t4339 + t4041
    t2886 = t3067 * t4161 + t3403 * t4056 + t3182
    t2885 = -t3193 * t3399 + t4161 * t4331 - t3209
    t2874 = t3476 * t4068 - t3479 * t4047 + t3957
    t2865 = t3291 + (t3249 * t3475 + t4423) * t3479 + (-t3250 * t3475 - t4291) * t3476
    t2855 = (-t3010 * t3476 + t3085 * t3479) * t3475 + t4048
    t2854 = -4 * t3059 * t3132 - 4 * t3131 * t4241
    t2851 = t3025 * t3399 + t3066 * t3403 - t3135
    t2845 = 4 * t3059 * t4054 + 4 * t4241 * t4335
    t2797 = t4083 * t3478 + (-t3475 * t4069 - t3755) * t3479 + t4046
    t2796 = t3475 * t3976 + t3478 * t3734 + t4041
    t2793 = t3403 * t3760 + t3813 * t4161 + t3182
    t2792 = -t3399 * t3812 + t3762 * t4161 - t3209
    t2775 = -t2924 * t3397 + t3744 * t4074
    t2774 = t3262 * t4074 + t3397 * t4082
    t2750 = t3476 * t4244 - t3479 * t4243 + t3957
    t2716 = t3399 * t3761 + t3403 * t3814 - t3135
    t2710 = 4 * t2934 * t2958 - 4 * t3159 * t3226 + 4 * t3161 * t3227
    t2709 = (t3476 * t3733 + t3479 * t4084) * t3475 + t4048
    t2707 = -t2924 * t3262 - t3744 * t4082
    t2702 = 4 * t2942 * t4331 - 4 * t2943 * t3025
    t2693 = 4 * t2942 * t4339 - 4 * t2943 * t3010
    t2691 = 4 * t2942 * t3007 - 4 * t2943 * t3008
    t2678 = t3397 * t2696
    t2560 = 4 * t2975 * t4085
    t2541 = 4 * t2816 * t2882 - 4 * t3026 * t3063 + 4 * t3028 * t3064
    t2540 = 4 * t2816 * t2871 - 4 * t3026 * t3108 + 4 * t3028 * t3109
    t2533 = 4 * t2848 * t2923 - 4 * t2849 * t2924
    t2530 = 4 * t2848 * t2921 - 4 * t2849 * t2922
    t2502 = 4 * t2848 * t2897 - 4 * t2849 * t2898
    t2489 = 4 * t2848 * t2887 + 4 * t2849 * t3733
    t2476 = 4 * t2865 * t2937 + 4 * t2902 * t2973 + 4 * t2903 * t2975
    t2403 = 4 * t2813 * t2876 + 4 * t2858 * t2911 + 4 * t2860 * t2912
    t2394 = t3833 + t2533 * t3903 + (0.5000000000e0 * t3070 - t3945) * t3261 + (0.5000000000e0 * t3068 + t3944) * t3260
    t2381 = 4 * t2656 * t2783 - 4 * t2927 * t2999 + 4 * t2929 * t3000
    t2380 = 4 * t2656 * t2777 - 4 * t2927 * t2965 + 4 * t2929 * t2966
    t2377 = -4 * t2868 * t4093
    t2367 = 4 * t2656 * t2725 - 4 * t2927 * t2961 + 4 * t2929 * t2962
    t2362 = 4 * t2860 * t4094
    t2319 = 4 * t2656 * t2659
    t2307 = 4 * t2708 * t2823 + 4 * t2790 * t2867 - 4 * t2791 * t2868
    t2282 = 4 * t2686 * t2823 + 4 * t2738 * t2867 - 4 * t2739 * t2868
    t2281 = t3262 * t2563 - t2564 * t3744 - t2678
    t2279 = 4 * t2689 * t2813 + 4 * t2742 * t2858 + 4 * t2743 * t2860
    t2242 = 4 * t2655 * t2768 + 4 * t2719 * t2836 + 4 * t2721 * t2837
    t2230 = 4 * t2655 * t2763 + 4 * t2719 * t2818 + 4 * t2721 * t2819
    t2229 = t2535 * t3262 - t2537 * t3744 - t2620 * t3397
    t2228 = t2534 * t3262 - t2536 * t3744 - t2619 * t3397
    t2213 = 4 * t2635 * t2745 + 4 * t2714 * t2810 - 4 * t2715 * t2811
    t2202 = 4 * t2668 * t2669 + 4 * t2735 * t4100
    t2196 = 4 * t2654 * t2655 - 4 * t2721 * t4101
    t2195 = -t2634 * t4209 - 4 * t2715 * t4102
    t2171 = 4 * t2490 * t2669 + 4 * t2579 * t2733 - 4 * t2580 * t2735
    t2170 = 4 * t2495 * t2669 + 4 * t2577 * t2733 - 4 * t2578 * t2735
    t2169 = 4 * t2503 * t2669 + 4 * t2565 * t2733 - 4 * t2566 * t2735
    t2145 = 4 * t2483 * t2635 + 4 * t2575 * t2714 - 4 * t2576 * t2715
    t2135 = 4 * t2484 * t2655 + 4 * t2553 * t2719 + 4 * t2554 * t2721
    t2121 = 4 * t2477 * t2635 + 4 * t2547 * t2714 - 4 * t2548 * t2715
    t2074 = t2381 * t3903 + t3649
    t2050 = t2242 * t3903 + t3851 + (t2245 * t3908 + t2246 * t3904) * t3475
    t2049 = t2213 * t3903 - t3600
    t2045 = t2170 * t3903 + 0.5000000000e0 * t3886 * t4460 + t3554
    t2044 = t2171 * t3903 + t3601 + t4298
    t2043 = t2169 * t3903 + t3548
    t2042 = t2319 * t3903 - t3476 * t3545 + t3479 * t3546
    t2041 = t2195 * t3903 + t2377 * t3902
    t2040 = t2196 * t3903 - t2362 * t3902 - t2560 * t3901 + (t3476 * t3559 + t3479 * t3558) * t3475
    t2039 = t2307 * t3902 + t2145 * t3903 - t3699 * t3404 + t3718 * t3403 - t3701 * t3400 - t3719 * t3399 + (t3474 * t3711 - t3622) * t3475
    t2036 = -t3262 * t3690 + t3344 * t3681 + t3346 * t3680 - t3689 * t3744 + t3885 + t4234 + t4239
    t2033 = -t3687 * t3744 + (t3399 * t3681 - t3403 * t3680 - t3774) * t3473 - t3688 * t3262 + t4228 + t3792 + t4253
    t2028 = -t3262 * t3686 - t3263 * t3681 - t3744 * t3685 - t3730 * t4340 + t3793 + t4227 + t4238
    t2023 = (t3476 * t3578 - 0.1e1 * t3479 * t3577) * t3475 + t3565 + t4392 - 0.1e1 * t2406 - 0.1e1 * t2247 + (-0.1e1 * t2641 - 0.1e1 * t2840) * t3906
    t2017 = (-t2324 * t3909 - t2325 * t3905) * t3475 + t3725 + t3627 + t4232
    t2014 = t3628 + t4337
    t2011 = (-t2113 * t3909 - t2114 * t3905) * t3475 + t3747 - t4466 * t3730 + t3626 + t4224
    t2010 = (-t2237 * t3909 - t2238 * t3905 - t2290 * t3912) * t3475 + t3669 + t3626 + t4231
    impl_dyn[4, 0] = (p[8] - 0.1e1 * p[9]) * t4200 - 0.1e1 * (t2043 * t3492 + t2014 * t3493 + t2017 * t3494 + (t2087 * t3904 - 0.1e1 * t2088 * t3908 + t2297 * t4312 - 0.1e1 * t2298 * t3933 - 0.1e1 * t2310 * t3927 + 0.1e1 * t2179 * t3931 - 0.1e1 * t4461 * t3929 - 0.1e1 * t2461 * t3919 - 0.1e1 * t3649) * t3495 + (t2503 * t2656 + t2565 * t2929 - 0.1000000000e1 * t2566 * t2927 + t2669 * t2750 + t2733 * t2930 - 0.1000000000e1 * t2735 * t2928 - 0.2500000000e0 * t2381) * t4117) * t3495 - 0.1e1 * (t2044 * t3492 + t2010 * t3493 + (t2163 * t3906 + t2200 * t4312 - 0.1e1 * t2201 * t3933 - 0.1e1 * t2241 * t3927 - 0.1e1 * t3851 + (0.1e1 * t2161 * t3399 + t4466 * t3403) * t3913) * t3494 + t2017 * t3495 + (t2490 * t2655 + t2579 * t2719 + t2580 * t2721 + t2669 * t2709 + t2733 * t2796 - 0.1000000000e1 * t2735 * t2797 - 0.2500000000e0 * t2242) * t4120 + (t2400 * t3474 * t3913 + (t2094 - 0.1e1 * t2246) * t3904 + (t2093 - 0.1e1 * t2245) * t3908) * t4148) * t3494 - 0.1e1 * (t2045 * t3492 + (-0.1e1 * t2113 * t3923 + t2114 * t3917 + t2166 * t3824 + t2205 * t4312 - 0.1e1 * t2206 * t3933 - 0.1e1 * t2248 * t3927 + t2360 * t3937 + t4462 * t3729 - 0.1e1 * t2393 * t3925 + t3600) * t3493 + t2010 * t3494 + t2014 * t3495 + (t2495 * t2635 + t2577 * t2714 - 0.1000000000e1 * t2578 * t2715 + t2669 * t2716 + t2733 * t2792 - 0.1000000000e1 * t2735 * t2793 - 0.2500000000e0 * t2213) * t4122) * t3493 - 0.1e1 * (((t2669 * t2707 + t2733 * t2774 - 0.1e1 * t2735 * t2775) * t3524 - 0.1e1 * t2229 * t3933 + t2228 * t4312 - 0.1e1 * t2281 * t3927) * t3492 + t2045 * t3493 + t2044 * t3494 + t2043 * t3495) * t3492 + (-0.1e1 * t3530 * t2923 + t3531 * t2924 + t3529 * t4074) * t3524 - 0.1e1 * ks[4] * t3521 - 0.1e1 * rv[4] * t3492 - 0.1e1 * rc[4] * tanh(t3492 * t4198) + (-0.1e1 * sign(t3480) * t3464 * k_HC - 0.1e1 * d_HC * t3492) * sqrt(t3464) + (t2202 * t3903 * t4387 + (t3399 * t3684 - t3403 * t3683 + t3653 + t4227 - t4279) * t4438 + ((-t3476 * t3684 - t3479 * t3683) * t3475 + t3654 + t4228 + t4277) * t4386 + (t3476 * t3683 - t3479 * t3684 - t2387 + t3655 + t4234) * t4442 - 0.1e1 * (-0.2500000000e0 * t2533 + (t2733 - 0.1000000000e1 * t2734) * t2849 + t3968 * t2735) * t4114 + (0.1e1 * t3833 - 0.1e1 * (-0.1e1 * t3045 - 0.1e1 * t3068) * t3942 - 0.1e1 * (t3043 - 0.1e1 * t3070) * t3941) * t3496) * t3496
    impl_dyn[2, 0] = (p[4] - 0.1e1 * p[5]) * t4200 - 0.1e1 * (t2033 * t3492 + t2040 * t3494 + (-0.1e1 * t3547 + (-0.1e1 * t3100 + t3251) * t3927) * t3496 + (-0.2500000000e0 * t2845 + (t2973 - 0.1000000000e1 * t2974) * t3059) * t4112 + (-0.2500000000e0 * t2693 + (t2858 - 0.1000000000e1 * t2859) * t2943 + (-0.1000000000e1 * t2942 + t2944) * t2860) * t4113 + (-0.2500000000e0 * t2489 + (t2719 - 0.1000000000e1 * t2720) * t2849 + (-0.1000000000e1 * t2848 + t2850) * t2721) * t4114 + ((-0.1e1 * t3571 + t4297) * t3474 - 0.1e1 * t3572) * t4147) * t3496 - 0.1e1 * (t2050 * t3492 + ((t2655 * t2709 + t2719 * t2796 + t2721 * t2797) * t3524 + (t2813 * t2855 + t2858 * t2909 + t2860 * t2910) * t3525 + (t2937 * t2957 + t2973 * t3022 + t2975 * t3023) * t3526) * t3494 + t2040 * t3496 + (0.5000000000e0 * t2959 + t3706) * t4130 + ((t2864 * t3906 - 0.1e1 * t3617) * t3479 + (t2863 * t3906 + t3618) * t3476) * t4148) * t3494 - 0.1e1 * (t2050 * t3494 + t2033 * t3496 + (t2655 * t2707 + t2669 * t2768 + t2719 * t2774 + t2721 * t2775 + t2733 * t2836 - 0.1000000000e1 * t2735 * t2837 - 0.2500000000e0 * t2171) * t4123 + (t2245 * t4312 - 0.1e1 * t2246 * t3933 + t2281 * t3906 - 0.1e1 * t2290 * t3927 - 0.1e1 * t3601 - 0.1e1 * t4298 + (t2228 * t3908 + t2229 * t3904) * t3475) * t3492) * t3492 + (-0.1e1 * t3531 * t4054 - 0.1e1 * t3530 * t4335 + t3529 * (t3453 + t3385)) * t3526 + (t3531 * t3010 - 0.1e1 * t3530 * t4339 + t3529 * (t3248 + t4037)) * t3525 + (-t3531 * t3733 - 0.1e1 * t3530 * t2887 + t3529 * (t4037 + t4069)) * t3524 - 0.1e1 * ks[2] * t4219 - 0.1e1 * rv[2] * t3494 - 0.1e1 * rc[2] * tanh(t3494 * t4198) + ((-0.1e1 * t3580 * t3479 + t3550 - 0.1e1 * t3579 * t3476 + t3549 - 0.1e1 * t2378 - 0.1e1 * t2724 - 0.1e1 * t2542 + (-0.1e1 * t2863 - 0.1e1 * t2925) * t3905 + (t2864 + t2926) * t3909) * t4385 + ((-t2179 * t3924 - t2461 * t3825 - t3918 * t4461) * t3473 + t3627 + t3794 + t4226) * t4387 + (t2135 * t3903 + t2279 * t3902 + t2476 * t3901 + (t3476 * t3614 + t3479 * t3613 + t3619) * t3478 + (t3476 * t3621 + t3479 * t3620 + t3612) * t3475) * t4386 - 0.1e1 * (-0.2500000000e0 * t2710 + t2865 * t2934 + t2902 * t3161 - 0.1000000000e1 * t2903 * t3159 + t2937 * t2993 + t2973 * t3162 + t2975 * t3160) * t4115 - 0.1e1 * (-0.2500000000e0 * t2540 + t2689 * t2816 + t2742 * t3028 - 0.1000000000e1 * t2743 * t3026 + t2813 * t2874 + t2858 * t3029 + t2860 * t3027) * t4116 - 0.1e1 * (-0.2500000000e0 * t2367 + t2484 * t2656 + t2553 * t2929 - 0.1000000000e1 * t2554 * t2927 + t2655 * t2750 + t2719 * t2930 + t2721 * t2928) * t4117 - 0.1e1 * ((t3610 + t3950) * t3478 + t3561 + (-0.1e1 * t2938 + t4246) * t3910) * t4124 - 0.1e1 * ((t3611 - 0.1e1 * t3949) * t3478 + t3560 + (t2940 + t4247) * t3910) * t4138 + (-0.1e1 * t4273 * t3906 + t4270 * t3910) * t3495) * t3495 + (-0.1e1 * sign(t3482) * t3466 * k_HC - 0.1e1 * d_HC * t3494) * sqrt(t3466) + ((t4392 + (-0.1e1 * t3757 - 0.1e1 * t3758 + (-0.1e1 * t2649 - 0.1e1 * t2827) * t4311) * t3475 + t3637 + t3579 * t3403 + t3580 * t3399 + t3575 * t3400 + t3574 * t3404 + t4280) * t4385 + (t3563 + ((-0.1e1 * t2630 - 0.1e1 * t2461) * t3811 + (-0.1e1 * t2311 - 0.1e1 * t2469) * t3912) * t3475 + t3638 + t4475 + (-0.1e1 * t2179 - 0.1e1 * t2302) * t3922) * t4442 + (t2403 * t3902 + t2230 * t3903 + t3705 * t3478 + (t3476 * t3708 + t3479 * t3707) * t3475) * t4386 + ((-t2163 * t3912 - t2388 * t3811) * t3475 + (t2360 * t3924 - t2393 * t3825 - t3918 * t4462) * t3473 + t3747 + t3669 + t4223) * t4387 - 0.1e1 * (-0.2500000000e0 * t2307 + t2813 * t2851 + t2823 * t2876 + t2858 * t2885 + t2860 * t2886 + t2867 * t2911 - 0.1000000000e1 * t2868 * t2912) * t4121 - 0.1e1 * (-0.2500000000e0 * t2145 + t2635 * t2763 + t2655 * t2716 + t2714 * t2818 - 0.1000000000e1 * t2715 * t2819 + t2719 * t2792 + t2721 * t2793) * t4122 + t3594 * t4166 - 0.1e1 * t3595 * t4173 + (-0.1e1 * (-0.1e1 * t3474 * t3585 + t3476 * t3710 + t3479 * t3709 + 0.1e1 * t3622) * t3475 - 0.1e1 * t4360 * t3921 - 0.1e1 * t4359 * t3915 - 0.1e1 * t4278 * t3906) * t3493) * t3493
    impl_dyn[0, 0] = (p[0] - 0.1e1 * p[1]) * t4200 - 0.1e1 * (t2394 * t3492 + ((0.4e1 * t2942 - 0.4e1 * t2944) * t2943 * t3902 + (0.4e1 * t2848 - 0.4e1 * t2850) * t2849 * t3903) * t3496) * t3496 - 0.1e1 * (t2394 * t3496 + (t2733 * t2923 - 0.1000000000e1 * t2735 * t2924 + t2774 * t2848 - 0.1000000000e1 * t2775 * t2849 - 0.2500000000e0 * t2202) * t4123 + (-0.1e1 * t2678 - 0.1e1 * t4343 * t3933 + t4344 * t4312) * t3492) * t3492 + ((-0.1e1 * t3479 * t3489 + (-0.1e1 * t3490 - 0.1e1 * t4220) * t3476) * t3531 + (-0.1e1 * t3476 * t3489 + t3479 * t3490 + t3463) * t3530) * m[0] + (t3216 * t3531 + t3217 * t3530) * t3527 + (-0.1e1 * t3059 * t3530 + t3531 * t4241) * t3526 + (-0.1e1 * t2943 * t3530 + t2944 * t3531) * t3525 + (-0.1e1 * t2849 * t3530 + t2850 * t3531) * t3524 - 0.1e1 * ks[0] * t3523 - 0.1e1 * rv[0] * t3496 - 0.1e1 * rc[0] * tanh(t3496 * t4198) + ((t2845 * t3901 + t2693 * t3902 + t2489 * t3903 + ((-0.1e1 * t4297 + t3571) * t3474 + t3572) * t3475 + t3547 + (t3100 - 0.1e1 * t3251) * t3927) * t4385 + (t3654 + t3792 - 0.1e1 * t4228) * t4387 + (t3565 + t3637 - 0.1e1 * t4392) * t4438 - 0.1e1 * (t2973 * t4335 - 0.1e1 * t2975 * t4054 + t3022 * t4241 - 0.1000000000e1 * t3023 * t3059) * t4118 - 0.1e1 * (t2858 * t4339 + t2860 * t3010 + t2909 * t2942 - 0.1000000000e1 * t2910 * t2943) * t4119 - 0.1e1 * (t2719 * t2887 - 0.1e1 * t2721 * t3733 + t2796 * t2848 - 0.1000000000e1 * t2797 * t2849) * t4120 - 0.1e1 * ((-0.1e1 * t3558 + t3947) * t3479 + (-0.1e1 * t3559 + t3948) * t3476 + t4309 * t3904 + t4310 * t3908) * t4148 + (-0.1e1 * t2648 - 0.1e1 * t2959 - 0.1e1 * t2826) * t3494 + 0.2500000000e0 * t2196 * t4120 - 0.2500000000e0 * t2560 * t4118 - 0.2500000000e0 * t2362 * t4119) * t3494 + (-0.1e1 * sign(t3484) * t3468 * k_HC - 0.1e1 * d_HC * t3496) * sqrt(t3468) + ((t2502 * t3903 + t2691 * t3902 + t2854 * t3901 + t3678 * t3401 + (t4295 - 0.1e1 * t3570) * t3478 + (t4296 - 0.1e1 * t3569) * t3475 + t3543 + (t3053 - 0.1e1 * t3153) * t3927) * t4385 + (t3603 + t3549 + ((-0.1e1 * t2449 - 0.1e1 * t2770) * t3905 + (-0.1e1 * t2448 + t2771) * t3909) * t3475 + (-0.1e1 * t2417 + t2706) * t3905 - t4476) * t4386 + (t3566 + t3667 + t4283) * t4438 + (t3655 + t3885 - 0.1e1 * t4234) * t4387 - 0.1e1 * (t2942 * t3029 - 0.1000000000e1 * t2943 * t3027 + t3007 * t3028 - 0.1000000000e1 * t3008 * t3026) * t4116 - 0.1e1 * (-0.2500000000e0 * t2319 + t2848 * t2930 - 0.1000000000e1 * t2849 * t2928 + t2897 * t2929 - 0.1000000000e1 * t2898 * t2927) * t4117 - 0.1e1 * (t3162 * t4241 - 0.1000000000e1 * t3160 * t3059 - 0.1000000000e1 * t3161 * t3131 - 0.1000000000e1 * t3159 * t3132) * t4115 - 0.1e1 * (-0.1e1 * t3546 + t3950 - 0.1e1 * t3865 * t3904 + (-0.1e1 * t3335 + t3389) * t3906 + (-0.1e1 * t3333 - 0.1e1 * t3391) * t3910 + 0.5000000000e0 * t4441) * t4124 - 0.1e1 * (t3545 - 0.1e1 * t3949 - 0.1e1 * t3865 * t3908 + (t3341 - 0.1e1 * t3392) * t3906 + t4043 * t3910 - 0.5000000000e0 * t2682 - 0.5000000000e0 * t2515 - 0.5000000000e0 * t2574 - 0.5000000000e0 * t2749 - 0.5000000000e0 * t2896) * t4138 - 0.1e1 * (t3311 * t3216 + t3309 * t3217 + t3310 * t3295 - 0.1000000000e1 * t3308 * t3296) * t3495 * t3527) * t3495 + ((t2530 * t3903 + t2702 * t3902 + t3598 + t4299 - t4300) * t4385 + (t3653 + t3793 - t4227) * t4387 - 0.1e1 * (-0.2500000000e0 * t2377 + t2867 * t4331 - 0.1000000000e1 * t2868 * t3025 + t2885 * t2942 - 0.1000000000e1 * t2886 * t2943) * t4121 - 0.1e1 * (t2714 * t2921 - 0.1000000000e1 * t2715 * t2922 + t2792 * t2848 - 0.1000000000e1 * t2793 * t2849 - 0.2500000000e0 * t2195) * t4122 - 0.5000000000e0 * t4316 * t4166 - 0.5000000000e0 * (-0.1e1 * t2531 - 0.1e1 * t2602 - 0.1e1 * t2722 - 0.1e1 * t2794) * t4173 + (-0.1e1 * t2633 - 0.1e1 * t2839) * t3493) * t3493
    impl_dyn[1, 0] = (p[2] - 0.1e1 * p[3]) * t4200 - 0.1e1 * (t2036 * t3492 + t2042 * t3495 + t3026 * t3967 * t4113 + t2927 * t3968 * t4114 + (-0.1e1 * t4296 + t3569) * t4147 + (-0.1e1 * t3543 + (-0.1e1 * t4295 + t3570) * t3478 + (-0.1e1 * t3053 + t3153) * t3927 + (-0.1e1 * t3044 + t3144) * t3919) * t3496 - 0.2500000000e0 * t2854 * t4112 - 0.2500000000e0 * t2691 * t4113 - 0.2500000000e0 * t2502 * t4114) * t3496 - 0.1e1 * (t2042 * t3496 + t2074 * t3492 + (t3527 * (t3310 * t3311 - 0.1e1 * t3308 * t3309 + (-0.1e1 * t3476 * (t3476 * t3868 + t4125) + t4236 * t3479 - 0.1e1 * t3887) * (-0.1e1 * t3476 * (-0.1e1 * t3476 * t4149 + t3446) - 0.1e1 * t3479 * (-0.1e1 * t3479 * t4149 + t3449) + t4034)) + (t2934 * t2993 - 0.1e1 * t3159 * t3160 + t3161 * t3162) * t3526 + (t2816 * t2874 - 0.1e1 * t3026 * t3027 + t3028 * t3029) * t3525 + (t2656 * t2750 - 0.1e1 * t2927 * t2928 + t2929 * t2930) * t3524 + (-0.1e1 * t3470 * t3393 - 0.1e1 * (-0.1e1 * t3390 * t3476 + t4221) * t3479 - 0.1e1 * t4246) * t3908 + (t3390 * t3471 + (-0.1e1 * t3393 * t3479 + t4221) * t3476 + t4247) * t3904) * t3495) * t3495 - 0.1e1 * ((t2228 * t3904 - 0.1e1 * t2229 * t3908 + t2324 * t4312 - 0.1e1 * t2325 * t3933 - 0.1e1 * t2374 * t3927 - 0.1e1 * t3548) * t3492 + t2074 * t3495 + t2036 * t3496 + (t2656 * t2707 + t2669 * t2783 + t2733 * t3000 - 0.1000000000e1 * t2735 * t2999 + t2774 * t2929 - 0.1000000000e1 * t2775 * t2927 - 0.2500000000e0 * t2169) * t4123) * t3492 + (-0.1e1 * t3530 * t3295 + t3531 * t3296 + t3529 * t3753) * t3527 + (t3530 * t3131 + t3531 * t3132 + (t3478 * t3720 + t4035) * t3529) * t3526 + (t3531 * t3008 - 0.1e1 * t3530 * t3007 + t3529 * (t3452 + t3142) - 0.1e1 * t3644) * t3525 + (t3531 * t2898 - 0.1e1 * t3530 * t2897 + t3529 * (t3452 + t4081) - 0.1e1 * t3644) * t3524 - 0.1e1 * ks[1] * t3522 - 0.1e1 * rv[1] * t3495 - 0.1e1 * rc[1] * tanh(t3495 * t4198) + (-0.1e1 * sign(t3483) * t3467 * k_HC - 0.1e1 * d_HC * t3495) * sqrt(t3467) + ((t3603 + t3550 + (0.5000000000e0 * t3038 + t3581 * t3479 - 0.1e1 * t3582 * t3476 + 0.1e1 * t3679 + (-0.1e1 * t2853 - 0.1e1 * t2896) * t3905 + (-0.1e1 * t2852 - 0.1e1 * t2895) * t3909) * t3475 + (-0.5000000000e0 * t2931 - 0.1e1 * t4290 - 0.1e1 * t4294 - t3682 + (-0.1e1 * t2940 - 0.1e1 * t2996) * t3905 + (-0.1e1 * t2938 + t2995) * t3909) * t3478 + t4248) * t4385 + (t2367 * t3903 + t2540 * t3902 + t2710 * t3901 - t3476 * t3615 + t3479 * t3616) * t4442 + (t3602 * t3478 + (-t2087 * t3909 - t2088 * t3905 + 0.2500000000e0 * t2388) * t3475 + t3725 + t3794 + t4225) * t4387 - 0.1e1 * (-0.2500000000e0 * t2476 + t2957 * t2934 + t2937 * t2958 + t2973 * t3227 + t2975 * t3226 + t3022 * t3161 - 0.1000000000e1 * t3023 * t3159) * t4118 - 0.1e1 * (-0.2500000000e0 * t2279 + t2813 * t2871 + t2855 * t2816 + t2858 * t3109 + t2860 * t3108 + t2909 * t3028 - 0.1000000000e1 * t2910 * t3026) * t4119 - 0.1e1 * (-0.2500000000e0 * t2135 + t2655 * t2725 + t2656 * t2709 + t2719 * t2962 + t2721 * t2961 + t2796 * t2929 - 0.1000000000e1 * t2797 * t2927) * t4120 - 0.1e1 * ((-0.1e1 * t3613 + t3948) * t3479 + (-0.1e1 * t3614 - 0.1e1 * t3947) * t3476 - 0.1e1 * t3619 + 0.5000000000e0 * t4405) * t4130 - 0.1e1 * (-0.1e1 * t3476 * t3561 + t3479 * t3560 - 0.1e1 * t3612) * t4148 + (-0.1e1 * t3617 * t3476 - 0.1e1 * t3618 * t3479) * t3494) * t3494 + ((t3581 * t3403 + t3582 * t3399 + (-t3679 * t3478 + (-t3682 - t4290 - t4294) * t3475) * t3474 - t4283 + t3667 + t4281) * t4385 + (t2380 * t3903 + t2541 * t3902 - t3476 * t3703 + t3479 * t3704) * t4442 + (t3597 + (-0.1e1 * t4359 * t3905 + (-0.1e1 * t2400 - 0.1e1 * t2555) * t3912 + 0.2500000000e0 * (-0.1e1 * t2360 - 0.1e1 * t2506) * t3476 - 0.2500000000e0 * t2268 - 0.2500000000e0 * t2149) * t3478 + ((-0.1e1 * t4470 * t3905 + (t2161 - 0.1e1 * t2522) * t3909) * t3474 + (-0.1e1 * t2110 - 0.1e1 * t2219) * t3905 + (-0.1e1 * t2109 - 0.1e1 * t2218) * t3909 + (-0.1e1 * t2159 - 0.1e1 * t2273) * t3912 - 0.2500000000e0 * t4345) * t3475 + t3638 + t4390) * t4386 + ((-t2388 * t3907 + t3475 * t3602) * t3474 + t3724 + t3795 + t4222) * t4387 - 0.1e1 * t3592 * t4166 - 0.1e1 * t3593 * t4173 - 0.1e1 * (-0.2500000000e0 * t2282 + t2816 * t2851 + t2823 * t2882 + t2867 * t3064 - 0.1000000000e1 * t2868 * t3063 + t2885 * t3028 - 0.1000000000e1 * t2886 * t3026) * t4121 - 0.1e1 * (-0.2500000000e0 * t2121 + t2635 * t2777 + t2656 * t2716 + t2714 * t2966 - 0.1000000000e1 * t2715 * t2965 + t2792 * t2929 - 0.1000000000e1 * t2793 * t2927) * t4122 + (-0.1e1 * (-0.1e1 * t2206 - 0.1e1 * t2398) * t3908 - 0.1e1 * t4413 * t3904 - 0.1e1 * (0.1e1 * t4287 + (-0.1e1 * t4293 - 0.1e1 * t4289 - 0.1e1 * t3712) * t3475 + t4272 * t3910) * t3474) * t3493) * t3493
    impl_dyn[3, 0] = (p[6] - 0.1e1 * p[7]) * t4200 - 0.1e1 * (t2028 * t3492 + t2041 * t3493 + t2023 * t3494 + (-0.2500000000e0 * t2702 + (-0.1000000000e1 * t2866 + t2867) * t2943 + t3967 * t2868) * t4113 + (-0.2500000000e0 * t2530 + (-0.1000000000e1 * t2713 + t2714) * t2849 + t3968 * t2715) * t4114 + (-0.1e1 * t3598 - 0.1e1 * t4299 + t4300) * t3496) * t3496 - 0.1e1 * (t2011 * t3492 + t2039 * t3493 + ((-0.1e1 * t2200 - 0.1e1 * t2375) * t3923 - 0.1e1 * t4349 * t3921 + (t2201 + t2376) * t3917 - 0.1e1 * t4470 * t3915) * t3494 + t2023 * t3496 + (-0.2500000000e0 * t2403 + t2708 * t2813 + t2790 * t2858 + t2791 * t2860 + t2823 * t2855 + t2867 * t2909 - 0.1000000000e1 * t2868 * t2910) * t4119 + (-0.2500000000e0 * t2230 + t2483 * t2655 + t2575 * t2719 + t2576 * t2721 + t2635 * t2709 + t2714 * t2796 - 0.1000000000e1 * t2715 * t2797) * t4120 + t3585 * t4130 + (t3474 * t3706 + t3476 * t3595 + t3479 * t3594 + t3810 * t4358) * t4148) * t3494 - 0.1e1 * (t2039 * t3494 + t2041 * t3496 + t2049 * t3492 + ((4 * t2851 * t2823 + 0.4e1 * t2867 * t2885 - 0.4e1 * t2868 * t2886) * t3902 + (t2716 * t4209 + 0.4e1 * t2714 * t2792 - 0.4e1 * t2715 * t2793) * t3903 + t3709 * t3403 - 0.1e1 * t3710 * t3399 + 0.5000000000e0 * t4278 * t4161) * t3493) * t3493 - 0.1e1 * ((-0.1e1 * t2228 * t3923 + t2229 * t3917 + t2237 * t4312 - 0.1e1 * t2238 * t3933 + t2281 * t3824 - 0.1e1 * t2286 * t3927 - 0.1e1 * t4460 * t3729 - 0.1e1 * t3554) * t3492 + t2049 * t3493 + t2011 * t3494 + t2028 * t3496 + (t2635 * t2707 + t2669 * t2745 + t2714 * t2774 - 0.1000000000e1 * t2715 * t2775 + t2733 * t2810 - 0.1000000000e1 * t2735 * t2811 - 0.2500000000e0 * t2170) * t4123) * t3492 + (-0.1e1 * t3530 * t4331 + t3531 * t3025 - 0.1e1 * t3529 * t4056) * t3525 + (t3531 * t2922 - 0.1e1 * t3530 * t2921 + t3529 * (t3084 + t3429) + (t3397 * t4199 - 0.1e1 * t3991) * t4025) * t3524 - 0.1e1 * ks[3] * t4218 - 0.1e1 * rv[3] * t3493 - 0.1e1 * rc[3] * tanh(t3493 * t4198) + (-0.1e1 * sign(t3481) * t3465 * k_HC - 0.1e1 * d_HC * t3493) * sqrt(t3465) + ((t3476 * t3577 + t3479 * t3578 + t3566 + t4271 - t4283) * t4385 + (t3628 - t4337) * t4387 + (t2121 * t3903 + t2282 * t3902 + t3716 * t3403 - t3717 * t3399 + (-t4287 + (t3712 + t4289 + t4293) * t3475) * t3474) * t4438 + (t3597 + t3563 + ((-0.1e1 * t2306 - 0.1e1 * t2471) * t3479 + (-0.1e1 * t2305 - 0.1e1 * t2470) * t3476) * t3911 - t4389) * t4386 - 0.1e1 * t3593 * t4124 - 0.1e1 * t3592 * t4138 - 0.1e1 * (t2686 * t2816 + t2738 * t3028 - 0.1000000000e1 * t2739 * t3026 + t2823 * t2874 + t2867 * t3029 - 0.1000000000e1 * t2868 * t3027 - 0.2500000000e0 * t2541) * t4116 - 0.1e1 * (-0.2500000000e0 * t2380 + t2477 * t2656 + t2547 * t2929 - 0.1000000000e1 * t2548 * t2927 + t2635 * t2750 + t2714 * t2930 - 0.1000000000e1 * t2715 * t2928) * t4117 + (-0.1e1 * t4274 * t3917 - 0.1e1 * t4275 * t3923 - 0.1e1 * ((-t3476 * t3694 + t3479 * t3692) * t3475 + t4270 * t3906 + t4273 * t3910) * t3474) * t3495) * t3495
    if notorch:
        return torch.tensor(impl_dyn,dtype=torch.get_default_dtype()),torch.tensor(Mass,dtype=torch.get_default_dtype())
    return impl_dyn,Mass

def SimplePlot(fSize,xData,yData,yLeg,LineStyles,title,xLabel,yLabel,fPath,nSubPlots,
               idx=None,transparent=False,logy=False,sciy=False,text_flag=False,text=None,textpos=None,
               change_colors=None,uniform_ylim=None,pad=None):
    plt.rcParams.update({'ytick.labelsize': 20, 'xtick.labelsize': 20})
    if pad is None:
        pad=0.15
    if change_colors is not None:
        imescolor=change_colors
    else:
        imescolor=[imesblau,imesorange,imesgruen,schwarz,grau]
    if transparent:
        alpha_plot=0.5
    else:
        alpha_plot=1
    if nSubPlots==1:
        plt.figure(figsize=fSize)
        for i in range(np.size(yData,1)):
            try:
                plt.plot(xData[0:idx],yData[0:idx,i],LineStyles[i],label=yLeg[i],color=imescolor[i],alpha=alpha_plot)
            except:
                #rnd colors
                plt.plot(xData[0:idx],yData[0:idx,i],LineStyles[i],label=yLeg[i],alpha=alpha_plot)
        plt.title(title)
        if logy: 
            plt.yscale('log')
        elif sciy:
            plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
        plt.ylabel(yLabel)
        plt.xlabel(xLabel)
        plt.legend(numpoints=1, loc='best')
        plt.grid(True)
        plt.savefig(fPath,bbox_inches='tight')
        plt.close()
    else:
        fig, axs = plt.subplots(nSubPlots,figsize=fSize)
        fig.suptitle(title)
        temp=0
        plots_per_subplot=int(np.size(yData,1)/nSubPlots)
        for i in range(nSubPlots):
            for j in range(plots_per_subplot):
                axs[i].plot(xData[0:idx],yData[0:idx,temp],LineStyles[j],label=yLeg[j],color=imescolor[j],alpha=alpha_plot)
                temp+=1
                axs[i].set(xlabel=xLabel,ylabel=yLabel[i])
                if logy: 
                    axs[i].set_yscale('log')
                elif sciy:
                    axs[i].ticklabel_format(style='sci', axis='y', scilimits=(0,0))
            axs[i].grid(True)
            if text_flag:
                axs[i].annotate(text[i],xy=textpos, xycoords='axes fraction',ha="right",backgroundcolor="w",fontsize="small")
            if uniform_ylim is not None:
                axs[i].set(ylim=(uniform_ylim[0],uniform_ylim[1]))
        axs[0].legend(ncol=plots_per_subplot,loc='lower center',bbox_to_anchor=(0.5, 1.01))
        for ax in fig.get_axes():
            ax.label_outer()
        try:
            plt.tight_layout(pad=pad)
        except:
            donothing=0
        fig.savefig(fPath,bbox_inches='tight')
        plt.close()

def calcRedFdyn(q,p,n_akt,g_KS0,mE,notorch=False,change_params=False,rv_=None,ks_=None):
    if change_params:
        try: params=GetParams(n_akt,mE.detach().numpy())
        except: params=GetParams(n_akt,mE)
        rv=rv_
        ks=ks_
    else:
        params=GetParams(n_akt)
    m=params["m"]
    if notorch:
        fdyn_red=np.zeros([n_akt,1])
        from math import sin,cos
    else:
        from math import sin,cos
        fdyn_red=torch.zeros([n_akt,1])
        m=torch.tensor(m)
        rv=rv.reshape(n_akt)
        ks=ks.reshape(n_akt)
        
    l=params["h"]
    
    #rS
    rS=params["rS"]
    rS1=rS[0]
    rS2=rS[1]
    rS3=rS[2]
    rS4=rS[3]
    rS5=rS[4]
    g=g_KS0
    #eta_p=Ap*rp
    Ap=params["eta_p"]
    rp=1
    
    #MAPLE
    t2961 = q[0]
    t2937 = sin(t2961)
    t2959 = q[2]
    t2935 = sin(t2959)
    t2960 = q[1]
    t2941 = cos(t2960)
    t3005 = t2941 * t2935
    t2989 = t2937 * t3005
    t2940 = cos(t2959)
    t2942 = cos(t2961)
    t3001 = t2942 * t2940
    t2915 = t2989 - t3001
    t2957 = q[4]
    t2938 = cos(t2957)
    t3025 = t2915 * t2938
    t3002 = t2942 * t2935
    t3003 = t2941 * t2940
    t2916 = t2937 * t3003 + t3002
    t2958 = q[3]
    t2934 = sin(t2958)
    t2936 = sin(t2960)
    t3016 = t2936 * t2934
    t2925 = t2937 * t3016
    t2939 = cos(t2958)
    t2900 = t2916 * t2939 - t2925
    t2933 = sin(t2957)
    t3031 = t2900 * t2933
    t3042 = t3025 + t3031
    t3026 = t2915 * t2933
    t3030 = t2900 * t2938
    t3041 = t3026 - t3030
    t3040 = t2941 * t2934
    t2968 = g[1]
    t3015 = t2936 * t2939
    t2977 = -t2916 * t2934 - t2937 * t3015
    t3039 = t2968 * t2977
    t3010 = t2937 * t2935
    t2920 = t2941 * t3001 - t3010
    t3014 = t2936 * t2942
    t2903 = t2920 * t2934 + t2939 * t3014
    t2969 = g[0]
    t3038 = t2969 * t2903
    t3036 = t2968 * t2937 + t2969 * t2942
    t3037 = t3036 * t3040
    t2945 = rS5[0]
    t2943 = rS5[2]
    t3019 = t2933 * t2943
    t3035 = t2938 * t2945 - t3019
    t2967 = g[2]
    t3034 = t3036 * t2936 + t2967 * t2941
    t3033 = Ap * rp
    t3032 = t2938 / 2
    t2988 = t2934 * t3014
    t2904 = t2920 * t2939 - t2988
    t3029 = t2904 * t2933
    t3028 = t2904 * t2938
    t3006 = t2940 * t2939
    t2914 = t2936 * t3006 + t3040
    t3027 = t2914 * t2933
    t3024 = t2916 * t2933
    t2919 = -t2937 * t2940 - t2941 * t3002
    t3023 = t2919 * t2933
    t3022 = t2919 * t2938
    t3021 = t2920 * t2933
    t3020 = t2933 * t2939
    t2944 = rS5[1]
    t3018 = t2934 * t2944
    t3017 = t2935 * t2936
    t2950 = rS3[1]
    t3013 = t2936 * t2950
    t2952 = rS2[2]
    t3012 = t2936 * t2952
    t2966 = l[0]
    t3011 = t2936 * t2966
    t3009 = t2938 * t2939
    t3007 = t2939 * t2966
    t3004 = t2941 * t2939
    t2932 = t2942 * t2966
    t3000 = t2967 * t2936
    t2997 = -t2916 * t3007 + t2966 * t2925
    t2929 = t2941 * t2932
    t2996 = t2929 + t2932
    t2954 = rS2[0]
    t2995 = -t2954 - t2966
    t2994 = t2945 + t2966 / 2
    t2947 = rS4[1]
    t2993 = t2947 * t3017
    t2992 = t2933 * t3017
    t2991 = t2938 * t3017
    t2927 = t2935 * t3011
    t2990 = t2940 * t3016
    t2987 = -t3025 / 2
    t2986 = t3022 / 2
    t2985 = t2940 * t2929 + t2996
    t2984 = t2967 * (t2939 + 1) * t2927
    t2983 = t2920 * t3007 + t2985
    t2982 = -t2940 - 1 - t3006
    t2946 = rS4[2]
    t2948 = rS4[0]
    t2981 = t2934 * t2946 + t2939 * t2948
    t2980 = t2941 * t2954 + t3012
    t2928 = t2940 * t2932
    t2978 = -t2966 * t2989 + t2928
    t2976 = -t2988 - t3010
    t2913 = t2990 - t3004
    t2972 = t2919 * t2966
    t2949 = rS3[2]
    t2951 = rS3[0]
    t2971 = t2935 * t2949 - t2966 + (-t2951 - t2966) * t2940
    t2970 = -t2937 * t2941 - t2916 - t2937
    t2965 = m[1]
    t2964 = m[2]
    t2963 = m[3]
    t2962 = m[4]
    t2956 = rS1[0]
    t2955 = rS1[2]
    t2953 = rS2[1]
    t2926 = t2934 * t3011
    t2922 = t2966 * t2990
    t2918 = -t2939 * t3003 + t3016
    t2917 = t2934 * t3003 + t3015
    t2911 = t2919 * t3007
    t2909 = t2915 * t3007
    t2908 = t2914 * t2942
    t2907 = t2913 * t2942
    t2906 = t2914 * t2937
    t2905 = t2913 * t2937
    t2898 = t3023 + t3028
    t2897 = t3022 - t3029
    fdyn_red[1, 0] = 0.1e1 / rv[1] * ((p[2] - p[3]) * t3033 + t2965 * (t2967 * (t2995 * t2941 - t3012) + t3036 * (t2995 * t2936 + t2941 * t2952)) + t2964 * ((-t2950 * t3036 + t2967 * t2971) * t2941 + (t2967 * t2950 + t3036 * t2971) * t2936) + t2963 * (t2969 * (-t2907 * t2946 - t2908 * t2948 + t2942 * t2993) + t2968 * (-t2905 * t2946 - t2906 * t2948 + t2937 * t2993) + t2967 * (-t2917 * t2946 + t2918 * t2948 + t2947 * t3005 + t2926) + (t3034 * t2982 - t3037) * t2966) + t2962 * (t2969 * ((-t2908 * t2938 + t2942 * t2992) * t2945 + t2907 * t2944 + (t2908 * t2933 + t2942 * t2991) * t2943) + t2968 * ((-t2906 * t2938 + t2937 * t2992) * t2945 + t2905 * t2944 + (t2906 * t2933 + t2937 * t2991) * t2943) + t2967 * ((t2918 * t2938 + t2933 * t3005) * t2945 + t2917 * t2944 + (-t2918 * t2933 + t2938 * t3005) * t2943 + t2926) + ((-t2969 * t2908 / 2 - t2968 * t2906 / 2 + t2967 * t2918 / 2) * t2938 - t3037 + t3034 * (t2933 * t2935 / 2 + t2982)) * t2966) - ks[1] * t2960)
    fdyn_red[0, 0] = 0.1e1 / rv[0] * ((p[0] - p[1]) * t3033 + m[0] * (t2969 * (-t2942 * t2955 + (-t2956 - t2966) * t2937) + t2968 * (-t2937 * t2955 + t2942 * t2956 + t2932)) + t2965 * (t2968 * t2996 + (-t2969 * t2953 + t2968 * t2980) * t2942 + (t2969 * (-t2941 * t2966 - t2966 - t2980) - t2968 * t2953) * t2937) + t2964 * (t2969 * (t2915 * t2949 - t2916 * t2951 - t2935 * t2932) + t2968 * (t2919 * t2949 + t2920 * t2951 - t2942 * t3013 + t2985) + (t2969 * t3013 + (t2969 * (-t2941 - 1 - t3003) - t2968 * t2935) * t2966) * t2937) + t2963 * (t2969 * (-t2900 * t2948 + t2915 * t2947 + t2946 * t2977 + t2997) + t2968 * (t2903 * t2946 + t2904 * t2948 + t2919 * t2947 + t2983) + (t2968 * t2976 + t2969 * t2970) * t2966) + t2962 * (t2969 * (t3042 * t2943 - t2977 * t2944 + t3041 * t2945 + t2997) + t2968 * (t2897 * t2943 + t2898 * t2945 - t2903 * t2944 + t2983) + (t2969 * (-t3030 / 2 + t3026 / 2 + t2970) + t2968 * (t3028 / 2 + t3023 / 2 + t2976)) * t2966) - ks[0] * t2961)
    fdyn_red[3, 0] = 0.1e1 / rv[3] * ((p[6] - p[7]) * t3033 + t2963 * (t2969 * (-t2903 * t2948 + t2904 * t2946) + t2968 * (t2900 * t2946 + t2948 * t2977) + t2967 * (t2913 * t2948 - t2914 * t2946 + t2922) + (-t2967 * t3004 - t3038 + t3039) * t2966) + t2962 * (t2969 * (-t3035 * t2903 - t2904 * t2944) + t2968 * (-t2900 * t2944 + t3035 * t2977) + t2967 * (t3035 * t2913 + t2914 * t2944 + t2922) + ((-t2938 / 2 - 1) * t3038 + t2967 * (t2913 * t3032 - t3004) + (t3032 + 1) * t3039) * t2966) - ks[3] * t2958)
    fdyn_red[2, 0] = 0.1e1 / rv[2] * ((p[4] - p[5]) * t3033 + t2964 * (t2969 * (t2919 * t2951 - t2920 * t2949 + t2972) + t2968 * (-t2915 * t2951 - t2916 * t2949 + t2978) + t2967 * (t2927 + (t2935 * t2951 + t2940 * t2949) * t2936)) + t2963 * (t2969 * (t2981 * t2919 - t2920 * t2947 + t2911 + t2972) + t2968 * (-t2981 * t2915 - t2916 * t2947 - t2909 + t2978) + t2984 + (t2981 * t2935 + t2940 * t2947) * t3000) + t2962 * (t2969 * ((t2919 * t3009 - t3021) * t2945 - t2919 * t3018 + (-t2919 * t3020 - t2920 * t2938) * t2943 + t2911) + t2968 * ((-t2915 * t3009 - t3024) * t2945 + t2915 * t3018 + (t2915 * t3020 - t2916 * t2938) * t2943 - t2909 + t2928) + t2984 + (t2969 * (t2939 * t2986 - t3021 / 2 + t2919) + t2968 * (t2939 * t2987 - t3024 / 2 - t2989)) * t2966 + ((t2994 * t2933 + t2938 * t2943) * t2940 + (-t3018 + (t2994 * t2938 - t3019) * t2939) * t2935) * t3000) - ks[2] * t2959)
    fdyn_red[4, 0] = 0.1e1 / rv[4] * ((p[8] - p[9]) * t3033 + t2962 * (t2969 * (t2897 * t2945 - t2898 * t2943) + t2968 * (t3041 * t2943 - t3042 * t2945) + t2967 * ((t2991 + t3027) * t2945 + (t2914 * t2938 - t2992) * t2943) + (t2969 * (-t3029 / 2 + t2986) + t2968 * (-t3031 / 2 + t2987) + t2967 * (t3027 / 2 + t2991 / 2)) * t2966) - ks[4] * t2957)
    return fdyn_red

def sim_dyn_nl_red(x_k_phys_raw,u_k_phys_raw,t_sample,n_akt,mE,g,with_HC,neglect_p_dyn,change_params=False,rv_=None,ks_=None,
                  hc_params_vec_=None,with_rc=False,qd_old=None,rc_=None,qd_c=None,implicit_flag=False):
    params=GetParams(n_akt,mE)
    if change_params:
        rv=rv_
        ks=ks_
        hc_params_vec=hc_params_vec_
        rc=rc_
    else:
        rv=params["rv"]
        ks=params["ks"]
        hc_params_vec=np.array([params["hc_params"]["k_HC"],params["hc_params"]["d_HC"]]).reshape((2,1))
        rc=params["rc"]        
    alpha_p=params["alpha_p"]
    t_s=t_sample/1#smaller step sizes possible
    steps=int(t_sample/t_s)
    for iter in range(steps):
        x_k_phys_raw=x_k_phys_raw.reshape(3*n_akt)
        if neglect_p_dyn:
            p=u_k_phys_raw
        else:
            pd=alpha_p*(u_k_phys_raw-x_k_phys_raw[n_akt:])
            p=pd*t_s+x_k_phys_raw[n_akt:]
        if implicit_flag:
            qd, _, ier, mesg = fsolve(implicitConstraint, qd_old, args=(x_k_phys_raw[:n_akt],p,n_akt,g,mE,hc_params_vec,rv,rc,
                                                                     ks,qd_c), full_output=True,xtol=1e-3)
            if ier != 1:
                print ("Didn't solve the algebraic constraint, error:\n\n", mesg)
                sys.stdout.flush()
        else:
            if with_HC:
                qd=np.transpose(calcRedFdyn_HC(x_k_phys_raw[:n_akt],p,n_akt,g,mE,True,True,change_params,rv,
                                               ks,hc_params_vec))
            else:
                qd=np.transpose(calcRedFdyn(x_k_phys_raw[:n_akt],p,n_akt,g,mE,True,change_params,rv,
                                            ks))
            if with_rc:
                qd=qd-np.multiply(rc/rv,np.tanh(qd_old*math.pi/qd_c).reshape((n_akt,1))).reshape((1,n_akt))#tanh
        qd_old=copy.copy(qd)
        q=qd*t_s+x_k_phys_raw[:n_akt]
        x_k_phys_raw=np.hstack((q.reshape(n_akt),p.reshape(2*n_akt)))
    y_pred_phys_raw=np.hstack([q.reshape((1,n_akt)),p.reshape((1,2*n_akt))])
    return y_pred_phys_raw, qd_old